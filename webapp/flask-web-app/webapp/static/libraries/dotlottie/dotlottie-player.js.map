{"version":3,"sources":["../../../node_modules/.pnpm/@preact+signals-core@1.3.0/node_modules/@preact/signals-core/src/index.ts","../../common/src/store.ts","../../common/src/utils.ts","../../common/dist/chunk-ON5OQYWL.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/css-syntax-error.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/stringifier.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/stringify.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/node.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/input.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/map-generator.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/comment.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/container.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/tokenize.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/list.js","../../../node_modules/.pnpm/postcss@8.4.24/node_modules/postcss/lib/postcss.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/css-syntax-error.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/input.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/stringifier.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/stringify.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/node.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/tokenize.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/list.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/rule.js","../../../node_modules/.pnpm/postcss@8.4.21/node_modules/postcss/lib/parser.js","../../../node_modules/.pnpm/@humanwhocodes+momoa@2.0.3/node_modules/@humanwhocodes/momoa/api.js","../../../node_modules/.pnpm/is-buffer@2.0.5/node_modules/is-buffer/index.js","../../../node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","../../../node_modules/.pnpm/lottie-web@5.12.2/node_modules/lottie-web/build/player/lottie.js","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/css-tag.ts","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/reactive-element.ts","../../../node_modules/.pnpm/lit-html@2.7.4/node_modules/lit-html/src/lit-html.ts","../../../node_modules/.pnpm/lit-element@3.3.2/node_modules/lit-element/src/lit-element.ts","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/decorators/property.ts","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/decorators/state.ts","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/decorators/base.ts","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/decorators/query.ts","../../../node_modules/.pnpm/@lit+reactive-element@1.6.2/node_modules/@lit/reactive-element/src/decorators/query-assigned-elements.ts","../package.json","../src/dotlottie-player.styles.ts","../src/dotlottie-player.ts"],"names":["cycleDetected","Error","endBatch","batchDepth","error","hasError","batchedEffect","o","batchIteration","effect","next","_nextBatchedEffect","_flags","needsToRecompute","_callback","_","err","f","i","evalContext","globalVersion","u","signal","r","node","_node","_target","_version","_source","_prevSource","_sources","_nextSource","_prevTarget","_nextTarget","value","this","_targets","prototype","Signal","prev","subscribe","m","flag","fn","valueOf","toString","toJSON","peek","Object","defineProperty","get","l","_value","set","n","e","_notify","p","y","s","target","S","_refresh","rollbackNode","head","_unsubscribe","_rollbackNode","Computed","compute","call","undefined","_globalVersion","prevContext","prepareSources","_compute","cleanupSources","b","OUTDATED","_subscribe","_cleanup","cleanup","d","cleanupEffect","disposeEffect","finish","_start","endEffect","bind","Effect","T","_dispose","h","v","g","initialState","state","callback","val","createError","prefix","logError","rest","logWarning","warning","url","pathnameIndex","trimmedUrl","lastSegmentWithExtension","dotIndex","j","k","a","c","Ds","V1","Rs","oe","Qa","Bs","bi","B1","ro","eo","to","pt","module","wi","z1","zs","Ns","N1","so","io","parts","cp","t","pr","indent","step","depth","prop","raw","Stringifier","require_stringify","line","pos","index","opts","prevIndex","lineToIndex","lastLine","min","offset","max","dr","G1","no","pp","Gs","yr","q1","ao","xi","dp","mp","yp","gp","qs","mr","eol","content","file","from","dirname","resolve","relative","sep","path","pathToFileURL","noSource","lines","type","vr","mapping","oo","vp","gr","column","Lt","str","Vt","last","js","Y1","lo","bp","wp","xp","Hs","$s","Q1","uo","ho","fo","Sp","_p","Us","Pp","Cp","br","wr","eb","yo","kp","Ep","co","_i","Si","Js","Ys","Ap","Ws","po","Tp","Ks","Mp","mo","Rt","pathAvailable","sourceMapAvailable","result","MapGenerator","require_comment","__commonJSMin","exports","Node","Comment","require_container","my","parse","Rule","Root","cleanSource","markDirtyUp","Container","child","iterator","selector","name","Xs","tb","vo","wo","xo","go","Fp","Pi","Op","Ci","bo","Zs","children","nodes","id","Ip","add","existIndex","exist","decl","condition","sample","initializer","args","Processor","transformer","cache","creator","postcss","stringify","fromJSON","defaults","AtRule","Declaration","Document","CssSyntaxError","Warning","LazyResult","Sr","rb","_o","Lp","require_css_syntax_error","xr","terminalHighlight","at","ib","Fo","source","plugin","Co","ko","Eo","Vp","Ao","Qs","en","To","Mo","Io","Po","color","css","end","gray","mark","text","bold","red","aside","start","number","gutter","Pe","ki","sb","Vo","Rp","Oo","Lo","dt","tn","nb","Do","Ro","rn","ab","Bo","_r","Ei","lb","zo","Dp","Pr","Ho","hb","jo","sn","No","Ai","Go","Ti","Cr","Mi","Ii","Fi","Bp","zp","Np","Gp","qp","jp","Hp","Up","$p","Wp","Oi","Li","Kp","qo","x","A","C","O","G","M","Vi","fb","$o","Uo","Dt","Bt","ub","Yo","Wo","Ko","Jo","ot","nn","cb","Zo","kr","code","Ri","pb","Qo","Xo","Jp","zt","il","db","rl","Yp","Zp","Xp","Qp","ed","el","tl","td","an","Bi","mb","sl","rd","sd","Di","hn","gb","ll","Ne","nd","ad","od","ld","hd","nl","fd","ud","cd","pd","dd","Nt","Er","ol","al","on","ln","Ge","fl","bb","hl","md","yd","gd","vd","Ar","cl","wb","ul","bd","wd","xd","Sd","mt","dl","xb","pl","_d","Pd","Cd","kd","Ed","Ad","Td","Tr","Sl","Sb","xl","Md","ml","Id","Fd","Od","Ld","yl","Vd","gl","vl","Rd","Dd","Bd","zd","bl","wl","Nd","ie","gn","vn","iw","zl","Dl","Bl","yt","jl","sw","ql","Nl","Gl","om","lm","bn","hm","fm","Lr","Pn","nw","Wl","um","cm","Hl","ji","Sn","_n","pm","wn","Ul","dm","xn","mm","$l","Gt","kn","aw","Cn","Hi","ow","Jl","Kl","ym","Vr","SPACE","FEED","TAB","CR","OPEN_SQUARE","OPEN_PARENTHESES","OPEN_CURLY","string","list","require_rule","match","require_parser","tokenizer","SAFE_COMMENT_NEIGHBOR","knownTokenTypes","RBRACKET","RBRACE","COMMA","Zl","NULL","lw","Yl","ErrorWithLocation","gm","En","qt","hw","Xl","Ui","vm","UnexpectedChar","wm","xm","unexpected","loc","UnexpectedToken","token","QUOTE$1","SLASH","STAR","An","Rr","isDigit","tokenize","options","DEFAULT_OPTIONS","tokenType","startLoc","range","bm","endLoc","newLine","Tn","fw","Ql","Sm","Dr","In","uw","ih","Mn","eh","$i","th","Wi","Br","locate","Ji","expectedKeywords","Pm","Cm","km","Em","Am","Tm","Mm","Im","escapeToChar","Om","rh","readNumber","isPositiveDigit","Ki","Yi","_m","Fm","Zi","Xi","Qi","cw","sh","Lm","zr","jt","pw","ph","nh","ah","oh","lh","Vm","hh","Fn","On","fh","uh","ch","Ce","yh","dw","mh","dh","Ht","xh","mw","wh","gh","vh","bh","lt","_h","yw","Sh","Nr","kh","Ch","unexpectedEOF","Rm","Ut","UnexpectedEOF","isWhitespace","createToken","isKeywordStart","tokens","isNumberStart","Th","Dm","Bm","zm","Gm","Eh","Ah","qm","types","Ln","body","elements","members","lastIndex","escapeChar","hexCode","escapeIndex","getLiteralValue","getStringValue","nextNoComments","tokenIndex","nextToken","assertTokenType","createRange","assertTokenValue","firstToken","parseProperty","parseArray","parseValue","createLiteralNode","docBody","unexpectedToken","docParts","childKeys","isObject","traverse","visitor","parent","key","isNode","Nm","root","traversal","evaluate","object","member","print","require_is_buffer","obj","require_extend","hasOwn","gOPD","arr","isPlainObject","hasOwnConstructor","clone","length","deep","getProperty","copy","copyIsArray","isArray","src","setProperty","require_lottie","global","factory","sources","destination","sourcePrototype","attr","ProxyFunction","AudioController","audioFactory","audio","len","rateValue","assetPath","qe","bw","Ih","Vn","jm","$t","ww","Oh","createRegularArray","Hm","Fh","createTypedArrayFactory","Vh","xw","Lh","Um","$m","Wm","es","Dh","Sw","Rh","Km","Jm","Ym","Rn","propertyNames","tOfVal","absArr","Dn","_w","qh","Zm","Xm","Bh","zh","Qm","element","Nh","ey","currentTime","totalTime","frameMultiplier","Gh","ty","totalLoops","currentLoop","firstFrame","nativeError","zn","Pw","jh","ry","iy","Bn","_count","q","Cw","Hh","sy","Gn","ay","oy","Wt","hsv","Uh","Wh","Ew","$h","hy","colorMap","hex","uy","cy","py","dy","yy","gy","vy","by","Kt","_counterId","workerInstance","workerProxy","workerFn","blob","setupWorker","createWorker","dataFunctionManager","completeLayers","layers","comps","jLen","kLen","layerData","maskProps","convertPathsToAbsoluteValues","ts","findCompLayers","completeShapes","completeChars","assets","chars","findComp","fy","Aw","wy","xy","Jt","checkVersion","animVersion","animVersionString","minimum","Tw","Zh","Sy","minimumVersion","_y","gt","Py","iterateLayers","Yh","animationData","Cy","Yt","charData","tf","Mw","ky","Ey","Ay","Ty","Zt","checkPathProperties","Qh","updateTextLayer","textLayer","pathData","ef","rf","Gr","My","checkColors","Iy","shapes","iterateShapes","nf","Fw","Fy","Oy","Ly","Xt","sf","of","af","Ry","Qt","checkShapes","Lw","lf","completeClosingShapes","completeData","checkChars","moduleOb","_workerSelf","formatResponse","xhr","contentTypeHeader","loadAsset","fullPath","errorCallback","response","data","animation","event","process","onError","processes","onComplete","loadData","completeAnimation","anim","proxyImage","canvas","ctx","footageLoaded","getAssetsPath","assetData","uf","assetsPath","ff","imagePath","intervalId","mf","Rw","df","box","hf","cf","By","zy","Ny","pf","Gy","qy","img","Dy","je","ob","footageData","xf","Bw","wf","jy","Mh","Hy","qr","yf","gf","Jh","vf","Xh","vt","Uy","bf","$y","setAssetsPath","loadedImages","loadedFootages","setCacheType","elementHelper","ImagePreloaderFactory","imageLoaded","createFootageData","setPath","destroy","createImgData","er","callbacks","eventName","jr","zw","rs","Wy","Ky","Jy","Sf","jn","wt","P","F","I","R","z","N","E","ta","Hr","tr","fg","Bf","ug","cg","zf","Nf","pg","dg","mg","yg","gg","Gf","vg","bg","wg","xg","qf","Sg","_g","Pg","Cg","kg","Eg","Ag","Tg","Mg","Ig","Fg","Og","Lg","Vg","Rg","Dg","Bg","zg","Ng","Gg","he","jf","qg","Wr","Hf","Ur","Uf","Un","Tf","Mf","jg","Hg","Ug","$g","Wg","Kg","Jg","fs","$n","us","Ze","If","$f","Yg","Zg","ls","Ff","Of","Lf","Wf","Vf","Xg","Qg","xt","hs","Xn","ev","Rf","tv","Kf","$r","rv","_t","St","iv","sv","nv","av","ov","Xe","lv","hv","cs","fv","uv","cv","rr","pv","dv","ds","mv","yv","gv","ir","vv","bv","wv","xv","Sv","_v","Yn","Jn","Xf","eu","Yf","Wn","ms","Zn","Pv","Cv","Bv","ps","zv","Uv","Df","Kr","kv","jv","ea","Jv","Ev","Qf","Av","Hv","Zf","Jf","Tv","Kn","tu","Yv","Vv","Fv","Lv","Zv","Xv","Nv","Mv","Wv","$v","ru","Iv","e0","Ov","Rv","Dv","Gv","qv","Qn","Kv","t0","Qv","pu","Qe","r0","i0","s0","n0","a0","o0","ou","lu","hu","iu","l0","ia","keys","keysCount","_markers","markers","_marker","markerData","Ct","parsePayloadLines","registerComposition","sr","_thisProjectFunction","na","su","nu","au","h0","f0","Pt","u0","c0","p0","d0","fu","window","supportsAdoptingStyleSheets","ShadowRoot","ShadyCSS","nativeShadow","CSSStyleSheet","constructionToken","Symbol","cssTagCache","WeakMap","CSSResult","constructor","cssText","strings","safeToken","_strings","styleSheet","_styleSheet","cacheable","replaceSync","unsafeCSS","String","values","reduce","acc","idx","adoptStyles","renderRoot","styles","adoptedStyleSheets","map","forEach","style","document","createElement","nonce","setAttribute","textContent","appendChild","getCompatibleStyle","sheet","rule","cssRules","trustedTypes","emptyStringForBooleanAttribute","emptyScript","polyfillSupport","reactiveElementPolyfillSupport","defaultConverter","toAttribute","Boolean","Array","JSON","fromAttribute","fromValue","Number","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","ReactiveElement","HTMLElement","super","__instanceProperties","Map","isUpdatePending","hasUpdated","__reflectingProperty","_initialize","static","finalize","_a","_initializers","push","observedAttributes","attributes","elementProperties","__attributeNameForProperty","__attributeToPropertyMap","noAccessor","hasOwnProperty","descriptor","getPropertyDescriptor","oldValue","requestUpdate","configurable","enumerable","superCtor","getPrototypeOf","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","elementStyles","finalizeStyles","Set","flat","Infinity","reverse","unshift","toLowerCase","__updatePromise","Promise","res","enableUpdating","_$changedProperties","__saveInstanceProperties","addController","controller","__controllers","isConnected","_b","hostConnected","removeController","splice","indexOf","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","connectedCallback","_requestedUpdate","disconnectedCallback","hostDisconnected","attributeChangedCallback","_old","_$attributeToProperty","__propertyToAttribute","attrValue","removeAttribute","ctor","propName","getPropertyOptions","shouldRequestUpdate","has","__reflectingProperties","__enqueueUpdate","async","reject","scheduleUpdate","performUpdate","shouldUpdate","changedProperties","willUpdate","hostUpdate","update","__markUpdated","_$didUpdate","_changedProperties","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","mode","reactiveElementVersions","policy","createPolicy","createHTML","boundAttributeSuffix","marker","Math","random","slice","markerMatch","nodeMarker","createMarker","createComment","isPrimitive","isIterable","SPACE_CHAR","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","RegExp","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","_$litType$","html","svg","noChange","for","nothing","templateCache","walker","createTreeWalker","getTemplateHtml","attrNames","rawTextEndRegex","regex","attrName","attrNameEndIndex","exec","test","startsWith","htmlResult","Template","nodeIndex","attrNameIndex","partCount","currentNode","svgElement","firstChild","remove","append","childNodes","nextNode","nodeType","hasAttributes","attrsToRemove","getAttributeNames","endsWith","realName","statics","getAttribute","split","PropertyPart","BooleanAttributePart","EventPart","AttributePart","tagName","_options","innerHTML","resolveDirective","part","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$initialize","_c","_$resolve","TemplateInstance","template","_$parts","_$disconnectableChildren","_$template","_$parent","parentNode","_$isConnected","_clone","fragment","creationScope","importNode","partIndex","templatePart","ChildPart","nextSibling","ElementPart","_update","_$setValue","startNode","endNode","_$committedValue","_$startNode","_$endNode","__isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","insertBefore","createTextNode","_$getTemplate","instance","itemParts","itemPart","item","_$notifyConnectionChanged","setConnected","fill","valueIndex","noCommit","change","_commitValue","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","host","litHtmlPolyfillSupport","litHtmlVersions","render","container","partOwnerNode","renderBefore","LitElement","renderOptions","__childPart","globalThis","litElementHydrateSupport","litElementPolyfillSupport","litElementVersions","standardProperty","kind","finisher","clazz","placement","originalKey","legacyProperty","proto","property","protoOrDescriptor","decorateProperty","info","query","querySelector","slotAssignedElements","HTMLSlotElement","assignedElements","slot","assignedNodes","filter","ELEMENT_NODE","package_default","dotlottie_player_styles_default","ELEMENT_NAME","DotLottiePlayer","w1","loop","loopNb","frame","commonPlayer","playerState","prevState","v1","manifest","theme","overrideRendererSettings","playbackOptions","ri","x1","getOptions","targetAnimation","download","playbackKeys","entries","b1","isPlaying","isPaused","animationName","themeName","className","animationClass","__decorateClass"],"mappings":"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","sourcesContent":["function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\nfunction mutationDetected(): never {\n\tthrow new Error(\"Computed cannot have side-effects\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n// @ts-ignore internal Signal is viewed as a function\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\n// @ts-ignore internal Signal is viewed as function\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (evalContext instanceof Computed) {\n\t\t\tmutationDetected();\n\t\t}\n\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => void | (() => void);\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void | (() => void));\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void | (() => void)) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._compute === undefined) return;\n\n\t\tconst cleanup = this._compute();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => void | (() => void)): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, type ReadonlySignal };\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type { Signal } from '@preact/signals-core';\nimport { signal } from '@preact/signals-core';\n\nexport class Store<T> {\n  protected _state: Signal<T>;\n\n  protected _prevState: T;\n\n  public constructor(initialState: T) {\n    this._prevState = initialState;\n    this._state = signal(initialState);\n  }\n\n  public setState(state: T): void {\n    this._prevState = this._state.value;\n    this._state.value = state;\n  }\n\n  public subscribe(callback: (value: T, prevValue: T) => void): () => void {\n    return this._state.subscribe((val) => callback(val, this._prevState));\n  }\n}\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nexport function createError(error: string, prefix = 'dotLottie-common'): Error {\n  const err = new Error(`[${prefix}]: ${error}`);\n\n  return err;\n}\n\nexport function logError(error: string, prefix: string = 'dotLottie-common', ...rest: any[]): void {\n  // eslint-disable-next-line no-console\n  console.error(`[${prefix}]:`, error, ...rest);\n}\n\nexport function logWarning(warning: string, prefix: string = 'dotLottie-common', ...rest: any[]): void {\n  // eslint-disable-next-line no-console\n  console.warn(`[${prefix}]:`, warning, ...rest);\n}\n\nexport function getFilename(url: string = ''): string {\n  const trimmedUrl = url.trim();\n  const pathnameIndex = trimmedUrl.lastIndexOf('/');\n  const lastSegmentWithExtension = trimmedUrl.substring(pathnameIndex + 1);\n\n  const dotIndex = lastSegmentWithExtension.indexOf('.');\n\n  if (dotIndex !== -1) {\n    return lastSegmentWithExtension.substring(0, dotIndex);\n  }\n\n  return lastSegmentWithExtension;\n}\n","var g=Object.create;var f=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var i=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var m=(b,a)=>()=>(a||b((a={exports:{}}).exports,a),a.exports);var l=(b,a,c,e)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let d of i(a))!k.call(b,d)&&d!==c&&f(b,d,{get:()=>a[d],enumerable:!(e=h(a,d))||e.enumerable});return b};var n=(b,a,c)=>(c=b!=null?g(j(b)):{},l(a||!b||!b.__esModule?f(c,\"default\",{value:b,enumerable:!0}):c,b));\n\nexport { m as a, n as b };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=chunk-ON5OQYWL.js.map","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    }\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        }\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 }\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, resolve, relative, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>',\n        generated: { line: 1, column: 0 },\n        original: { line: 1, column: 0 }\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString()\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      source: '',\n      generated: { line: 0, column: 0 },\n      original: { line: 0, column: 0 }\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, red, gray } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { resolve, isAbsolute } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      line: min + 1,\n      col: offset - lineToIndex[min] + 1\n    }\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { line: origin.line, column: origin.column },\n        origin.endLine === undefined\n          ? origin.column\n          : { line: origin.endLine, column: origin.endColumn },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { line, column },\n        endLine === undefined ? column : { line: endLine, column: endColumn },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { line, column, endLine, endColumn, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ line, column })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ line: endLine, column: endColumn })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      url: fromUrl.toString(),\n      line: from.line,\n      column: from.column,\n      endLine: to && to.line,\n      endColumn: to && to.column\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nconst DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { start, end } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { line: start.line, column: start.column },\n        { line: end.line, column: end.column },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  positionInside(index) {\n    let string = this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { line, column }\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    }\n    let end = this.source.end\n      ? {\n          line: this.source.end.line,\n          column: this.source.end.column + 1\n        }\n      : {\n          line: start.line,\n          column: start.column + 1\n        }\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { line: start.line, column: start.column + 1 }\n    }\n\n    return { start, end }\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      }\n    }\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    nextToken,\n    endOfFile,\n    position\n  }\n}\n","'use strict'\n\nlet list = {\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  comma(string) {\n    return list.split(string, [','], true)\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      offset,\n      line: pos.line,\n      column: pos.col\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      start: this.getPosition(offset),\n      input: this.input\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { value, raw }\n    }\n    node[prop] = value\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  // Errors\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * @fileoverview JSON syntax helpers\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Predefined Tokens\n//-----------------------------------------------------------------------------\n\nconst LBRACKET = \"[\";\nconst RBRACKET = \"]\";\nconst LBRACE = \"{\";\nconst RBRACE = \"}\";\nconst COLON = \":\";\nconst COMMA = \",\";\n\nconst TRUE = \"true\";\nconst FALSE = \"false\";\nconst NULL = \"null\";\n\nconst QUOTE = \"\\\"\";\n\nconst expectedKeywords = new Map([\n    [\"t\", TRUE],\n    [\"f\", FALSE],\n    [\"n\", NULL]\n]);\n\nconst escapeToChar = new Map([\n    [QUOTE, QUOTE],\n    [\"\\\\\", \"\\\\\"],\n    [\"/\", \"/\"],\n    [\"b\", \"\\b\"],\n    [\"n\", \"\\n\"],\n    [\"f\", \"\\f\"],\n    [\"r\", \"\\r\"],\n    [\"t\", \"\\t\"]\n]);\n\nconst knownTokenTypes = new Map([\n    [LBRACKET, \"Punctuator\"],\n    [RBRACKET, \"Punctuator\"],\n    [LBRACE, \"Punctuator\"],\n    [RBRACE, \"Punctuator\"],\n    [COLON, \"Punctuator\"],\n    [COMMA, \"Punctuator\"],\n    [TRUE, \"Boolean\"],\n    [FALSE, \"Boolean\"],\n    [NULL, \"Null\"]\n]);\n\n/**\n * @fileoverview JSON tokenization/parsing errors\n * @author Nicholas C. Zakas\n */\n\n\n/**\n * Base class that attaches location to an error.\n */\nclass ErrorWithLocation extends Error {\n\n    /**\n     * \n     * @param {string} message The error message to report. \n     * @param {int} loc.line The line on which the error occurred.\n     * @param {int} loc.column The column in the line where the error occurrred.\n     * @param {int} loc.index The index in the string where the error occurred.\n     */\n    constructor(message, { line, column, index }) {\n        super(`${ message } (${ line }:${ column})`);\n\n        /**\n         * The line on which the error occurred.\n         * @type int\n         * @property line\n         */\n        this.line = line;\n\n        /**\n         * The column on which the error occurred.\n         * @type int\n         * @property column\n         */\n        this.column = column;\n        \n        /**\n         * The index into the string where the error occurred.\n         * @type int\n         * @property index\n         */\n        this.index = index;\n    }\n\n}\n\n/**\n * Error thrown when an unexpected character is found during tokenizing.\n */\nclass UnexpectedChar extends ErrorWithLocation {\n\n    /**\n     * Creates a new instance.\n     * @param {string} unexpected The character that was found.\n     * @param {Object} loc The location information for the found character.\n     */\n    constructor(unexpected, loc) {\n        super(`Unexpected character ${ unexpected } found.`, loc);\n    }\n}\n\n/**\n * Error thrown when an unexpected token is found during parsing.\n */\nclass UnexpectedToken extends ErrorWithLocation {\n\n    /**\n     * Creates a new instance.\n     * @param {string} expected The character that was expected. \n     * @param {string} unexpected The character that was found.\n     * @param {Object} loc The location information for the found character.\n     */\n    constructor(token) {\n        super(`Unexpected token ${ token.type }(${ token.value }) found.`, token.loc.start);\n    }\n}\n\n/**\n * Error thrown when the end of input is found where it isn't expected.\n */\nclass UnexpectedEOF extends ErrorWithLocation {\n\n    /**\n     * Creates a new instance.\n     * @param {Object} loc The location information for the found character.\n     */\n    constructor(loc) {\n        super(\"Unexpected end of input found.\", loc);\n    }\n}\n\n/**\n * @fileoverview JSON tokenizer\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\nconst QUOTE$1 = \"\\\"\";\nconst SLASH = \"/\";\nconst STAR = \"*\";\n\nconst DEFAULT_OPTIONS = {\n    comments: false,\n    ranges: false\n};\n\nfunction isWhitespace(c) {\n    return /[\\s\\n]/.test(c);\n}\n\nfunction isDigit(c) {\n    return c >= \"0\" && c <= \"9\";\n}\n\nfunction isHexDigit(c) {\n    return isDigit(c) || /[a-f]/i.test(c);\n}\n\nfunction isPositiveDigit(c) {\n    return c >= \"1\" && c <= \"9\";\n}\n\nfunction isKeywordStart(c) {\n    return /[tfn]/.test(c);\n}\n\nfunction isNumberStart(c) {\n    return isDigit(c) || c === \".\" || c === \"-\";\n}\n\n//-----------------------------------------------------------------------------\n// Main\n//-----------------------------------------------------------------------------\n\n/**\n * Creates an iterator over the tokens representing the source text.\n * @param {string} text The source text to tokenize.\n * @returns {Iterator} An iterator over the tokens. \n */\nfunction tokenize(text, options) {\n\n    options = Object.freeze({\n        ...DEFAULT_OPTIONS,\n        ...options\n    });\n\n    let offset = -1;\n    let line = 1;\n    let column = 0;\n    let newLine = false;\n\n    const tokens = [];\n\n\n    function createToken(tokenType, value, startLoc, endLoc) {\n        \n        const endOffset = startLoc.offset + value.length;\n        let range = options.ranges ? {\n            range: [startLoc.offset, endOffset]\n        } : undefined;\n        \n        return {\n            type: tokenType,\n            value,\n            loc: {\n                start: startLoc,\n                end: endLoc || {\n                    line: startLoc.line,\n                    column: startLoc.column + value.length,\n                    offset: endOffset\n                }\n            },\n            ...range\n        };\n    }\n\n    function next() {\n        let c = text.charAt(++offset);\n    \n        if (newLine) {\n            line++;\n            column = 1;\n            newLine = false;\n        } else {\n            column++;\n        }\n\n        if (c === \"\\r\") {\n            newLine = true;\n\n            // if we already see a \\r, just ignore upcoming \\n\n            if (text.charAt(offset + 1) === \"\\n\") {\n                offset++;\n            }\n        } else if (c === \"\\n\") {\n            newLine = true;\n        }\n\n        return c;\n    }\n\n    function locate() {\n        return {\n            line,\n            column,\n            offset\n        };\n    }\n\n    function readKeyword(c) {\n\n        // get the expected keyword\n        let value = expectedKeywords.get(c);\n\n        // check to see if it actually exists\n        if (text.slice(offset, offset + value.length) === value) {\n            offset += value.length - 1;\n            column += value.length - 1;\n            return { value, c: next() };\n        }\n\n        // find the first unexpected character\n        for (let j = 1; j < value.length; j++) {\n            if (value[j] !== text.charAt(offset + j)) {\n                unexpected(next());\n            }\n        }\n\n    }\n\n    function readString(c) {\n        let value = c;\n        c = next();\n\n        while (c && c !== QUOTE$1) {\n\n            // escapes\n            if (c === \"\\\\\") {\n                value += c;\n                c = next();\n\n                if (escapeToChar.has(c)) {\n                    value += c;\n                } else if (c === \"u\") {\n                    value += c;\n                    for (let i = 0; i < 4; i++) {\n                        c = next();\n                        if (isHexDigit(c)) {\n                            value += c;\n                        } else {\n                            unexpected(c);\n                        }\n                    }\n                } else {\n                    unexpected(c);\n                }\n            } else {\n                value += c;\n            }\n\n            c = next();\n        }\n\n        if (!c) {\n            unexpectedEOF();\n        }\n        \n        value += c;\n\n        return { value, c: next() };\n    }\n\n\n    function readNumber(c) {\n\n        let value = \"\";\n\n        // Number may start with a minus but not a plus\n        if (c === \"-\") {\n\n            value += c;\n\n            c = next();\n\n            // Next digit cannot be zero\n            if (!isDigit(c)) {\n                unexpected(c);\n            }\n\n        }\n\n        // Zero must be followed by a decimal point or nothing\n        if (c === \"0\") {\n\n            value += c;\n\n            c = next();\n            if (isDigit(c)) {\n                unexpected(c);\n            }\n\n        } else {\n            if (!isPositiveDigit(c)) {\n                unexpected(c);\n            }\n\n            do {\n                value += c;\n                c = next();\n            } while (isDigit(c));\n        }\n\n        // Decimal point may be followed by any number of digits\n        if (c === \".\") {\n\n            do {\n                value += c;\n                c = next();\n            } while (isDigit(c));\n        }\n\n        // Exponent is always last\n        if (c === \"e\" || c === \"E\") {\n\n            value += c;\n            c = next();\n\n            if (c === \"+\" || c === \"-\") {\n                value += c;\n                c = next();\n            }\n\n            while (isDigit(c)) {\n                value += c;\n                c = next();\n            }\n        }\n\n\n        return { value, c };\n    }\n\n    /**\n     * Reads in either a single-line or multi-line comment.\n     * @param {string} c The first character of the comment.\n     * @returns {string} The comment string.\n     * @throws {UnexpectedChar} when the comment cannot be read.\n     * @throws {UnexpectedEOF} when EOF is reached before the comment is\n     *      finalized.\n     */\n    function readComment(c) {\n\n        let value = c;\n\n        // next character determines single- or multi-line\n        c = next();\n\n        // single-line comments\n        if (c === \"/\") {\n            \n            do {\n                value += c;\n                c = next();\n            } while (c && c !== \"\\r\" && c !== \"\\n\");\n\n            return { value, c };\n        }\n\n        // multi-line comments\n        if (c === STAR) {\n\n            while (c) {\n                value += c;\n                c = next();\n\n                // check for end of comment\n                if (c === STAR) {\n                    value += c;\n                    c = next();\n                    \n                    //end of comment\n                    if (c === SLASH) {\n                        value += c;\n\n                        /*\n                         * The single-line comment functionality cues up the\n                         * next character, so we do the same here to avoid\n                         * splitting logic later.\n                         */\n                        c = next();\n                        return { value, c };\n                    }\n                }\n            }\n\n            unexpectedEOF();\n            \n        }\n\n        // if we've made it here, there's an invalid character\n        unexpected(c);        \n    }\n\n\n    /**\n     * Convenience function for throwing unexpected character errors.\n     * @param {string} c The unexpected character.\n     * @returns {void}\n     * @throws {UnexpectedChar} always.\n     */\n    function unexpected(c) {\n        throw new UnexpectedChar(c, locate());\n    }\n\n    /**\n     * Convenience function for throwing unexpected EOF errors.\n     * @returns {void}\n     * @throws {UnexpectedEOF} always.\n     */\n    function unexpectedEOF() {\n        throw new UnexpectedEOF(locate());\n    }\n\n    let c = next();\n\n    while (offset < text.length) {\n\n        while (isWhitespace(c)) {\n            c = next();\n        }\n\n        if (!c) {\n            break;\n        }\n\n        const start = locate();\n\n        // check for easy case\n        if (knownTokenTypes.has(c)) {\n            tokens.push(createToken(knownTokenTypes.get(c), c, start));\n            c = next();\n        } else if (isKeywordStart(c)) {\n            const result = readKeyword(c);\n            let value = result.value;\n            c = result.c;\n            tokens.push(createToken(knownTokenTypes.get(value), value, start));\n        } else if (isNumberStart(c)) {\n            const result = readNumber(c);\n            let value = result.value;\n            c = result.c;\n            tokens.push(createToken(\"Number\", value, start));\n        } else if (c === QUOTE$1) {\n            const result = readString(c);\n            let value = result.value;\n            c = result.c;\n            tokens.push(createToken(\"String\", value, start));\n        } else if (c === SLASH && options.comments) {\n            const result = readComment(c);\n            let value = result.value;\n            c = result.c;\n            tokens.push(createToken(value.startsWith(\"//\") ? \"LineComment\" : \"BlockComment\", value, start, locate()));\n        } else {\n            unexpected(c);\n        }\n    }\n\n    return tokens;\n\n}\n\n/**\n * @fileoverview Momoa JSON AST types\n * @author Nicholas C. Zakas\n */\n\nconst types = {\n    document(body, parts = {}) {\n        return {\n            type: \"Document\",\n            body,\n            ...parts\n        };\n    },\n    string(value, parts = {}) {\n        return {\n            type: \"String\",\n            value,\n            ...parts\n        };\n    },\n    number(value, parts = {}) {\n        return {\n            type: \"Number\",\n            value,\n            ...parts\n        };\n    },\n    boolean(value, parts = {}) {\n        return {\n            type: \"Boolean\",\n            value,\n            ...parts\n        };\n    },\n    null(parts = {}) {\n        return {\n            type: \"Null\",\n            value: \"null\",\n            ...parts\n        };\n    },\n    array(elements, parts = {}) {\n        return {\n            type: \"Array\",\n            elements,\n            ...parts\n        };\n    },\n    object(members, parts = {}) {\n        return {\n            type: \"Object\",\n            members,\n            ...parts\n        };\n    },\n    member(name, value, parts = {}) {\n        return {\n            type: \"Member\",\n            name,\n            value,\n            ...parts\n        };\n    },\n\n};\n\n/**\n * @fileoverview JSON parser\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\nconst DEFAULT_OPTIONS$1 = {\n    tokens: false,\n    comments: false,\n    ranges: false\n};\n\n/**\n * Converts a JSON-encoded string into a JavaScript string, interpreting each\n * escape sequence.\n * @param {Token} token The string token to convert into a JavaScript string.\n * @returns {string} A JavaScript string.\n */\nfunction getStringValue(token) {\n    \n    // slice off the quotation marks\n    let value = token.value.slice(1, -1);\n    let result = \"\";\n    let escapeIndex = value.indexOf(\"\\\\\");\n    let lastIndex = 0;\n\n    // While there are escapes, interpret them to build up the result\n    while (escapeIndex >= 0) {\n\n        // append the text that happened before the escape\n        result += value.slice(lastIndex, escapeIndex);\n\n        // get the character immediately after the \\\n        const escapeChar = value.charAt(escapeIndex + 1);\n        \n        // check for the non-Unicode escape sequences first\n        if (escapeToChar.has(escapeChar)) {\n            result += escapeToChar.get(escapeChar);\n            lastIndex = escapeIndex + 2;\n        } else if (escapeChar === \"u\") {\n            const hexCode = value.slice(escapeIndex + 2, escapeIndex + 6);\n            if (hexCode.length < 4 || /[^0-9a-f]/i.test(hexCode)) {\n                throw new ErrorWithLocation(\n                    `Invalid unicode escape \\\\u${ hexCode}.`,\n                    {\n                        line: token.loc.start.line,\n                        column: token.loc.start.column + escapeIndex,\n                        offset: token.loc.start.offset + escapeIndex\n                    }\n                );\n            }\n            \n            result += String.fromCharCode(parseInt(hexCode, 16));\n            lastIndex = escapeIndex + 6;\n        } else {\n            throw new ErrorWithLocation(\n                `Invalid escape \\\\${ escapeChar }.`,\n                {\n                    line: token.loc.start.line,\n                    column: token.loc.start.column + escapeIndex,\n                    offset: token.loc.start.offset + escapeIndex\n                }\n            );\n        }\n\n        // find the next escape sequence\n        escapeIndex = value.indexOf(\"\\\\\", lastIndex);\n    }\n\n    // get the last segment of the string value\n    result += value.slice(lastIndex);\n\n    return result;\n}\n\n/**\n * Gets the JavaScript value represented by a JSON token.\n * @param {Token} token The JSON token to get a value for.\n * @returns {*} A number, string, boolean, or `null`. \n */\nfunction getLiteralValue(token) {\n    switch (token.type) {\n    case \"Boolean\":\n        return token.value === \"true\";\n        \n    case \"Number\":\n        return Number(token.value);\n\n    case \"Null\":\n        return null;\n\n    case \"String\":\n        return getStringValue(token);\n    }\n}\n\n//-----------------------------------------------------------------------------\n// Main Function\n//-----------------------------------------------------------------------------\n\n/**\n * \n * @param {string} text The text to parse.\n * @param {boolean} [options.tokens=false] Determines if tokens are returned in\n *      the AST. \n * @param {boolean} [options.comments=false] Determines if comments are allowed\n *      in the JSON.\n * @param {boolean} [options.ranges=false] Determines if ranges will be returned\n *      in addition to `loc` properties.\n * @returns {Object} The AST representing the parsed JSON.\n * @throws {Error} When there is a parsing error. \n */\nfunction parse(text, options) {\n\n    options = Object.freeze({\n        ...DEFAULT_OPTIONS$1,\n        ...options\n    });\n\n    const tokens = tokenize(text, {\n        comments: !!options.comments,\n        ranges: !!options.ranges\n    });\n    let tokenIndex = 0;\n\n    function nextNoComments() {\n        return tokens[tokenIndex++];\n    }\n    \n    function nextSkipComments() {\n        const nextToken = tokens[tokenIndex++];\n        if (nextToken && nextToken.type.endsWith(\"Comment\")) {\n            return nextSkipComments();\n        }\n\n        return nextToken;\n\n    }\n\n    // determine correct way to evaluate tokens based on presence of comments\n    const next = options.comments ? nextSkipComments : nextNoComments;\n\n    function assertTokenValue(token, value) {\n        if (!token || token.value !== value) {\n            throw new UnexpectedToken(token);\n        }\n    }\n\n    function assertTokenType(token, type) {\n        if (!token || token.type !== type) {\n            throw new UnexpectedToken(token);\n        }\n    }\n\n    function createRange(start, end) {\n        return options.ranges ? {\n            range: [start.offset, end.offset]\n        } : undefined;\n    }\n\n    function createLiteralNode(token) {\n        const range = createRange(token.loc.start, token.loc.end);\n\n        return {\n            type: token.type,\n            value: getLiteralValue(token),\n            loc: {\n                start: {\n                    ...token.loc.start\n                },\n                end: {\n                    ...token.loc.end\n                }\n            },\n            ...range\n        };\n    }\n\n\n    function parseProperty(token) {\n        assertTokenType(token, \"String\");\n        const name = createLiteralNode(token);\n\n        token = next();\n        assertTokenValue(token, \":\");\n        const value = parseValue();\n        const range = createRange(name.loc.start, value.loc.end);\n\n        return types.member(name, value, {\n            loc: {\n                start: {\n                    ...name.loc.start\n                },\n                end: {\n                    ...value.loc.end\n                }\n            },\n            ...range\n        });\n    }\n\n    function parseObject(firstToken) {\n\n        // The first token must be a { or else it's an error\n        assertTokenValue(firstToken, \"{\");\n\n        const members = [];\n        let token = next();\n\n        if (token && token.value !== \"}\") {\n            do {\n    \n                // add the value into the array\n                members.push(parseProperty(token));\n    \n                token = next();\n    \n                if (token.value === \",\") {\n                    token = next();\n                } else {\n                    break;\n                }\n            } while (token);\n        }\n\n        assertTokenValue(token, \"}\");\n        const range = createRange(firstToken.loc.start, token.loc.end);\n\n        return types.object(members, {\n            loc: {\n                start: {\n                    ...firstToken.loc.start\n                },\n                end: {\n                    ...token.loc.end\n                }\n            },\n            ...range\n        });\n\n    }\n\n    function parseArray(firstToken) {\n\n        // The first token must be a [ or else it's an error\n        assertTokenValue(firstToken, \"[\");\n\n        const elements = [];\n        let token = next();\n        \n        if (token && token.value !== \"]\") {\n\n            do {\n\n              // add the value into the array\n              elements.push(parseValue(token));\n\n              token = next();\n              \n              if (token.value === \",\") {\n                  token = next();\n              } else {\n                  break;\n              }\n            } while (token);\n        }\n\n        assertTokenValue(token, \"]\");\n        const range = createRange(firstToken.loc.start, token.loc.end);\n\n        return types.array(elements, {\n            type: \"Array\",\n            elements,\n            loc: {\n                start: {\n                    ...firstToken.loc.start\n                },\n                end: {\n                    ...token.loc.end\n                }\n            },\n            ...range\n        });\n\n    }\n\n\n\n    function parseValue(token) {\n\n        token = token || next();\n        \n        switch (token.type) {\n        case \"String\":\n        case \"Boolean\":\n        case \"Number\":\n        case \"Null\":\n            return createLiteralNode(token);\n\n        case \"Punctuator\":\n            if (token.value === \"{\") {\n                return parseObject(token);\n            } else if (token.value === \"[\") {\n                return parseArray(token);\n            }\n            /*falls through*/\n\n        default:\n            throw new UnexpectedToken(token);\n        }\n\n    }\n\n    \n    const docBody = parseValue();\n    \n    const unexpectedToken = next();\n    if (unexpectedToken) {\n        throw new UnexpectedToken(unexpectedToken);\n    }\n    \n    \n    const docParts = {\n        loc: {\n            start: {\n                line: 1,\n                column: 1,\n                offset: 0\n            },\n            end: {\n                ...docBody.loc.end\n            }\n        }\n    };\n    \n\n    if (options.tokens) {\n        docParts.tokens = tokens;\n    }\n\n    if (options.ranges) {\n        docParts.range = createRange(docParts.loc.start, docParts.loc.end);\n    }\n\n    return types.document(docBody, docParts);\n\n}\n\n/**\n * @fileoverview Traversal approaches for Momoa JSON AST.\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Data\n//-----------------------------------------------------------------------------\n\nconst childKeys = new Map([\n    [\"Document\", [\"body\"]],\n    [\"Object\", [\"members\"]],\n    [\"Member\", [\"name\", \"value\"]],\n    [\"Array\", [\"elements\"]],\n    [\"String\", []],\n    [\"Number\", []],\n    [\"Boolean\", []],\n    [\"Null\", []]\n]);\n\n//-----------------------------------------------------------------------------\n// Helpers\n//-----------------------------------------------------------------------------\n\n/**\n * Determines if a given value is an object.\n * @param {*} value The value to check.\n * @returns {boolean} True if the value is an object, false if not. \n */\nfunction isObject(value) {\n    return value && (typeof value === \"object\");\n}\n\n/**\n * Determines if a given value is an AST node.\n * @param {*} value The value to check.\n * @returns {boolean} True if the value is a node, false if not. \n */\nfunction isNode(value) {\n    return isObject(value) && (typeof value.type === \"string\");\n}\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\n/**\n * Traverses an AST from the given node.\n * @param {Node} root The node to traverse from \n * @param {Object} visitor An object with an `enter` and `exit` method. \n */\nfunction traverse(root, visitor) {\n\n    /**\n     * Recursively visits a node.\n     * @param {Node} node The node to visit.\n     * @param {Node} parent The parent of the node to visit.\n     * @returns {void}\n     */\n    function visitNode(node, parent) {\n\n        if (typeof visitor.enter === \"function\") {\n            visitor.enter(node, parent);\n        }\n\n        for (const key of childKeys.get(node.type)) {\n            const value = node[key];\n\n            if (isObject(value)) {\n                if (Array.isArray(value)) {\n                    value.forEach(child => visitNode(child, node));\n                } else if (isNode(value)) {\n                    visitNode(value, node);\n                }\n            }\n        }\n\n        if (typeof visitor.exit === \"function\") {\n            visitor.exit(node, parent);\n        }\n    }\n\n    visitNode(root);\n}\n\n/**\n * Creates an iterator over the given AST.\n * @param {Node} root The root AST node to traverse. \n * @param {Function} [filter] A filter function to determine which steps to\n *      return;\n * @returns {Iterator} An iterator over the AST.  \n */\nfunction iterator(root, filter = () => true) {\n\n    const traversal = [];\n\n    traverse(root, {\n        enter(node, parent) {\n            traversal.push({ node, parent, phase: \"enter\" });\n        },\n        exit(node, parent) {\n            traversal.push({ node, parent, phase: \"exit\" });\n        }\n    });\n\n    return traversal.filter(filter).values();\n}\n\n/**\n * @fileoverview Evaluator for Momoa AST.\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\n/**\n * Evaluates a Momoa AST node into a JavaScript value.\n * @param {Node} node The node to interpet.\n * @returns {*} The JavaScript value for the node. \n */\nfunction evaluate(node) {\n    switch (node.type) {\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n        return node.value;\n\n    case \"Null\":\n        return null;\n\n    case \"Array\":\n        return node.elements.map(evaluate);\n\n    case \"Object\": {\n\n        const object = {};\n\n        node.members.forEach(member => {\n            object[evaluate(member.name)] = evaluate(member.value);\n        });    \n\n        return object;\n    }    \n\n    case \"Document\":\n        return evaluate(node.body);\n\n    case \"Property\":\n        throw new Error(\"Cannot evaluate object property outside of an object.\");\n\n    default:\n        throw new Error(`Unknown node type ${ node.type }.`);\n    }\n}\n\n/**\n * @fileoverview Printer for Momoa AST.\n * @author Nicholas C. Zakas\n */\n\n//-----------------------------------------------------------------------------\n// Exports\n//-----------------------------------------------------------------------------\n\n/**\n * Converts a Momoa AST back into a JSON string.\n * @param {Node} node The node to print.\n * @param {int} [options.indent=0] The number of spaces to indent each line. If\n *      greater than 0, then newlines and indents will be added to output. \n * @returns {string} The JSON representation of the AST.\n */\nfunction print(node, { indent = 0 } = {}) {\n    const value = evaluate(node);\n    return JSON.stringify(value, null, indent);\n}\n\n/**\n * @fileoverview File defining the interface of the package.\n * @author Nicholas C. Zakas\n */\n\nexports.evaluate = evaluate;\nexports.iterator = iterator;\nexports.parse = parse;\nexports.print = print;\nexports.tokenize = tokenize;\nexports.traverse = traverse;\nexports.types = types;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","(typeof navigator !== \"undefined\") && (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lottie = factory());\n})(this, (function () { 'use strict';\n\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var locationHref = '';\n  var _useWebWorker = false;\n  var initialDefaultFrame = -999999;\n\n  var setWebWorker = function setWebWorker(flag) {\n    _useWebWorker = !!flag;\n  };\n\n  var getWebWorker = function getWebWorker() {\n    return _useWebWorker;\n  };\n\n  var setLocationHref = function setLocationHref(value) {\n    locationHref = value;\n  };\n\n  var getLocationHref = function getLocationHref() {\n    return locationHref;\n  };\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type);\n  }\n\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n\n  // import Howl from '../../3rd_party/howler';\n  var audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n\n    AudioController.prototype = {\n      addAudio: function addAudio(audio) {\n        this.audios.push(audio);\n      },\n      pause: function pause() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function resume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function setRate(rateValue) {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function createAudio(assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n\n        return {\n          isPlaying: false,\n          play: function play() {\n            this.isPlaying = true;\n          },\n          seek: function seek() {\n            this.isPlaying = false;\n          },\n          playing: function playing() {},\n          rate: function rate() {},\n          setVolume: function setVolume() {}\n        };\n      },\n      setAudioFactory: function setAudioFactory(audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function setVolume(value) {\n        this._volume = value;\n\n        this._updateVolume();\n      },\n      mute: function mute() {\n        this._isMuted = true;\n\n        this._updateVolume();\n      },\n      unmute: function unmute() {\n        this._isMuted = false;\n\n        this._updateVolume();\n      },\n      getVolume: function getVolume() {\n        return this._volume;\n      },\n      _updateVolume: function _updateVolume() {\n        var i;\n        var len = this.audios.length;\n\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n\n  var createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value;\n\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1;\n          break;\n\n        default:\n          value = 1.1;\n          break;\n      }\n\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n\n      return arr;\n    }\n\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len);\n      }\n\n      if (type === 'int16') {\n        return new Int16Array(len);\n      }\n\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len);\n      }\n\n      return createRegularArray(type, len);\n    }\n\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory;\n    }\n\n    return createRegularArray;\n  }();\n\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n\n  function _typeof$6(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$6 = function _typeof(obj) { return typeof obj; }; } else { _typeof$6 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$6(obj); }\n  var subframeEnabled = true;\n  var expressionsPlugin = null;\n  var expressionsInterfaces = null;\n  var idPrefix$1 = '';\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var _shouldRoundValues = false;\n  var bmPow = Math.pow;\n  var bmSqrt = Math.sqrt;\n  var bmFloor = Math.floor;\n  var bmMax = Math.max;\n  var bmMin = Math.min;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\n    var i;\n    var len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface$1() {\n    return {};\n  }\n\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = _typeof$6(val);\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i;\n      var len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag;\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value);\n    }\n\n    return value;\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = '0 0';\n    element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = 'visible';\n    element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = 'preserve-3d';\n    element.style.webkitTransformStyle = 'preserve-3d';\n    element.style.mozTransformStyle = 'preserve-3d';\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError';\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError';\n    this.nativeError = nativeError;\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type;\n    this.nativeError = nativeError;\n  }\n\n  var createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + '__lottie_element_' + _count;\n    };\n  }();\n\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n\n      default:\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n\n      default:\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  var setSubframeEnabled = function setSubframeEnabled(flag) {\n    subframeEnabled = !!flag;\n  };\n\n  var getSubframeEnabled = function getSubframeEnabled() {\n    return subframeEnabled;\n  };\n\n  var setExpressionsPlugin = function setExpressionsPlugin(value) {\n    expressionsPlugin = value;\n  };\n\n  var getExpressionsPlugin = function getExpressionsPlugin() {\n    return expressionsPlugin;\n  };\n\n  var setExpressionInterfaces = function setExpressionInterfaces(value) {\n    expressionsInterfaces = value;\n  };\n\n  var getExpressionInterfaces = function getExpressionInterfaces() {\n    return expressionsInterfaces;\n  };\n\n  var setDefaultCurveSegments = function setDefaultCurveSegments(value) {\n    defaultCurveSegments = value;\n  };\n\n  var getDefaultCurveSegments = function getDefaultCurveSegments() {\n    return defaultCurveSegments;\n  };\n\n  var setIdPrefix = function setIdPrefix(value) {\n    idPrefix$1 = value;\n  };\n\n  var getIdPrefix = function getIdPrefix() {\n    return idPrefix$1;\n  };\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type);\n  }\n\n  function _typeof$5(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$5 = function _typeof(obj) { return typeof obj; }; } else { _typeof$5 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$5(obj); }\n\n  var dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function onmessage() {},\n      postMessage: function postMessage(path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function postMessage(data) {\n        workerProxy.onmessage({\n          data: data\n        });\n      }\n    };\n\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], {\n          type: 'text/javascript'\n        }); // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n\n      workerFn = fn;\n      return workerProxy;\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true;\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets); // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n\n                i += 1;\n              }\n\n              return null;\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps);\n\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true;\n                  return comp.layers;\n                }\n\n                return JSON.parse(JSON.stringify(comp.layers));\n              }\n\n              return null;\n            }\n\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n\n              return null;\n            }\n\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no'\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: 'tr'\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {// data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type');\n\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response;\n                }\n\n                if (xhr.response && _typeof$5(xhr.response) === 'object') {\n                  return xhr.response;\n                }\n\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response);\n                }\n\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n\n                return null;\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest(); // set responseType after calling open or IE will break.\n\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json';\n                } catch (err) {} // eslint-disable-line no-empty\n\n\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n\n                try {\n                  // Hack to workaround banner validation\n                  xhr.open(['G', 'E', 'T'].join(''), path, true);\n                } catch (error) {\n                  // Hack to workaround banner validation\n                  xhr.open(['G', 'E', 'T'].join(''), fullPath + '/' + path, true);\n                }\n\n                xhr.send();\n              }\n\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.dataManager.completeData(data);\n\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation;\n\n            _workerSelf.dataManager.completeData(animation);\n\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success'\n            });\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: 'success'\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: 'error'\n              });\n            });\n          }\n        });\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data;\n          var id = data.id;\n          var process = processes[id];\n          processes[id] = null;\n\n          if (data.status === 'success') {\n            process.onComplete(data.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = 'processId_' + _counterId;\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError\n      };\n      return id;\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId\n      });\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation\n    };\n  }();\n\n  var ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'rgba(0,0,0,0)';\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = '';\n\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n\n          clearInterval(intervalId);\n        }\n\n        _count += 1;\n      }.bind(this), 50);\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS('image');\n\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener('load', this._imageLoaded, false);\n      }\n\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag('img');\n      img.crossOrigin = 'anonymous';\n      img.addEventListener('load', this._imageLoaded, false);\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data\n      };\n      var path = getAssetsPath(data, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob.img = footageData;\n\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob.img = {};\n\n        this._footageLoaded();\n      }.bind(this));\n      return ob;\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n\n        i += 1;\n      }\n\n      return null;\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = '';\n      this.path = '';\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n\n  function BaseEvent() {}\n\n  BaseEvent.prototype = {\n    triggerEvent: function triggerEvent(eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function addEventListener(eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n\n      this._cbs[eventName].push(callback);\n\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function removeEventListener(eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n\n            i -= 1;\n            len -= 1;\n          }\n\n          i += 1;\n        }\n\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n\n  var markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n');\n      var keys = {};\n      var line;\n      var keysCount = 0;\n\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':');\n\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n\n      if (keysCount === 0) {\n        throw new Error();\n      }\n\n      return keys;\n    }\n\n    return function (_markers) {\n      var markers = [];\n\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n\n        markers.push(markerData);\n      }\n\n      return markers;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0;\n        var len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var renderers = {};\n\n  var registerRenderer = function registerRenderer(key, value) {\n    renderers[key] = value;\n  };\n\n  function getRenderer(key) {\n    return renderers[key];\n  }\n\n  function getRegisteredRenderer() {\n    // Returns canvas by default for compatibility\n    if (renderers.canvas) {\n      return 'canvas';\n    } // Returns any renderer that is registered\n\n\n    for (var key in renderers) {\n      if (renderers[key]) {\n        return key;\n      }\n    }\n\n    return '';\n  }\n\n  function _typeof$4(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$4(obj); }\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0);\n    this.expressionsPlugin = getExpressionsPlugin();\n  };\n\n  extendPrototype([BaseEvent], AnimationItem);\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = 'svg';\n\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n\n    var RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed');\n  };\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation);\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (_typeof$4(animationData) !== 'object') {\n        animationData = JSON.parse(animationData);\n      }\n    }\n\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : getRegisteredRenderer() || 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== 'false';\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n    ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    if (!params.path) {\n      this.trigger('destroy');\n    } else {\n      this.setParams(params);\n    }\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data.layers;\n    var j;\n    var jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data;\n    var expressionsPlugin = getExpressionsPlugin();\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger('data_failed');\n    }.bind(this));\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images');\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n\n    try {\n      this.animationData = animData;\n\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n\n      this.renderer.configAnimation(animData);\n\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1000;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger('config_ready');\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin = getExpressionsPlugin();\n\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function (width, height) {\n    // Adding this validation for backwards compatibility in case an event object was being passed down\n    var _width = typeof width === 'number' ? width : undefined;\n\n    var _height = typeof height === 'number' ? height : undefined;\n\n    this.renderer.updateContainerSize(_width, _height);\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n    this.trigger('drawnFrame');\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n\n    try {\n      if (this.expressionsPlugin) {\n        this.expressionsPlugin.resetFrame();\n      }\n\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger('_play');\n      this.audioController.resume();\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger('_pause');\n      this._idle = true;\n      this.trigger('_idle');\n      this.audioController.pause();\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    var numValue = Number(value);\n\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name);\n    }\n\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger('loopComplete');\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger('loopComplete');\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger('complete');\n    }\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0.001 + offset);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n\n    if (_typeof$4(arr[0]) === 'object') {\n      var i;\n      var len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n\n    return false;\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name !== name || !this.renderer) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.expressionsPlugin = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setLoop = function (isLooping) {\n    this.loop = isLooping;\n  };\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.setVolume(val);\n  };\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.mute();\n  };\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n\n    this.audioController.unmute();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index);\n    } catch (error) {// TODO: decide how to handle catch case\n    }\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name, this.drawnFrameEvent);\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent('error', error);\n\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n\n      return animations;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));\n      var i;\n      var lenAnims = animElements.length;\n\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerText = '';\n        var div = createTag('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true;\n    }\n\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n\n    function setVolume(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation);\n      }\n    }\n\n    function mute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n\n    function unmute(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize; // moduleOb.start = start;\n\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n\n  /* eslint-disable */\n  var BezierFactory = function () {\n    /**\r\n       * BezierEasing - use bezier curve for transition easing function\r\n       * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n       *\r\n       * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n       * Usage:\r\n       * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n       * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n       *\r\n       */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === 'function';\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n       * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n       */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n           * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n           */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n\n        if (initialSlope === 0.0) {\n          return guessForT;\n        }\n\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob;\n  }();\n\n  var pooling = function () {\n    function _double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n\n    return {\n      \"double\": _double\n    };\n  }();\n\n  var poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement: newElement,\n        release: release\n      };\n\n      function newElement() {\n        var element;\n\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n\n        return element;\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling[\"double\"](pool);\n          _maxLength *= 2;\n        }\n\n        if (_release) {\n          _release(element);\n        }\n\n        pool[_length] = element;\n        _length += 1;\n      }\n\n      return ob;\n    };\n  }();\n\n  var bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments())\n      };\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  var segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n\n      element.lengths.length = 0;\n    }\n\n    return poolFactory(8, create, release);\n  }();\n\n  function bezFunction() {\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.001 && det1 < 0.001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\n\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n\n        return storedData[bezierName];\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n\n          flag = false;\n        }\n      }\n\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8);\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase\n\n      var t0t0t0 = t0 * t0 * t0; //\n\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase\n\n      var t0t0t1 = t0 * t0 * t1; //\n\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase\n\n      var t0t1t1 = t0 * t1 * t1; //\n\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase\n\n      var t1t1t1 = t1 * t1 * t1;\n\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints;\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  var initFrame = initialDefaultFrame;\n  var mathAbs = Math.abs;\n\n  function interpolateValue(frameNum, caching) {\n    var offsetTime = this.offsetTime;\n    var newValue;\n\n    if (this.propType === 'multidimensional') {\n      newValue = createTypedArray('float32', this.pv.length);\n    }\n\n    var iterationIndex = caching.lastIndex;\n    var i = iterationIndex;\n    var len = this.keyframes.length - 1;\n    var flag = true;\n    var keyData;\n    var nextKeyData;\n    var keyframeMetadata;\n\n    while (flag) {\n      keyData = this.keyframes[i];\n      nextKeyData = this.keyframes[i + 1];\n\n      if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n        if (keyData.h) {\n          keyData = nextKeyData;\n        }\n\n        iterationIndex = 0;\n        break;\n      }\n\n      if (nextKeyData.t - offsetTime > frameNum) {\n        iterationIndex = i;\n        break;\n      }\n\n      if (i < len - 1) {\n        i += 1;\n      } else {\n        iterationIndex = 0;\n        flag = false;\n      }\n    }\n\n    keyframeMetadata = this.keyframesMetadata[i] || {};\n    var k;\n    var kLen;\n    var perc;\n    var jLen;\n    var j;\n    var fnc;\n    var nextKeyTime = nextKeyData.t - offsetTime;\n    var keyTime = keyData.t - offsetTime;\n    var endValue;\n\n    if (keyData.to) {\n      if (!keyframeMetadata.bezierData) {\n        keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n      }\n\n      var bezierData = keyframeMetadata.bezierData;\n\n      if (frameNum >= nextKeyTime || frameNum < keyTime) {\n        var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n        kLen = bezierData.points[ind].point.length;\n\n        for (k = 0; k < kLen; k += 1) {\n          newValue[k] = bezierData.points[ind].point[k];\n        } // caching._lastKeyframeIndex = -1;\n\n      } else {\n        if (keyframeMetadata.__fnct) {\n          fnc = keyframeMetadata.__fnct;\n        } else {\n          fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n          keyframeMetadata.__fnct = fnc;\n        }\n\n        perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n        var distanceInLine = bezierData.segmentLength * perc;\n        var segmentPerc;\n        var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n        j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n        flag = true;\n        jLen = bezierData.points.length;\n\n        while (flag) {\n          addedLength += bezierData.points[j].partialLength;\n\n          if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n            kLen = bezierData.points[j].point.length;\n\n            for (k = 0; k < kLen; k += 1) {\n              newValue[k] = bezierData.points[j].point[k];\n            }\n\n            break;\n          } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n            segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n            kLen = bezierData.points[j].point.length;\n\n            for (k = 0; k < kLen; k += 1) {\n              newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n            }\n\n            break;\n          }\n\n          if (j < jLen - 1) {\n            j += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        caching._lastPoint = j;\n        caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n        caching._lastKeyframeIndex = i;\n      }\n    } else {\n      var outX;\n      var outY;\n      var inX;\n      var inY;\n      var keyValue;\n      len = keyData.s.length;\n      endValue = nextKeyData.s || keyData.e;\n\n      if (this.sh && keyData.h !== 1) {\n        if (frameNum >= nextKeyTime) {\n          newValue[0] = endValue[0];\n          newValue[1] = endValue[1];\n          newValue[2] = endValue[2];\n        } else if (frameNum <= keyTime) {\n          newValue[0] = keyData.s[0];\n          newValue[1] = keyData.s[1];\n          newValue[2] = keyData.s[2];\n        } else {\n          var quatStart = createQuaternion(keyData.s);\n          var quatEnd = createQuaternion(endValue);\n          var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n          quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n        }\n      } else {\n        for (i = 0; i < len; i += 1) {\n          if (keyData.h !== 1) {\n            if (frameNum >= nextKeyTime) {\n              perc = 1;\n            } else if (frameNum < keyTime) {\n              perc = 0;\n            } else {\n              if (keyData.o.x.constructor === Array) {\n                if (!keyframeMetadata.__fnct) {\n                  keyframeMetadata.__fnct = [];\n                }\n\n                if (!keyframeMetadata.__fnct[i]) {\n                  outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];\n                  outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];\n                  inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];\n                  inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyframeMetadata.__fnct[i] = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct[i];\n                }\n              } else if (!keyframeMetadata.__fnct) {\n                outX = keyData.o.x;\n                outY = keyData.o.y;\n                inX = keyData.i.x;\n                inY = keyData.i.y;\n                fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                keyData.keyframeMetadata = fnc;\n              } else {\n                fnc = keyframeMetadata.__fnct;\n              }\n\n              perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n            }\n          }\n\n          endValue = nextKeyData.s || keyData.e;\n          keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n\n          if (this.propType === 'multidimensional') {\n            newValue[i] = keyValue;\n          } else {\n            newValue = keyValue;\n          }\n        }\n      }\n    }\n\n    caching.lastIndex = iterationIndex;\n    return newValue;\n  } // based on @Toji's https://github.com/toji/gl-matrix/\n\n\n  function slerp(a, b, t) {\n    var out = [];\n    var ax = a[0];\n    var ay = a[1];\n    var az = a[2];\n    var aw = a[3];\n    var bx = b[0];\n    var by = b[1];\n    var bz = b[2];\n    var bw = b[3];\n    var omega;\n    var cosom;\n    var sinom;\n    var scale0;\n    var scale1;\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    }\n\n    if (1.0 - cosom > 0.000001) {\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      scale0 = 1.0 - t;\n      scale1 = t;\n    }\n\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    return out;\n  }\n\n  function quaternionToEuler(out, quat) {\n    var qx = quat[0];\n    var qy = quat[1];\n    var qz = quat[2];\n    var qw = quat[3];\n    var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n    var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n    var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n    out[0] = heading / degToRads;\n    out[1] = attitude / degToRads;\n    out[2] = bank / degToRads;\n  }\n\n  function createQuaternion(values) {\n    var heading = values[0] * degToRads;\n    var attitude = values[1] * degToRads;\n    var bank = values[2] * degToRads;\n    var c1 = Math.cos(heading / 2);\n    var c2 = Math.cos(attitude / 2);\n    var c3 = Math.cos(bank / 2);\n    var s1 = Math.sin(heading / 2);\n    var s2 = Math.sin(attitude / 2);\n    var s3 = Math.sin(bank / 2);\n    var w = c1 * c2 * c3 - s1 * s2 * s3;\n    var x = s1 * s2 * c3 + c1 * c2 * s3;\n    var y = s1 * c2 * c3 + c1 * s2 * s3;\n    var z = c1 * s2 * c3 - s1 * c2 * s3;\n    return [x, y, z, w];\n  }\n\n  function getValueAtCurrentTime() {\n    var frameNum = this.comp.renderedFrame - this.offsetTime;\n    var initTime = this.keyframes[0].t - this.offsetTime;\n    var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n    if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n      if (this._caching.lastFrame >= frameNum) {\n        this._caching._lastKeyframeIndex = -1;\n        this._caching.lastIndex = 0;\n      }\n\n      var renderResult = this.interpolateValue(frameNum, this._caching);\n      this.pv = renderResult;\n    }\n\n    this._caching.lastFrame = frameNum;\n    return this.pv;\n  }\n\n  function setVValue(val) {\n    var multipliedValue;\n\n    if (this.propType === 'unidimensional') {\n      multipliedValue = val * this.mult;\n\n      if (mathAbs(this.v - multipliedValue) > 0.00001) {\n        this.v = multipliedValue;\n        this._mdf = true;\n      }\n    } else {\n      var i = 0;\n      var len = this.v.length;\n\n      while (i < len) {\n        multipliedValue = val[i] * this.mult;\n\n        if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n          this.v[i] = multipliedValue;\n          this._mdf = true;\n        }\n\n        i += 1;\n      }\n    }\n  }\n\n  function processEffectsSequence() {\n    if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n      return;\n    }\n\n    if (this.lock) {\n      this.setVValue(this.pv);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = this._isFirstFrame;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = this.kf ? this.pv : this.data.k;\n\n    for (i = 0; i < len; i += 1) {\n      finalValue = this.effectsSequence[i](finalValue);\n    }\n\n    this.setVValue(finalValue);\n    this._isFirstFrame = false;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  }\n\n  function addEffect(effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.container.addDynamicProperty(this);\n  }\n\n  function ValueProperty(elem, data, mult, container) {\n    this.propType = 'unidimensional';\n    this.mult = mult || 1;\n    this.data = data;\n    this.v = mult ? data.k * mult : data.k;\n    this.pv = data.k;\n    this._mdf = false;\n    this.elem = elem;\n    this.container = container;\n    this.comp = elem.comp;\n    this.k = false;\n    this.kf = false;\n    this.vel = 0;\n    this.effectsSequence = [];\n    this._isFirstFrame = true;\n    this.getValue = processEffectsSequence;\n    this.setVValue = setVValue;\n    this.addEffect = addEffect;\n  }\n\n  function MultiDimensionalProperty(elem, data, mult, container) {\n    this.propType = 'multidimensional';\n    this.mult = mult || 1;\n    this.data = data;\n    this._mdf = false;\n    this.elem = elem;\n    this.container = container;\n    this.comp = elem.comp;\n    this.k = false;\n    this.kf = false;\n    this.frameId = -1;\n    var i;\n    var len = data.k.length;\n    this.v = createTypedArray('float32', len);\n    this.pv = createTypedArray('float32', len);\n    this.vel = createTypedArray('float32', len);\n\n    for (i = 0; i < len; i += 1) {\n      this.v[i] = data.k[i] * this.mult;\n      this.pv[i] = data.k[i];\n    }\n\n    this._isFirstFrame = true;\n    this.effectsSequence = [];\n    this.getValue = processEffectsSequence;\n    this.setVValue = setVValue;\n    this.addEffect = addEffect;\n  }\n\n  function KeyframedValueProperty(elem, data, mult, container) {\n    this.propType = 'unidimensional';\n    this.keyframes = data.k;\n    this.keyframesMetadata = [];\n    this.offsetTime = elem.data.st;\n    this.frameId = -1;\n    this._caching = {\n      lastFrame: initFrame,\n      lastIndex: 0,\n      value: 0,\n      _lastKeyframeIndex: -1\n    };\n    this.k = true;\n    this.kf = true;\n    this.data = data;\n    this.mult = mult || 1;\n    this.elem = elem;\n    this.container = container;\n    this.comp = elem.comp;\n    this.v = initFrame;\n    this.pv = initFrame;\n    this._isFirstFrame = true;\n    this.getValue = processEffectsSequence;\n    this.setVValue = setVValue;\n    this.interpolateValue = interpolateValue;\n    this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n    this.addEffect = addEffect;\n  }\n\n  function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n    this.propType = 'multidimensional';\n    var i;\n    var len = data.k.length;\n    var s;\n    var e;\n    var to;\n    var ti;\n\n    for (i = 0; i < len - 1; i += 1) {\n      if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n        s = data.k[i].s;\n        e = data.k[i + 1].s;\n        to = data.k[i].to;\n        ti = data.k[i].ti;\n\n        if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n          data.k[i].to = null;\n          data.k[i].ti = null;\n        }\n\n        if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n          if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n        }\n      }\n    }\n\n    this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n    this.data = data;\n    this.keyframes = data.k;\n    this.keyframesMetadata = [];\n    this.offsetTime = elem.data.st;\n    this.k = true;\n    this.kf = true;\n    this._isFirstFrame = true;\n    this.mult = mult || 1;\n    this.elem = elem;\n    this.container = container;\n    this.comp = elem.comp;\n    this.getValue = processEffectsSequence;\n    this.setVValue = setVValue;\n    this.interpolateValue = interpolateValue;\n    this.frameId = -1;\n    var arrLen = data.k[0].s.length;\n    this.v = createTypedArray('float32', arrLen);\n    this.pv = createTypedArray('float32', arrLen);\n\n    for (i = 0; i < arrLen; i += 1) {\n      this.v[i] = initFrame;\n      this.pv[i] = initFrame;\n    }\n\n    this._caching = {\n      lastFrame: initFrame,\n      lastIndex: 0,\n      value: createTypedArray('float32', arrLen)\n    };\n    this.addEffect = addEffect;\n  }\n\n  var PropertyFactory = function () {\n    function getProp(elem, data, type, mult, container) {\n      if (data.sid) {\n        data = elem.globalData.slotManager.getProp(data);\n      }\n\n      var p;\n\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n\n      return p;\n    }\n\n    var ob = {\n      getProp: getProp\n    };\n    return ob;\n  }();\n\n  function DynamicPropertyContainer() {}\n\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function iterateDynamicProperties() {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n\n  var pointPool = function () {\n    function create() {\n      return createTypedArray('float32', 2);\n    }\n\n    return poolFactory(8, create);\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n\n      default:\n        arr = [];\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n\n    return newPath;\n  };\n\n  ShapePath.prototype.length = function () {\n    return this._length;\n  };\n\n  var shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === undefined ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n\n      return cloned;\n    }\n\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  var shapeCollectionPool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling[\"double\"](pool);\n        _maxLength *= 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        /* if(kf[kf.length - 1].s){\r\n                  keyPropS = kf[kf.length - 1].s[0];\r\n              }else{\r\n                  keyPropS = kf[kf.length - 2].e[0];\r\n              } */\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching); /// /\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i;\n      var len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n\n      var i;\n      var len = this.effectsSequence.length;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function convertEllToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n\n          var _cw = this.d !== 3;\n\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function convertStarToPath() {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          /* this.v.v.length = numPts;\r\n                  this.v.i.length = numPts;\r\n                  this.v.o.length = numPts; */\n\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            /* this.v.v[i] = [x,y];\r\n                      this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                      this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                      this.v._length = numPts; */\n\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function convertPolygonToPath() {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function convertRectToPath() {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n\n    function getShapeProp(elem, data, type) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n  var Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2; // }\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      /* matrix order (canvas compatible):\r\n           * ace\r\n           * bdf\r\n           * 001\r\n           */\n\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function multiply(matrix) {\n      var matrixProps = matrix.props;\n      return this.transform(matrixProps[0], matrixProps[1], matrixProps[2], matrixProps[3], matrixProps[4], matrixProps[5], matrixProps[6], matrixProps[7], matrixProps[8], matrixProps[9], matrixProps[10], matrixProps[11], matrixProps[12], matrixProps[13], matrixProps[14], matrixProps[15]);\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function equals(matr) {\n      var i = 0;\n\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n\n        i += 1;\n      }\n\n      return true;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n\n      return matr;\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /* return {\r\n           x: x * me.a + y * me.c + me.e,\r\n           y: x * me.b + y * me.d + me.f\r\n           }; */\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6);\n\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n\n      return arr;\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr;\n\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n\n      return arr;\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var i = 0;\n      var props = this.props;\n      var cssValue = 'matrix3d(';\n      var v = 10000;\n\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? ')' : ',';\n        i += 1;\n      }\n\n      return cssValue;\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000;\n\n      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n\n      return val;\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /* if(this.isIdentity()) {\r\n              return '';\r\n          } */\n      var props = this.props;\n\n      var _a = roundMatrixProperty(props[0]);\n\n      var _b = roundMatrixProperty(props[1]);\n\n      var _c = roundMatrixProperty(props[4]);\n\n      var _d = roundMatrixProperty(props[5]);\n\n      var _e = roundMatrixProperty(props[12]);\n\n      var _f = roundMatrixProperty(props[13]);\n\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.multiply = multiply;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray('float32', 16);\n      this.reset();\n    };\n  }();\n\n  function _typeof$3(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$3 = function _typeof(obj) { return typeof obj; }; } else { _typeof$3 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$3(obj); }\n  var lottie = {};\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200);\n          break;\n\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50);\n          break;\n\n        case 'low':\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value);\n    }\n\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin);\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory;\n\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory;\n\n      case 'matrix':\n        return Matrix;\n\n      default:\n        return null;\n    }\n  }\n\n  lottie.play = animationManager.play;\n  lottie.pause = animationManager.pause;\n  lottie.setLocationHref = setLocation;\n  lottie.togglePause = animationManager.togglePause;\n  lottie.setSpeed = animationManager.setSpeed;\n  lottie.setDirection = animationManager.setDirection;\n  lottie.stop = animationManager.stop;\n  lottie.searchAnimations = searchAnimations;\n  lottie.registerAnimation = animationManager.registerAnimation;\n  lottie.loadAnimation = loadAnimation;\n  lottie.setSubframeRendering = setSubframeRendering;\n  lottie.resize = animationManager.resize; // lottie.start = start;\n\n  lottie.goToAndStop = animationManager.goToAndStop;\n  lottie.destroy = animationManager.destroy;\n  lottie.setQuality = setQuality;\n  lottie.inBrowser = inBrowser;\n  lottie.installPlugin = installPlugin;\n  lottie.freeze = animationManager.freeze;\n  lottie.unfreeze = animationManager.unfreeze;\n  lottie.setVolume = animationManager.setVolume;\n  lottie.mute = animationManager.mute;\n  lottie.unmute = animationManager.unmute;\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie.useWebWorker = setWebWorker;\n  lottie.setIDPrefix = setPrefix;\n  lottie.__getFactory = getFactory;\n  lottie.version = '5.12.2';\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1]);\n      }\n    }\n\n    return null;\n  }\n\n  var queryString = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : ''; // eslint-disable-line no-useless-escape\n\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100); // this adds bodymovin to the window object for backwards compatibility\n\n  try {\n    if (!((typeof exports === \"undefined\" ? \"undefined\" : _typeof$3(exports)) === 'object' && typeof module !== 'undefined') && !(typeof define === 'function' && define.amd) // eslint-disable-line no-undef\n    ) {\n      window.bodymovin = lottie;\n    }\n  } catch (err) {//\n  }\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh);\n      var shapeData = {\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n\n  function TrimModifier() {}\n\n  extendPrototype([ShapeModifier], TrimModifier);\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n\n    pathsData.length = 0;\n    return pathsData;\n  };\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      s = Math.round(s * 10000) * 0.0001;\n      e = Math.round(e * 10000) * 0.0001;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes(); // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos);\n    }\n\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  function PuckerAndBloatModifier() {}\n\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n\n    return clonedPath;\n  };\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  var TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n\n      this.iterateDynamicProperties();\n\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function precalculateMatrix() {\n      this.appliedTransformations = 0;\n      this.pre.reset();\n\n      if (!this.a.effectsSequence.length) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n\n    function autoOrient() {//\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = 'transform';\n      this.data = data;\n      this.v = new Matrix(); // Precalculated matrix with non animated properties\n\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n\n        if (data.or.k[0].ti) {\n          var i;\n          var len = data.or.k.length;\n\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null;\n            data.or.k[i].ti = null;\n          }\n        }\n\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); // sh Indicates it needs to be capped between -180 and 180\n\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n\n      this.a = PropertyFactory.getProp(elem, data.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this); // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n\n      this._isDirty = true;\n\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n\n    return {\n      getTransformProperty: getTransformProperty\n    };\n  }();\n\n  function RepeaterModifier() {}\n\n  extendPrototype([ShapeModifier], RepeaterModifier);\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n\n    while (pos > 0) {\n      pos -= 1; // this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: 'Transform',\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: 'tr'\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n\n      cont = 0;\n      var renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n\n        cont += 1;\n      }\n\n      this._currentCopies = copies; /// /\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n\n    return hasReloaded;\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  function RoundCornersModifier() {}\n\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /* clonedPath.v[index] = currentV;\r\n                  clonedPath.o[index] = currentO;\r\n                  clonedPath.i[index] = currentI; */\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return clonedPath;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  function floatEqual(a, b) {\n    return Math.abs(a - b) * 100000 <= Math.min(Math.abs(a), Math.abs(b));\n  }\n\n  function floatZero(f) {\n    return Math.abs(f) <= 0.00001;\n  }\n\n  function lerp(p0, p1, amount) {\n    return p0 * (1 - amount) + p1 * amount;\n  }\n\n  function lerpPoint(p0, p1, amount) {\n    return [lerp(p0[0], p1[0], amount), lerp(p0[1], p1[1], amount)];\n  }\n\n  function quadRoots(a, b, c) {\n    // no root\n    if (a === 0) return [];\n    var s = b * b - 4 * a * c; // Complex roots\n\n    if (s < 0) return [];\n    var singleRoot = -b / (2 * a); // 1 root\n\n    if (s === 0) return [singleRoot];\n    var delta = Math.sqrt(s) / (2 * a); // 2 roots\n\n    return [singleRoot - delta, singleRoot + delta];\n  }\n\n  function polynomialCoefficients(p0, p1, p2, p3) {\n    return [-p0 + 3 * p1 - 3 * p2 + p3, 3 * p0 - 6 * p1 + 3 * p2, -3 * p0 + 3 * p1, p0];\n  }\n\n  function singlePoint(p) {\n    return new PolynomialBezier(p, p, p, p, false);\n  }\n\n  function PolynomialBezier(p0, p1, p2, p3, linearize) {\n    if (linearize && pointEqual(p0, p1)) {\n      p1 = lerpPoint(p0, p3, 1 / 3);\n    }\n\n    if (linearize && pointEqual(p2, p3)) {\n      p2 = lerpPoint(p0, p3, 2 / 3);\n    }\n\n    var coeffx = polynomialCoefficients(p0[0], p1[0], p2[0], p3[0]);\n    var coeffy = polynomialCoefficients(p0[1], p1[1], p2[1], p3[1]);\n    this.a = [coeffx[0], coeffy[0]];\n    this.b = [coeffx[1], coeffy[1]];\n    this.c = [coeffx[2], coeffy[2]];\n    this.d = [coeffx[3], coeffy[3]];\n    this.points = [p0, p1, p2, p3];\n  }\n\n  PolynomialBezier.prototype.point = function (t) {\n    return [((this.a[0] * t + this.b[0]) * t + this.c[0]) * t + this.d[0], ((this.a[1] * t + this.b[1]) * t + this.c[1]) * t + this.d[1]];\n  };\n\n  PolynomialBezier.prototype.derivative = function (t) {\n    return [(3 * t * this.a[0] + 2 * this.b[0]) * t + this.c[0], (3 * t * this.a[1] + 2 * this.b[1]) * t + this.c[1]];\n  };\n\n  PolynomialBezier.prototype.tangentAngle = function (t) {\n    var p = this.derivative(t);\n    return Math.atan2(p[1], p[0]);\n  };\n\n  PolynomialBezier.prototype.normalAngle = function (t) {\n    var p = this.derivative(t);\n    return Math.atan2(p[0], p[1]);\n  };\n\n  PolynomialBezier.prototype.inflectionPoints = function () {\n    var denom = this.a[1] * this.b[0] - this.a[0] * this.b[1];\n    if (floatZero(denom)) return [];\n    var tcusp = -0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / denom;\n    var square = tcusp * tcusp - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / denom;\n    if (square < 0) return [];\n    var root = Math.sqrt(square);\n\n    if (floatZero(root)) {\n      if (root > 0 && root < 1) return [tcusp];\n      return [];\n    }\n\n    return [tcusp - root, tcusp + root].filter(function (r) {\n      return r > 0 && r < 1;\n    });\n  };\n\n  PolynomialBezier.prototype.split = function (t) {\n    if (t <= 0) return [singlePoint(this.points[0]), this];\n    if (t >= 1) return [this, singlePoint(this.points[this.points.length - 1])];\n    var p10 = lerpPoint(this.points[0], this.points[1], t);\n    var p11 = lerpPoint(this.points[1], this.points[2], t);\n    var p12 = lerpPoint(this.points[2], this.points[3], t);\n    var p20 = lerpPoint(p10, p11, t);\n    var p21 = lerpPoint(p11, p12, t);\n    var p3 = lerpPoint(p20, p21, t);\n    return [new PolynomialBezier(this.points[0], p10, p20, p3, true), new PolynomialBezier(p3, p21, p12, this.points[3], true)];\n  };\n\n  function extrema(bez, comp) {\n    var min = bez.points[0][comp];\n    var max = bez.points[bez.points.length - 1][comp];\n\n    if (min > max) {\n      var e = max;\n      max = min;\n      min = e;\n    } // Derivative roots to find min/max\n\n\n    var f = quadRoots(3 * bez.a[comp], 2 * bez.b[comp], bez.c[comp]);\n\n    for (var i = 0; i < f.length; i += 1) {\n      if (f[i] > 0 && f[i] < 1) {\n        var val = bez.point(f[i])[comp];\n        if (val < min) min = val;else if (val > max) max = val;\n      }\n    }\n\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  PolynomialBezier.prototype.bounds = function () {\n    return {\n      x: extrema(this, 0),\n      y: extrema(this, 1)\n    };\n  };\n\n  PolynomialBezier.prototype.boundingBox = function () {\n    var bounds = this.bounds();\n    return {\n      left: bounds.x.min,\n      right: bounds.x.max,\n      top: bounds.y.min,\n      bottom: bounds.y.max,\n      width: bounds.x.max - bounds.x.min,\n      height: bounds.y.max - bounds.y.min,\n      cx: (bounds.x.max + bounds.x.min) / 2,\n      cy: (bounds.y.max + bounds.y.min) / 2\n    };\n  };\n\n  function intersectData(bez, t1, t2) {\n    var box = bez.boundingBox();\n    return {\n      cx: box.cx,\n      cy: box.cy,\n      width: box.width,\n      height: box.height,\n      bez: bez,\n      t: (t1 + t2) / 2,\n      t1: t1,\n      t2: t2\n    };\n  }\n\n  function splitData(data) {\n    var split = data.bez.split(0.5);\n    return [intersectData(split[0], data.t1, data.t), intersectData(split[1], data.t, data.t2)];\n  }\n\n  function boxIntersect(b1, b2) {\n    return Math.abs(b1.cx - b2.cx) * 2 < b1.width + b2.width && Math.abs(b1.cy - b2.cy) * 2 < b1.height + b2.height;\n  }\n\n  function intersectsImpl(d1, d2, depth, tolerance, intersections, maxRecursion) {\n    if (!boxIntersect(d1, d2)) return;\n\n    if (depth >= maxRecursion || d1.width <= tolerance && d1.height <= tolerance && d2.width <= tolerance && d2.height <= tolerance) {\n      intersections.push([d1.t, d2.t]);\n      return;\n    }\n\n    var d1s = splitData(d1);\n    var d2s = splitData(d2);\n    intersectsImpl(d1s[0], d2s[0], depth + 1, tolerance, intersections, maxRecursion);\n    intersectsImpl(d1s[0], d2s[1], depth + 1, tolerance, intersections, maxRecursion);\n    intersectsImpl(d1s[1], d2s[0], depth + 1, tolerance, intersections, maxRecursion);\n    intersectsImpl(d1s[1], d2s[1], depth + 1, tolerance, intersections, maxRecursion);\n  }\n\n  PolynomialBezier.prototype.intersections = function (other, tolerance, maxRecursion) {\n    if (tolerance === undefined) tolerance = 2;\n    if (maxRecursion === undefined) maxRecursion = 7;\n    var intersections = [];\n    intersectsImpl(intersectData(this, 0, 1), intersectData(other, 0, 1), 0, tolerance, intersections, maxRecursion);\n    return intersections;\n  };\n\n  PolynomialBezier.shapeSegment = function (shapePath, index) {\n    var nextIndex = (index + 1) % shapePath.length();\n    return new PolynomialBezier(shapePath.v[index], shapePath.o[index], shapePath.i[nextIndex], shapePath.v[nextIndex], true);\n  };\n\n  PolynomialBezier.shapeSegmentInverted = function (shapePath, index) {\n    var nextIndex = (index + 1) % shapePath.length();\n    return new PolynomialBezier(shapePath.v[nextIndex], shapePath.i[nextIndex], shapePath.o[index], shapePath.v[index], true);\n  };\n\n  function crossProduct(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function lineIntersection(start1, end1, start2, end2) {\n    var v1 = [start1[0], start1[1], 1];\n    var v2 = [end1[0], end1[1], 1];\n    var v3 = [start2[0], start2[1], 1];\n    var v4 = [end2[0], end2[1], 1];\n    var r = crossProduct(crossProduct(v1, v2), crossProduct(v3, v4));\n    if (floatZero(r[2])) return null;\n    return [r[0] / r[2], r[1] / r[2]];\n  }\n\n  function polarOffset(p, angle, length) {\n    return [p[0] + Math.cos(angle) * length, p[1] - Math.sin(angle) * length];\n  }\n\n  function pointDistance(p1, p2) {\n    return Math.hypot(p1[0] - p2[0], p1[1] - p2[1]);\n  }\n\n  function pointEqual(p1, p2) {\n    return floatEqual(p1[0], p2[0]) && floatEqual(p1[1], p2[1]);\n  }\n\n  function ZigZagModifier() {}\n\n  extendPrototype([ShapeModifier], ZigZagModifier);\n\n  ZigZagModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amplitude = PropertyFactory.getProp(elem, data.s, 0, null, this);\n    this.frequency = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this.pointsType = PropertyFactory.getProp(elem, data.pt, 0, null, this);\n    this._isAnimated = this.amplitude.effectsSequence.length !== 0 || this.frequency.effectsSequence.length !== 0 || this.pointsType.effectsSequence.length !== 0;\n  };\n\n  function setPoint(outputBezier, point, angle, direction, amplitude, outAmplitude, inAmplitude) {\n    var angO = angle - Math.PI / 2;\n    var angI = angle + Math.PI / 2;\n    var px = point[0] + Math.cos(angle) * direction * amplitude;\n    var py = point[1] - Math.sin(angle) * direction * amplitude;\n    outputBezier.setTripleAt(px, py, px + Math.cos(angO) * outAmplitude, py - Math.sin(angO) * outAmplitude, px + Math.cos(angI) * inAmplitude, py - Math.sin(angI) * inAmplitude, outputBezier.length());\n  }\n\n  function getPerpendicularVector(pt1, pt2) {\n    var vector = [pt2[0] - pt1[0], pt2[1] - pt1[1]];\n    var rot = -Math.PI * 0.5;\n    var rotatedVector = [Math.cos(rot) * vector[0] - Math.sin(rot) * vector[1], Math.sin(rot) * vector[0] + Math.cos(rot) * vector[1]];\n    return rotatedVector;\n  }\n\n  function getProjectingAngle(path, cur) {\n    var prevIndex = cur === 0 ? path.length() - 1 : cur - 1;\n    var nextIndex = (cur + 1) % path.length();\n    var prevPoint = path.v[prevIndex];\n    var nextPoint = path.v[nextIndex];\n    var pVector = getPerpendicularVector(prevPoint, nextPoint);\n    return Math.atan2(0, 1) - Math.atan2(pVector[1], pVector[0]);\n  }\n\n  function zigZagCorner(outputBezier, path, cur, amplitude, frequency, pointType, direction) {\n    var angle = getProjectingAngle(path, cur);\n    var point = path.v[cur % path._length];\n    var prevPoint = path.v[cur === 0 ? path._length - 1 : cur - 1];\n    var nextPoint = path.v[(cur + 1) % path._length];\n    var prevDist = pointType === 2 ? Math.sqrt(Math.pow(point[0] - prevPoint[0], 2) + Math.pow(point[1] - prevPoint[1], 2)) : 0;\n    var nextDist = pointType === 2 ? Math.sqrt(Math.pow(point[0] - nextPoint[0], 2) + Math.pow(point[1] - nextPoint[1], 2)) : 0;\n    setPoint(outputBezier, path.v[cur % path._length], angle, direction, amplitude, nextDist / ((frequency + 1) * 2), prevDist / ((frequency + 1) * 2), pointType);\n  }\n\n  function zigZagSegment(outputBezier, segment, amplitude, frequency, pointType, direction) {\n    for (var i = 0; i < frequency; i += 1) {\n      var t = (i + 1) / (frequency + 1);\n      var dist = pointType === 2 ? Math.sqrt(Math.pow(segment.points[3][0] - segment.points[0][0], 2) + Math.pow(segment.points[3][1] - segment.points[0][1], 2)) : 0;\n      var angle = segment.normalAngle(t);\n      var point = segment.point(t);\n      setPoint(outputBezier, point, angle, direction, amplitude, dist / ((frequency + 1) * 2), dist / ((frequency + 1) * 2), pointType);\n      direction = -direction;\n    }\n\n    return direction;\n  }\n\n  ZigZagModifier.prototype.processPath = function (path, amplitude, frequency, pointType) {\n    var count = path._length;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n\n    if (!path.c) {\n      count -= 1;\n    }\n\n    if (count === 0) return clonedPath;\n    var direction = -1;\n    var segment = PolynomialBezier.shapeSegment(path, 0);\n    zigZagCorner(clonedPath, path, 0, amplitude, frequency, pointType, direction);\n\n    for (var i = 0; i < count; i += 1) {\n      direction = zigZagSegment(clonedPath, segment, amplitude, frequency, pointType, -direction);\n\n      if (i === count - 1 && !path.c) {\n        segment = null;\n      } else {\n        segment = PolynomialBezier.shapeSegment(path, (i + 1) % count);\n      }\n\n      zigZagCorner(clonedPath, path, i + 1, amplitude, frequency, pointType, direction);\n    }\n\n    return clonedPath;\n  };\n\n  ZigZagModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amplitude = this.amplitude.v;\n    var frequency = Math.max(0, Math.round(this.frequency.v));\n    var pointType = this.pointsType.v;\n\n    if (amplitude !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amplitude, frequency, pointType));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  function linearOffset(p1, p2, amount) {\n    var angle = Math.atan2(p2[0] - p1[0], p2[1] - p1[1]);\n    return [polarOffset(p1, angle, amount), polarOffset(p2, angle, amount)];\n  }\n\n  function offsetSegment(segment, amount) {\n    var p0;\n    var p1a;\n    var p1b;\n    var p2b;\n    var p2a;\n    var p3;\n    var e;\n    e = linearOffset(segment.points[0], segment.points[1], amount);\n    p0 = e[0];\n    p1a = e[1];\n    e = linearOffset(segment.points[1], segment.points[2], amount);\n    p1b = e[0];\n    p2b = e[1];\n    e = linearOffset(segment.points[2], segment.points[3], amount);\n    p2a = e[0];\n    p3 = e[1];\n    var p1 = lineIntersection(p0, p1a, p1b, p2b);\n    if (p1 === null) p1 = p1a;\n    var p2 = lineIntersection(p2a, p3, p1b, p2b);\n    if (p2 === null) p2 = p2a;\n    return new PolynomialBezier(p0, p1, p2, p3);\n  }\n\n  function joinLines(outputBezier, seg1, seg2, lineJoin, miterLimit) {\n    var p0 = seg1.points[3];\n    var p1 = seg2.points[0]; // Bevel\n\n    if (lineJoin === 3) return p0; // Connected, they don't need a joint\n\n    if (pointEqual(p0, p1)) return p0; // Round\n\n    if (lineJoin === 2) {\n      var angleOut = -seg1.tangentAngle(1);\n      var angleIn = -seg2.tangentAngle(0) + Math.PI;\n      var center = lineIntersection(p0, polarOffset(p0, angleOut + Math.PI / 2, 100), p1, polarOffset(p1, angleOut + Math.PI / 2, 100));\n      var radius = center ? pointDistance(center, p0) : pointDistance(p0, p1) / 2;\n      var tan = polarOffset(p0, angleOut, 2 * radius * roundCorner);\n      outputBezier.setXYAt(tan[0], tan[1], 'o', outputBezier.length() - 1);\n      tan = polarOffset(p1, angleIn, 2 * radius * roundCorner);\n      outputBezier.setTripleAt(p1[0], p1[1], p1[0], p1[1], tan[0], tan[1], outputBezier.length());\n      return p1;\n    } // Miter\n\n\n    var t0 = pointEqual(p0, seg1.points[2]) ? seg1.points[0] : seg1.points[2];\n    var t1 = pointEqual(p1, seg2.points[1]) ? seg2.points[3] : seg2.points[1];\n    var intersection = lineIntersection(t0, p0, p1, t1);\n\n    if (intersection && pointDistance(intersection, p0) < miterLimit) {\n      outputBezier.setTripleAt(intersection[0], intersection[1], intersection[0], intersection[1], intersection[0], intersection[1], outputBezier.length());\n      return intersection;\n    }\n\n    return p0;\n  }\n\n  function getIntersection(a, b) {\n    var intersect = a.intersections(b);\n    if (intersect.length && floatEqual(intersect[0][0], 1)) intersect.shift();\n    if (intersect.length) return intersect[0];\n    return null;\n  }\n\n  function pruneSegmentIntersection(a, b) {\n    var outa = a.slice();\n    var outb = b.slice();\n    var intersect = getIntersection(a[a.length - 1], b[0]);\n\n    if (intersect) {\n      outa[a.length - 1] = a[a.length - 1].split(intersect[0])[0];\n      outb[0] = b[0].split(intersect[1])[1];\n    }\n\n    if (a.length > 1 && b.length > 1) {\n      intersect = getIntersection(a[0], b[b.length - 1]);\n\n      if (intersect) {\n        return [[a[0].split(intersect[0])[0]], [b[b.length - 1].split(intersect[1])[1]]];\n      }\n    }\n\n    return [outa, outb];\n  }\n\n  function pruneIntersections(segments) {\n    var e;\n\n    for (var i = 1; i < segments.length; i += 1) {\n      e = pruneSegmentIntersection(segments[i - 1], segments[i]);\n      segments[i - 1] = e[0];\n      segments[i] = e[1];\n    }\n\n    if (segments.length > 1) {\n      e = pruneSegmentIntersection(segments[segments.length - 1], segments[0]);\n      segments[segments.length - 1] = e[0];\n      segments[0] = e[1];\n    }\n\n    return segments;\n  }\n\n  function offsetSegmentSplit(segment, amount) {\n    /*\r\n      We split each bezier segment into smaller pieces based\r\n      on inflection points, this ensures the control point\r\n      polygon is convex.\r\n        (A cubic bezier can have none, one, or two inflection points)\r\n    */\n    var flex = segment.inflectionPoints();\n    var left;\n    var right;\n    var split;\n    var mid;\n\n    if (flex.length === 0) {\n      return [offsetSegment(segment, amount)];\n    }\n\n    if (flex.length === 1 || floatEqual(flex[1], 1)) {\n      split = segment.split(flex[0]);\n      left = split[0];\n      right = split[1];\n      return [offsetSegment(left, amount), offsetSegment(right, amount)];\n    }\n\n    split = segment.split(flex[0]);\n    left = split[0];\n    var t = (flex[1] - flex[0]) / (1 - flex[0]);\n    split = split[1].split(t);\n    mid = split[0];\n    right = split[1];\n    return [offsetSegment(left, amount), offsetSegment(mid, amount), offsetSegment(right, amount)];\n  }\n\n  function OffsetPathModifier() {}\n\n  extendPrototype([ShapeModifier], OffsetPathModifier);\n\n  OffsetPathModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\n    this.miterLimit = PropertyFactory.getProp(elem, data.ml, 0, null, this);\n    this.lineJoin = data.lj;\n    this._isAnimated = this.amount.effectsSequence.length !== 0;\n  };\n\n  OffsetPathModifier.prototype.processPath = function (inputBezier, amount, lineJoin, miterLimit) {\n    var outputBezier = shapePool.newElement();\n    outputBezier.c = inputBezier.c;\n    var count = inputBezier.length();\n\n    if (!inputBezier.c) {\n      count -= 1;\n    }\n\n    var i;\n    var j;\n    var segment;\n    var multiSegments = [];\n\n    for (i = 0; i < count; i += 1) {\n      segment = PolynomialBezier.shapeSegment(inputBezier, i);\n      multiSegments.push(offsetSegmentSplit(segment, amount));\n    }\n\n    if (!inputBezier.c) {\n      for (i = count - 1; i >= 0; i -= 1) {\n        segment = PolynomialBezier.shapeSegmentInverted(inputBezier, i);\n        multiSegments.push(offsetSegmentSplit(segment, amount));\n      }\n    }\n\n    multiSegments = pruneIntersections(multiSegments); // Add bezier segments to the output and apply line joints\n\n    var lastPoint = null;\n    var lastSeg = null;\n\n    for (i = 0; i < multiSegments.length; i += 1) {\n      var multiSegment = multiSegments[i];\n      if (lastSeg) lastPoint = joinLines(outputBezier, lastSeg, multiSegment[0], lineJoin, miterLimit);\n      lastSeg = multiSegment[multiSegment.length - 1];\n\n      for (j = 0; j < multiSegment.length; j += 1) {\n        segment = multiSegment[j];\n\n        if (lastPoint && pointEqual(segment.points[0], lastPoint)) {\n          outputBezier.setXYAt(segment.points[1][0], segment.points[1][1], 'o', outputBezier.length() - 1);\n        } else {\n          outputBezier.setTripleAt(segment.points[0][0], segment.points[0][1], segment.points[1][0], segment.points[1][1], segment.points[0][0], segment.points[0][1], outputBezier.length());\n        }\n\n        outputBezier.setTripleAt(segment.points[3][0], segment.points[3][1], segment.points[3][0], segment.points[3][1], segment.points[2][0], segment.points[2][1], outputBezier.length());\n        lastPoint = segment.points[3];\n      }\n    }\n\n    if (multiSegments.length) joinLines(outputBezier, lastSeg, multiSegments[0][0], lineJoin, miterLimit);\n    return outputBezier;\n  };\n\n  OffsetPathModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n    var miterLimit = this.miterLimit.v;\n    var lineJoin = this.lineJoin;\n\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount, lineJoin, miterLimit));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\n    var fWeight = 'normal';\n    var fStyle = 'normal';\n    var len = styles.length;\n    var styleName;\n\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n          break;\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = []; // Hindi characters\n\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var BLACK_FLAG_CODE_POINT = 127988;\n    var CANCEL_TAG_CODE_POINT = 917631;\n    var A_TAG_CODE_POINT = 917601;\n    var Z_TAG_CODE_POINT = 917626;\n    var VARIATION_SELECTOR_16_CODE_POINT = 65039;\n    var ZERO_WIDTH_JOINER_CODE_POINT = 8205;\n    var REGIONAL_CHARACTER_A_CODE_POINT = 127462;\n    var REGIONAL_CHARACTER_Z_CODE_POINT = 127487;\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff'];\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',');\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n\n      return enabledFamilies.join(',');\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span'); // Node is invisible to screen readers.\n\n      parentNode.setAttribute('aria-hidden', true);\n      parentNode.style.fontFamily = family;\n      var node = createTag('span'); // Characters that vary significantly among different fonts\n\n      node.innerText = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas';\n      var helper;\n      var fontProps = getFontProperties(fontData);\n\n      if (engine === 'svg') {\n        var tHelper = createNS('text');\n        tHelper.style.fontSize = '100px'; // tHelper.style.fontFamily = fontData.fFamily;\n\n        tHelper.setAttribute('font-family', fontData.fFamily);\n        tHelper.setAttribute('font-style', fontProps.style);\n        tHelper.setAttribute('font-weight', fontProps.weight);\n        tHelper.textContent = '1';\n\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit';\n          tHelper.setAttribute('class', fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d');\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text;\n          return helper.getComputedTextLength();\n        }\n\n        return helper.measureText(text).width;\n      }\n\n      return {\n        measureText: measure\n      };\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(function (data) {\n          data.helper = createHelper(data);\n          data.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style');\n            s.setAttribute('f-forigin', fontArr[i].fOrigin);\n            s.setAttribute('f-origin', fontArr[i].origin);\n            s.setAttribute('f-family', fontArr[i].fFamily);\n            s.type = 'text/css';\n            s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link');\n            l.setAttribute('f-forigin', fontArr[i].fOrigin);\n            l.setAttribute('f-origin', fontArr[i].origin);\n            l.type = 'text/css';\n            l.rel = 'stylesheet';\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link');\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin);\n            sc.setAttribute('f-origin', fontArr[i].origin);\n            sc.setAttribute('rel', 'stylesheet');\n            sc.setAttribute('href', fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(_char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n\n      if ((typeof _char === 'string' && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn // eslint-disable-line no-console\n      && !this._warned) {\n        this._warned = true;\n        console.warn('Missing character from exported characters list: ', _char, style, font); // eslint-disable-line no-console\n      }\n\n      return emptyChar;\n    }\n\n    function measureText(_char2, fontName, size) {\n      var fontData = this.getFontByName(fontName); // Using the char instead of char.charCodeAt(0)\n      // to avoid collisions between equal chars\n\n      var index = _char2;\n\n      if (!fontData.cache[index]) {\n        var tHelper = fontData.helper;\n\n        if (_char2 === ' ') {\n          var doubleSize = tHelper.measureText('|' + _char2 + '|');\n          var singleSize = tHelper.measureText('||');\n          fontData.cache[index] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index] = tHelper.measureText(_char2) / 100;\n        }\n      }\n\n      return fontData.cache[index] * size;\n    }\n\n    function getFontByName(name) {\n      var i = 0;\n      var len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return this.fonts[0];\n    }\n\n    function getCodePoint(string) {\n      var codePoint = 0;\n      var first = string.charCodeAt(0);\n\n      if (first >= 0xD800 && first <= 0xDBFF) {\n        var second = string.charCodeAt(1);\n\n        if (second >= 0xDC00 && second <= 0xDFFF) {\n          codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        }\n      }\n\n      return codePoint;\n    } // Skin tone modifiers\n\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum) !== -1;\n    }\n\n    function isZeroWidthJoiner(charCode) {\n      return charCode === ZERO_WIDTH_JOINER_CODE_POINT;\n    } // This codepoint may change the appearance of the preceding character.\n    // If that is a symbol, dingbat or emoji, U+FE0F forces it to be rendered\n    // as a colorful image as compared to a monochrome text variant.\n\n\n    function isVariationSelector(charCode) {\n      return charCode === VARIATION_SELECTOR_16_CODE_POINT;\n    } // The regional indicator symbols are a set of 26 alphabetic Unicode\n    /// characters (A–Z) intended to be used to encode ISO 3166-1 alpha-2\n    // two-letter country codes in a way that allows optional special treatment.\n\n\n    function isRegionalCode(string) {\n      var codePoint = getCodePoint(string);\n\n      if (codePoint >= REGIONAL_CHARACTER_A_CODE_POINT && codePoint <= REGIONAL_CHARACTER_Z_CODE_POINT) {\n        return true;\n      }\n\n      return false;\n    } // Some Emoji implementations represent combinations of\n    // two “regional indicator” letters as a single flag symbol.\n\n\n    function isFlagEmoji(string) {\n      return isRegionalCode(string.substr(0, 2)) && isRegionalCode(string.substr(2, 2));\n    }\n\n    function isCombinedCharacter(_char3) {\n      return combinedCharacters.indexOf(_char3) !== -1;\n    } // Regional flags start with a BLACK_FLAG_CODE_POINT\n    // folowed by 5 chars in the TAG range\n    // and end with a CANCEL_TAG_CODE_POINT\n\n\n    function isRegionalFlag(text, index) {\n      var codePoint = getCodePoint(text.substr(index, 2));\n\n      if (codePoint !== BLACK_FLAG_CODE_POINT) {\n        return false;\n      }\n\n      var count = 0;\n      index += 2;\n\n      while (count < 5) {\n        codePoint = getCodePoint(text.substr(index, 2));\n\n        if (codePoint < A_TAG_CODE_POINT || codePoint > Z_TAG_CODE_POINT) {\n          return false;\n        }\n\n        count += 1;\n        index += 2;\n      }\n\n      return getCodePoint(text.substr(index, 2)) === CANCEL_TAG_CODE_POINT;\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isFlagEmoji = isFlagEmoji;\n    Font.isRegionalCode = isRegionalCode;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    Font.isRegionalFlag = isRegionalFlag;\n    Font.isVariationSelector = isVariationSelector;\n    Font.BLACK_FLAG_CODE_POINT = BLACK_FLAG_CODE_POINT;\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n\n  function SlotManager(animationData) {\n    this.animationData = animationData;\n  }\n\n  SlotManager.prototype.getProp = function (data) {\n    if (this.animationData.slots && this.animationData.slots[data.sid]) {\n      return Object.assign(data, this.animationData.slots[data.sid].p);\n    }\n\n    return data;\n  };\n\n  function slotFactory(animationData) {\n    return new SlotManager(animationData);\n  }\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function initRenderable() {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false; // layer's display state\n\n      this.hidden = false; // If layer's transparency equals 0, it can be hidden\n\n      this.isTransparent = false; // list of animated components\n\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function addRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function removeRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function prepareRenderableFrame(num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function checkTransparency() {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       *\r\n       */\n    checkLayerLimits: function checkLayerLimits(num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function renderRenderable() {\n      var i;\n      var len = this.renderableComponents.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\r\n          this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n\n    },\n    sourceRectAtTime: function sourceRectAtTime() {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function getLayerSize() {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n\n  var getBlendMode = function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity'\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || '';\n    };\n  }();\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, this);\n          break;\n        // case 6:\n\n        default:\n          eff = new NoValueEffect(effects[i], element, this);\n          break;\n      }\n\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function checkMasks() {\n      if (!this.data.hasMask) {\n        return false;\n      }\n\n      var i = 0;\n      var len = this.data.masksProperties.length;\n\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    initExpressions: function initExpressions() {\n      var expressionsInterfaces = getExpressionInterfaces();\n\n      if (!expressionsInterfaces) {\n        return;\n      }\n\n      var LayerExpressionInterface = expressionsInterfaces('layer');\n      var EffectsExpressionInterface = expressionsInterfaces('effects');\n      var ShapeExpressionInterface = expressionsInterfaces('shape');\n      var TextExpressionInterface = expressionsInterfaces('text');\n      var CompExpressionInterface = expressionsInterfaces('comp');\n      this.layerInterface = LayerExpressionInterface(this);\n\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function setBlendMode() {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style['mix-blend-mode'] = blendModeValue;\n    },\n    initBaseData: function initBaseData(data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID(); // Stretch factor for old animations missing this property.\n\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      } // effects manager\n\n\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function getType() {\n      return this.type;\n    },\n    sourceRectAtTime: function sourceRectAtTime() {}\n  };\n\n  /**\r\n   * @file\r\n   * Handles element's layer frame update.\r\n   * Checks layer in point and out point\r\n   *\r\n   */\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes frame related properties.\r\n       *\r\n       */\n    initFrame: function initFrame() {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false; // list of animated properties\n\n      this.dynamicProperties = []; // If layer has been modified in current tick this will be true\n\n      this._mdf = false;\n    },\n\n    /**\r\n       * @function\r\n       * Calculates all dynamic values\r\n       *\r\n       * @param {number} num\r\n       * current frame number in Layer's time\r\n       * @param {boolean} isVisible\r\n       * if layers is currently in range\r\n       *\r\n       */\n    prepareProperties: function prepareProperties(num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.footageData = globalData.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data, globalData, comp);\n  }\n\n  FootageElement.prototype.prepareFrame = function () {};\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  FootageElement.prototype.renderFrame = function () {};\n\n  FootageElement.prototype.destroy = function () {};\n\n  FootageElement.prototype.initExpressions = function () {\n    var expressionsInterfaces = getExpressionInterfaces();\n\n    if (!expressionsInterfaces) {\n      return;\n    }\n\n    var FootageInterface = expressionsInterfaces('footage');\n    this.layerInterface = FootageInterface(this);\n  };\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initBaseData(data, globalData, comp);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n\n  AudioElement.prototype.show = function () {// this.audio.play()\n  };\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  AudioElement.prototype.destroy = function () {};\n\n  AudioElement.prototype.sourceRectAtTime = function () {};\n\n  AudioElement.prototype.initExpressions = function () {};\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 3:\n        return this.createNull(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 6:\n        return this.createAudio(layer);\n\n      case 13:\n        return this.createCamera(layer);\n\n      case 15:\n        return this.createFootage(layer);\n\n      default:\n        return this.createNull(layer);\n    }\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this);\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  BaseRenderer.prototype.getElementById = function (ind) {\n    var i;\n    var len = this.elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i].data.ind === ind) {\n        return this.elements[i];\n      }\n    }\n\n    return null;\n  };\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n\n    if (path.length === 0) {\n      return element;\n    }\n\n    return element.getElementByPath(path);\n  };\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.slotManager = slotFactory(animData);\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n\n  var effectTypes = {\n    TRANSFORM_EFFECT: 'transformEFfect'\n  };\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function initTransform() {\n      var mat = new Matrix();\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _localMatMdf: false,\n        _opMdf: false,\n        mat: mat,\n        localMat: mat,\n        localOpacity: 1\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      } // TODO: check TYPE 11: Guided elements\n\n\n      if (this.data.ty !== 11) {// this.createElements();\n      }\n    },\n    renderTransform: function renderTransform() {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length; // Checking if any of the transformation matrices in the hierarchy chain has changed.\n\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n\n          for (i = 0; i < len; i += 1) {\n            finalMat.multiply(this.hierarchy[i].finalTransform.mProp.v);\n          }\n        }\n      }\n\n      if (this.finalTransform._matMdf) {\n        this.finalTransform._localMatMdf = this.finalTransform._matMdf;\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.finalTransform.localOpacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderLocalTransform: function renderLocalTransform() {\n      if (this.localTransforms) {\n        var i = 0;\n        var len = this.localTransforms.length;\n        this.finalTransform._localMatMdf = this.finalTransform._matMdf;\n\n        if (!this.finalTransform._localMatMdf || !this.finalTransform._opMdf) {\n          while (i < len) {\n            if (this.localTransforms[i]._mdf) {\n              this.finalTransform._localMatMdf = true;\n            }\n\n            if (this.localTransforms[i]._opMdf && !this.finalTransform._opMdf) {\n              this.finalTransform.localOpacity = this.finalTransform.mProp.o.v;\n              this.finalTransform._opMdf = true;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._localMatMdf) {\n          var localMat = this.finalTransform.localMat;\n          this.localTransforms[0].matrix.clone(localMat);\n\n          for (i = 1; i < len; i += 1) {\n            var lmat = this.localTransforms[i].matrix;\n            localMat.multiply(lmat);\n          }\n\n          localMat.multiply(this.finalTransform.mat);\n        }\n\n        if (this.finalTransform._opMdf) {\n          var localOp = this.finalTransform.localOpacity;\n\n          for (i = 0; i < len; i += 1) {\n            localOp *= this.localTransforms[i].opacity * 0.01;\n          }\n\n          this.finalTransform.localOpacity = localOp;\n        }\n      }\n    },\n    searchEffectTransforms: function searchEffectTransforms() {\n      if (this.renderableEffectsManager) {\n        var transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);\n\n        if (transformEffects.length) {\n          this.localTransforms = [];\n          this.finalTransform.localMat = new Matrix();\n          var i = 0;\n          var len = transformEffects.length;\n\n          for (i = 0; i < len; i += 1) {\n            this.localTransforms.push(transformEffects[i]);\n          }\n        }\n      }\n    },\n    globalToLocal: function globalToLocal(pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n\n      var i;\n      var len = transforms.length;\n      var ptNew;\n\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = '';\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = 'clipPath';\n    var maskRef = 'clip-path';\n\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w || 0);\n        rect.setAttribute('height', this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = createNS('path');\n\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: ''\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        path.setAttribute('clip-rule', 'nonzero');\n        var filterID;\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask';\n          maskRef = 'mask';\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS('filter');\n          expansor.setAttribute('id', filterID);\n          feMorph = createNS('feMorphology');\n          feMorph.setAttribute('operator', 'erode');\n          feMorph.setAttribute('in', 'SourceGraphic');\n          feMorph.setAttribute('radius', '0');\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\n        } else {\n          feMorph = null;\n          x = null;\n        } // TODO move this to a factory or to a constructor\n\n\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0\n        };\n\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length;\n          var g = createNS('g');\n\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n\n          var mask = createNS('mask');\n          mask.setAttribute('mask-type', 'alpha');\n          mask.setAttribute('id', layerId + '_' + count);\n          mask.appendChild(path);\n          defs.appendChild(mask);\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')');\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        } // TODO move this to a factory or to a constructor\n\n\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId);\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')');\n      defs.appendChild(this.maskElement);\n    }\n\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\n    } // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    } // pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = '';\n\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n\n        viewData.elem.setAttribute('d', pathShapeValue);\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter');\n      fil.setAttribute('id', filId);\n\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox');\n        fil.setAttribute('x', '0%');\n        fil.setAttribute('y', '0%');\n        fil.setAttribute('width', '100%');\n        fil.setAttribute('height', '100%');\n      }\n\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true,\n      svgLumaHidden: true,\n      offscreenCanvas: typeof OffscreenCanvas !== 'undefined'\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    if (/firefox/i.test(navigator.userAgent)) {\n      ob.svgLumaHidden = false;\n    }\n\n    return ob;\n  }();\n\n  var registeredEffects$1 = {};\n  var idPrefix = 'filter_result_';\n\n  function SVGEffects(elem) {\n    var i;\n    var source = 'SourceGraphic';\n    var len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem.data.ef[i].ty;\n\n      if (registeredEffects$1[type]) {\n        var Effect = registeredEffects$1[type].effect;\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source);\n        source = idPrefix + count;\n\n        if (registeredEffects$1[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  SVGEffects.prototype.getEffects = function (type) {\n    var i;\n    var len = this.filters.length;\n    var effects = [];\n\n    for (i = 0; i < len; i += 1) {\n      if (this.filters[i].type === type) {\n        effects.push(this.filters[i]);\n      }\n    }\n\n    return effects;\n  };\n\n  function registerEffect$1(id, effect, countsAsEffect) {\n    registeredEffects$1[id] = {\n      effect: effect,\n      countsAsEffect: countsAsEffect\n    };\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function initRendererElement() {\n      this.layerElement = createNS('g');\n    },\n    createContainerElements: function createContainerElements() {\n      this.matteElement = createNS('g');\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null; // If this layer acts as a mask for the following layer\n\n      if (this.data.td) {\n        this.matteMasks = {};\n        var gg = createNS('g');\n        gg.setAttribute('id', this.layerId);\n        gg.appendChild(this.layerElement);\n        layerElementParent = gg;\n        this.globalData.defs.appendChild(gg);\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      } // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n\n\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath');\n        var pt = createNS('path');\n        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n        var clipId = createElementID();\n        cp.setAttribute('id', clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g');\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')');\n        }\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._localMatMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.localMat.to2dCSS());\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.localOpacity);\n      }\n    },\n    destroyBaseElement: function destroyBaseElement() {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function getBaseElement() {\n      if (this.data.hd) {\n        return null;\n      }\n\n      return this.baseElement;\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n      this.searchEffectTransforms();\n    },\n    getMatte: function getMatte(matteType) {\n      // This should not be a common case. But for backward compatibility, we'll create the matte object.\n      // It solves animations that have two consecutive layers marked as matte masks.\n      // Which is an undefined behavior in AE.\n      if (!this.matteMasks) {\n        this.matteMasks = {};\n      }\n\n      if (!this.matteMasks[matteType]) {\n        var id = this.layerId + '_' + matteType;\n        var filId;\n        var fil;\n        var useElement;\n        var gg;\n\n        if (matteType === 1 || matteType === 3) {\n          var masker = createNS('mask');\n          masker.setAttribute('id', id);\n          masker.setAttribute('mask-type', matteType === 3 ? 'luminance' : 'alpha');\n          useElement = createNS('use');\n          useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', '#' + this.layerId);\n          masker.appendChild(useElement);\n          this.globalData.defs.appendChild(masker);\n\n          if (!featureSupport.maskType && matteType === 1) {\n            masker.setAttribute('mask-type', 'luminance');\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            gg.appendChild(useElement);\n            masker.appendChild(gg);\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          }\n        } else if (matteType === 2) {\n          var maskGroup = createNS('mask');\n          maskGroup.setAttribute('id', id);\n          maskGroup.setAttribute('mask-type', 'alpha');\n          var maskGrouper = createNS('g');\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId); /// /\n\n          var feCTr = createNS('feComponentTransfer');\n          feCTr.setAttribute('in', 'SourceGraphic');\n          fil.appendChild(feCTr);\n          var feFunc = createNS('feFuncA');\n          feFunc.setAttribute('type', 'table');\n          feFunc.setAttribute('tableValues', '1.0 0.0');\n          feCTr.appendChild(feFunc); /// /\n\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS('rect');\n          alphaRect.setAttribute('width', this.comp.data.w);\n          alphaRect.setAttribute('height', this.comp.data.h);\n          alphaRect.setAttribute('x', '0');\n          alphaRect.setAttribute('y', '0');\n          alphaRect.setAttribute('fill', '#ffffff');\n          alphaRect.setAttribute('opacity', '0');\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')');\n          maskGrouper.appendChild(alphaRect);\n          useElement = createNS('use');\n          useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', '#' + this.layerId);\n          maskGrouper.appendChild(useElement);\n\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance');\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            maskGrouper.appendChild(gg);\n          }\n\n          this.globalData.defs.appendChild(maskGroup);\n        }\n\n        this.matteMasks[matteType] = id;\n      }\n\n      return this.matteMasks[matteType];\n    },\n    setMatte: function setMatte(id) {\n      if (!this.matteElement) {\n        return;\n      }\n\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n    }\n  };\n\n  /**\r\n   * @file\r\n   * Handles AE's layer parenting property.\r\n   *\r\n   */\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\r\n       * @function\r\n       * Initializes hierarchy properties\r\n       *\r\n       */\n    initHierarchy: function initHierarchy() {\n      // element's parent list\n      this.hierarchy = []; // if element is parent of another layer _isParent will be true\n\n      this._isParent = false;\n      this.checkParenting();\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer's hierarchy.\r\n       * @param {array} hierarch\r\n       * layer's parent list\r\n       *\r\n       */\n    setHierarchy: function setHierarchy(hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n\n    /**\r\n       * @function\r\n       * Sets layer as parent.\r\n       *\r\n       */\n    setAsParent: function setAsParent() {\n      this._isParent = true;\n    },\n\n    /**\r\n       * @function\r\n       * Searches layer's parenting chain\r\n       *\r\n       */\n    checkParenting: function checkParenting() {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n\n  function RenderableDOMElement() {}\n\n  (function () {\n    var _prototype = {\n      initElement: function initElement(data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function hide() {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = 'none';\n          this.hidden = true;\n        }\n      },\n      show: function show() {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = 'block';\n          }\n\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function renderFrame() {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderLocalTransform();\n        this.renderElement();\n        this.renderInnerContent();\n\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function renderInnerContent() {},\n      prepareFrame: function prepareFrame(num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function destroy() {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n\n    if (this.assetData && this.assetData.sid) {\n      this.assetData = globalData.slotManager.getProp(this.assetData);\n    }\n\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS('image');\n    this.innerElem.setAttribute('width', this.assetData.w + 'px');\n    this.innerElem.setAttribute('height', this.assetData.h + 'px');\n    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function addShapeToModifiers(data) {\n      var i;\n      var len = this.shapeModifiers.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    renderModifiers: function renderModifiers() {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n\n      var i;\n      var len = this.shapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame); // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function searchProcessedElement(elem) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n\n        i += 1;\n      }\n\n      return 0;\n    },\n    addProcessedElement: function addProcessedElement(elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n\n      while (i) {\n        i -= 1;\n\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function prepareFrame(num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n\n  var lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square'\n  };\n  var lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel'\n  };\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = '';\n    this.sh = shape;\n    this.lvl = level; // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n\n    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated\n\n    var i = 0;\n    var len = transformers.length;\n\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = '';\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS('path');\n    this.msElem = null;\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = '';\n    this._mdf = false;\n  };\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = '';\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray('float32', 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data.length || 0;\n    var prop;\n\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n\n    if (!this.k) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = this.k;\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n\n      if (this.renderer === 'svg') {\n        this.dashStr = '';\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray('uint8c', data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray('float32', cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n\n      if (diff > 0.01) {\n        return false;\n      }\n\n      i += 1;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val;\n\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n\n      if (this.o.length) {\n        len = this.prop.v.length;\n\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n\n      this._mdf = !forceRender;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')');\n    this.gf = gfill;\n    this.cst = stops;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask = createNS('mask');\n      var maskElement = createNS('path');\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute('id', maskId);\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)');\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')');\n\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml);\n        }\n      }\n\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS('g');\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n\n  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return '';\n    }\n\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n\n    for (i = 1; i < length; i += 1) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n\n    if (closed && length) {\n      shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  var SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n\n    var _matrixHelper = new Matrix();\n\n    var ob = {\n      createRenderFunction: createRenderFunction\n    };\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill;\n\n        case 'gf':\n          return renderGradient;\n\n        case 'gs':\n          return renderGradientStroke;\n\n        case 'st':\n          return renderStroke;\n\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath;\n\n        case 'tr':\n          return renderContentTransform;\n\n        case 'no':\n          return renderNoop;\n\n        default:\n          return null;\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\n      }\n\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var iterations;\n      var k;\n\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n\n            while (iterations > 0) {\n              mat.multiply(itemData.transformers[k].mProps.v);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (redraw) {\n          pathStringTransformed = '';\n\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n\n      var stops;\n      var i;\n      var len;\n      var stop;\n\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute('offset', cValues[i * 4] + '%');\n          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n        }\n      }\n\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%');\n          }\n\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n        }\n      }\n\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0]);\n          gfill.setAttribute('y2', pt2[1]);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0]);\n            itemData.of.setAttribute('y2', pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute('r', rad);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad);\n          }\n        }\n\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute('fx', x);\n          gfill.setAttribute('fy', y);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x);\n            itemData.of.setAttribute('fy', y);\n          }\n        } // gfill.setAttribute('fy','200');\n\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\n      }\n\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n      }\n\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n        }\n      }\n    }\n\n    return ob;\n  }();\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = []; // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  /*\r\n  This method searches for multiple shapes that affect a single element and one of them is animated\r\n  */\n\n\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')');\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb);\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\n      pathElement.setAttribute('fill-opacity', '0');\n\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml);\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n\n      i += 1;\n    }\n\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data\n    });\n  };\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb' || arr[i].ty === 'zz' || arr[i].ty === 'op') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n\n    this.renderShape();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); // Adding M0 0 fixes same mask bug on all browsers\n\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\n        }\n\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n\n    if (data.d && data.d.sid) {\n      data.d = elem.globalData.slotManager.getProp(data.d);\n    }\n\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s];\n      }\n    }\n\n    return obj;\n  };\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n\n    return this.kf;\n  };\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n\n    return this.data.d.k[this.keysIndex].s;\n  };\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n    var shouldCombineNext = false;\n    var currentChars = '';\n\n    while (i < len) {\n      shouldCombine = shouldCombineNext;\n      shouldCombineNext = false;\n      charCode = text.charCodeAt(i);\n      currentChars = text.charAt(i);\n\n      if (FontManager.isCombinedCharacter(charCode)) {\n        shouldCombine = true; // It's a potential surrogate pair (this is the High surrogate)\n      } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        if (FontManager.isRegionalFlag(text, i)) {\n          currentChars = text.substr(i, 14);\n        } else {\n          secondCharCode = text.charCodeAt(i + 1); // It's a surrogate pair (this is the Low surrogate)\n\n          if (secondCharCode >= 0xDC00 && secondCharCode <= 0xDFFF) {\n            if (FontManager.isModifier(charCode, secondCharCode)) {\n              currentChars = text.substr(i, 2);\n              shouldCombine = true;\n            } else if (FontManager.isFlagEmoji(text.substr(i, 4))) {\n              currentChars = text.substr(i, 4);\n            } else {\n              currentChars = text.substr(i, 2);\n            }\n          }\n        }\n      } else if (charCode > 0xDBFF) {\n        secondCharCode = text.charCodeAt(i + 1);\n\n        if (FontManager.isVariationSelector(charCode)) {\n          shouldCombine = true;\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        shouldCombine = true;\n        shouldCombineNext = true;\n      }\n\n      if (shouldCombine) {\n        charactersArray[charactersArray.length - 1] += currentChars;\n        shouldCombine = false;\n      } else {\n        charactersArray.push(currentChars);\n      }\n\n      i += currentChars.length;\n    }\n\n    return charactersArray;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index = 0;\n    var val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var charCode;\n\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r'); // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = currentChar;\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength;\n\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== ' ' || based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.copyData({}, this.data.d.k[index].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index].s = dData;\n    this.recalculate(index);\n    this.setCurrentData(dData);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  var TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem, data.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function getMult(ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0;\n        } else {\n          y1 = -this.ne.v / 100.0;\n        }\n\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0;\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0;\n        }\n\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /* ind += 0.5;\r\n                      mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2; // eslint-disable-line\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        } // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n\n\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n\n          if (smoothness === 0) {\n            smoothness = 0.00000001;\n          }\n\n          var threshold = 0.5 - smoothness * 0.5;\n\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n\n        return mult * this.a.v;\n      },\n      getValue: function getValue(newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr);\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp\n    };\n  }();\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask;\n\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n\n\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = '';\n    var letterP = this.defaultPropsArray;\n    var letterO; //\n\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n\n          isNewLine = false;\n        }\n      }\n\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    } //\n\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterM = '';\n        letterFc = '';\n        letterSw = '';\n        letterO = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n\n              default:\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an * 0.005;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true; // Force alignment only works with a single line for now\n\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0);\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 0.005;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 0.001 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n\n            default:\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n\n      default:\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {};\n\n  ITextElement.prototype.validateText = function () {\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n\n  var emptyShapeData = {\n    shapes: []\n  };\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text');\n    }\n  };\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = '';\n\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = '';\n      } else {\n        currentTextContent += textArray[i];\n      }\n\n      i += 1;\n    }\n\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0];\n\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale;\n          shapeItem.s.k[1] = scale;\n        }\n      }\n    }\n\n    return data;\n  };\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    this.layerElement.setAttribute('aria-label', documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = '';\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = 'start';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n\n        default:\n          justify = 'start';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i].span = tSpan;\n\n            if (usesGlyphs) {\n              var childSpan = createNS('g');\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0; // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n          xPos += trackingOffset;\n        }\n\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement; // t === 1 means the character has been replaced with an animated shaped\n\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data = emptyShapeData;\n\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n\n            glyphElement = new SVGShapeElement(data, this.globalData, this);\n          }\n\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement); // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute('transform', 'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')');\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');\n          }\n\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        } //\n\n      }\n\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    this.validateText();\n\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m);\n            }\n\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o);\n            }\n\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw);\n            }\n\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc);\n            }\n\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([IImageElement], ISolidElement);\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect'); /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  NullElement.prototype.renderFrame = function () {};\n\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  NullElement.prototype.destroy = function () {};\n\n  NullElement.prototype.sourceRectAtTime = function () {};\n\n  NullElement.prototype.hide = function () {};\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase);\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    this.svgElement.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w);\n      this.svgElement.setAttribute('height', animData.h);\n      this.svgElement.style.width = '100%';\n      this.svgElement.style.height = '100%';\n      this.svgElement.style.transform = 'translate3d(0,0,0)';\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width);\n    }\n\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height);\n    }\n\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id);\n    }\n\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\n    }\n\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.svgElement); // Mask animation\n\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS('clipPath');\n    var rect = createNS('rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = createElementID();\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')');\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i] && this.elements[i].destroy) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n\n  SVGRendererBase.prototype.findIndexByInd = function (ind) {\n    var i = 0;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ind === ind) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      var elementIndex = 'tp' in this.layers[pos] ? this.findIndexByInd(this.layers[pos].tp) : pos - 1;\n\n      if (elementIndex === -1) {\n        return;\n      }\n\n      if (!this.elements[elementIndex] || this.elements[elementIndex] === true) {\n        this.buildItem(elementIndex);\n        this.addPendingElement(element);\n      } else {\n        var matteElement = elements[elementIndex];\n        var matteMask = matteElement.getMatte(this.layers[pos].tt);\n        element.setMatte(matteMask);\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            var elementIndex = 'tp' in element.data ? this.findIndexByInd(element.data.tp) : i - 1;\n            var matteElement = this.elements[elementIndex];\n            var matteMask = matteElement.getMatte(this.layers[i].tt);\n            element.setMatte(matteMask);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } // console.log('-------');\n    // console.log('FRAME ',num);\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n\n    this.hide();\n  };\n  /* ICompElement.prototype.hide = function(){\r\n      if(!this.hidden){\r\n          this.hideElement();\r\n          var i,len = this.elements.length;\r\n          for( i = 0; i < len; i+=1 ){\r\n              if(this.elements[i]){\r\n                  this.elements[i].hide();\r\n              }\r\n          }\r\n      }\r\n  }; */\n\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i;\n    var len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    } // This iteration needs to be backwards because of how expressions connect between each other\n\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS('svg');\n    var ariaLabel = '';\n\n    if (config && config.title) {\n      var titleElement = createNS('title');\n      var titleId = createElementID();\n      titleElement.setAttribute('id', titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n\n    if (config && config.description) {\n      var descElement = createNS('desc');\n      var descId = createElementID();\n      descElement.setAttribute('id', descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += ' ' + descId;\n    }\n\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel);\n    }\n\n    var defs = createNS('defs');\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS('g');\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || '',\n      id: config && config.id || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '100%',\n        height: config && config.filterSize && config.filterSize.height || '100%',\n        x: config && config.filterSize && config.filterSize.x || '0%',\n        y: config && config.filterSize && config.filterSize.y || '0%'\n      },\n      width: config && config.width,\n      height: config && config.height,\n      runExpressions: !config || config.runExpressions === undefined || config.runExpressions\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = 'svg';\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer);\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function addTransformSequence(transforms) {\n      var i;\n      var len = transforms.length;\n      var key = '_';\n\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_';\n      }\n\n      var sequence = this.sequences[key];\n\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n\n      return sequence;\n    },\n    processSequence: function processSequence(sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n\n        i += 1;\n      }\n\n      if (_mdf) {\n        sequence.finalTransform.reset();\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          sequence.finalTransform.multiply(sequence.transforms[i].transform.mProps.v);\n        }\n      }\n\n      sequence._mdf = _mdf;\n    },\n    processSequences: function processSequences(isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function getNewKey() {\n      this.transform_key_count += 1;\n      return '_' + this.transform_key_count;\n    }\n  };\n\n  var lumaLoader = function lumaLoader() {\n    var id = '__lottie_element_luma_buffer';\n    var lumaBuffer = null;\n    var lumaBufferCtx = null;\n    var svg = null; // This alternate solution has a slight delay before the filter is applied, resulting in a flicker on the first frame.\n    // Keeping this here for reference, and in the future, if offscreen canvas supports url filters, this can be used.\n    // For now, neither of them work for offscreen canvas, so canvas workers can't support the luma track matte mask.\n    // Naming it solution 2 to mark the extra comment lines.\n\n    /*\r\n    var svgString = [\r\n      '<svg xmlns=\"http://www.w3.org/2000/svg\">',\r\n      '<filter id=\"' + id + '\">',\r\n      '<feColorMatrix type=\"matrix\" color-interpolation-filters=\"sRGB\" values=\"',\r\n      '0.3, 0.3, 0.3, 0, 0, ',\r\n      '0.3, 0.3, 0.3, 0, 0, ',\r\n      '0.3, 0.3, 0.3, 0, 0, ',\r\n      '0.3, 0.3, 0.3, 0, 0',\r\n      '\"/>',\r\n      '</filter>',\r\n      '</svg>',\r\n    ].join('');\r\n    var blob = new Blob([svgString], { type: 'image/svg+xml' });\r\n    var url = URL.createObjectURL(blob);\r\n    */\n\n    function createLumaSvgFilter() {\n      var _svg = createNS('svg');\n\n      var fil = createNS('filter');\n      var matrix = createNS('feColorMatrix');\n      fil.setAttribute('id', id);\n      matrix.setAttribute('type', 'matrix');\n      matrix.setAttribute('color-interpolation-filters', 'sRGB');\n      matrix.setAttribute('values', '0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0');\n      fil.appendChild(matrix);\n\n      _svg.appendChild(fil);\n\n      _svg.setAttribute('id', id + '_svg');\n\n      if (featureSupport.svgLumaHidden) {\n        _svg.style.display = 'none';\n      }\n\n      return _svg;\n    }\n\n    function loadLuma() {\n      if (!lumaBuffer) {\n        svg = createLumaSvgFilter();\n        document.body.appendChild(svg);\n        lumaBuffer = createTag('canvas');\n        lumaBufferCtx = lumaBuffer.getContext('2d'); // lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2\n\n        lumaBufferCtx.filter = 'url(#' + id + ')';\n        lumaBufferCtx.fillStyle = 'rgba(0,0,0,0)';\n        lumaBufferCtx.fillRect(0, 0, 1, 1);\n      }\n    }\n\n    function getLuma(canvas) {\n      if (!lumaBuffer) {\n        loadLuma();\n      }\n\n      lumaBuffer.width = canvas.width;\n      lumaBuffer.height = canvas.height; // lumaBufferCtx.filter = `url('${url}#__lottie_element_luma_buffer')`; // part of solution 2\n\n      lumaBufferCtx.filter = 'url(#' + id + ')';\n      return lumaBuffer;\n    }\n\n    return {\n      load: loadLuma,\n      get: getLuma\n    };\n  };\n\n  function createCanvas(width, height) {\n    if (featureSupport.offscreenCanvas) {\n      return new OffscreenCanvas(width, height);\n    }\n\n    var canvas = createTag('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n\n  var assetLoader = function () {\n    return {\n      loadLumaCanvas: lumaLoader.load,\n      getLumaCanvas: lumaLoader.get,\n      createCanvas: createCanvas\n    };\n  }();\n\n  var registeredEffects = {};\n\n  function CVEffects(elem) {\n    var i;\n    var len = elem.data.ef ? elem.data.ef.length : 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem.data.ef[i].ty;\n\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(elem.effectsManager.effectElements[i], elem);\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  CVEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  CVEffects.prototype.getEffects = function (type) {\n    var i;\n    var len = this.filters.length;\n    var effects = [];\n\n    for (i = 0; i < len; i += 1) {\n      if (this.filters[i].type === type) {\n        effects.push(this.filters[i]);\n      }\n    }\n\n    return effects;\n  };\n\n  function registerEffect(id, effect) {\n    registeredEffects[id] = {\n      effect: effect\n    };\n  }\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true;\n      }\n\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n\n    this.hasMasks = hasMasks;\n\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data;\n    ctx.beginPath();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data._length;\n\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVBaseElement() {}\n\n  var operationsMap = {\n    1: 'source-in',\n    2: 'source-out',\n    3: 'source-in',\n    4: 'source-out'\n  };\n  CVBaseElement.prototype = {\n    createElements: function createElements() {},\n    initRendererElement: function initRendererElement() {},\n    createContainerElements: function createContainerElements() {\n      // If the layer is masked we will use two buffers to store each different states of the drawing\n      // This solution is not ideal for several reason. But unfortunately, because of the recursive\n      // nature of the render tree, it's the only simple way to make sure one inner mask doesn't override an outer mask.\n      // TODO: try to reduce the size of these buffers to the size of the composition contaning the layer\n      // It might be challenging because the layer most likely is transformed in some way\n      if (this.data.tt >= 1) {\n        this.buffers = [];\n        var canvasContext = this.globalData.canvasContext;\n        var bufferCanvas = assetLoader.createCanvas(canvasContext.canvas.width, canvasContext.canvas.height);\n        this.buffers.push(bufferCanvas);\n        var bufferCanvas2 = assetLoader.createCanvas(canvasContext.canvas.width, canvasContext.canvas.height);\n        this.buffers.push(bufferCanvas2);\n\n        if (this.data.tt >= 3 && !document._isProxy) {\n          assetLoader.loadLumaCanvas();\n        }\n      }\n\n      this.canvasContext = this.globalData.canvasContext;\n      this.transformCanvas = this.globalData.transformCanvas;\n      this.renderableEffectsManager = new CVEffects(this);\n      this.searchEffectTransforms();\n    },\n    createContent: function createContent() {},\n    setBlendMode: function setBlendMode() {\n      var globalData = this.globalData;\n\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new CVMaskElement(this.data, this);\n      this.transformEffects = this.renderableEffectsManager.getEffects(effectTypes.TRANSFORM_EFFECT);\n    },\n    hideElement: function hideElement() {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function showElement() {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    clearCanvas: function clearCanvas(canvasContext) {\n      canvasContext.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);\n    },\n    prepareLayer: function prepareLayer() {\n      if (this.data.tt >= 1) {\n        var buffer = this.buffers[0];\n        var bufferCtx = buffer.getContext('2d');\n        this.clearCanvas(bufferCtx); // on the first buffer we store the current state of the global drawing\n\n        bufferCtx.drawImage(this.canvasContext.canvas, 0, 0); // The next four lines are to clear the canvas\n        // TODO: Check if there is a way to clear the canvas without resetting the transform\n\n        this.currentTransform = this.canvasContext.getTransform();\n        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);\n        this.clearCanvas(this.canvasContext);\n        this.canvasContext.setTransform(this.currentTransform);\n      }\n    },\n    exitLayer: function exitLayer() {\n      if (this.data.tt >= 1) {\n        var buffer = this.buffers[1]; // On the second buffer we store the current state of the global drawing\n        // that only contains the content of this layer\n        // (if it is a composition, it also includes the nested layers)\n\n        var bufferCtx = buffer.getContext('2d');\n        this.clearCanvas(bufferCtx);\n        bufferCtx.drawImage(this.canvasContext.canvas, 0, 0); // We clear the canvas again\n\n        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);\n        this.clearCanvas(this.canvasContext);\n        this.canvasContext.setTransform(this.currentTransform); // We draw the mask\n\n        var mask = this.comp.getElementById('tp' in this.data ? this.data.tp : this.data.ind - 1);\n        mask.renderFrame(true); // We draw the second buffer (that contains the content of this layer)\n\n        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0); // If the mask is a Luma matte, we need to do two extra painting operations\n        // the _isProxy check is to avoid drawing a fake canvas in workers that will throw an error\n\n        if (this.data.tt >= 3 && !document._isProxy) {\n          // We copy the painted mask to a buffer that has a color matrix filter applied to it\n          // that applies the rgb values to the alpha channel\n          var lumaBuffer = assetLoader.getLumaCanvas(this.canvasContext.canvas);\n          var lumaBufferCtx = lumaBuffer.getContext('2d');\n          lumaBufferCtx.drawImage(this.canvasContext.canvas, 0, 0);\n          this.clearCanvas(this.canvasContext); // we repaint the context with the mask applied to it\n\n          this.canvasContext.drawImage(lumaBuffer, 0, 0);\n        }\n\n        this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt];\n        this.canvasContext.drawImage(buffer, 0, 0); // We finally draw the first buffer (that contains the content of the global drawing)\n        // We use destination-over to draw the global drawing below the current layer\n\n        this.canvasContext.globalCompositeOperation = 'destination-over';\n        this.canvasContext.drawImage(this.buffers[0], 0, 0);\n        this.canvasContext.setTransform(this.currentTransform); // We reset the globalCompositeOperation to source-over, the standard type of operation\n\n        this.canvasContext.globalCompositeOperation = 'source-over';\n      }\n    },\n    renderFrame: function renderFrame(forceRender) {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n\n      if (this.data.td === 1 && !forceRender) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderLocalTransform();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.prepareLayer();\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.localMat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.localOpacity);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n      this.exitLayer();\n\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bmFloor(elementData.c.v[0]) + ',' + bmFloor(elementData.c.v[1]) + ',' + bmFloor(elementData.c.v[2]) + ')';\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2];\n      styleElem.lj = lineJoinEnum[data.lj || 2];\n\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem[\"do\"] = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb' || arr[i].ty === 'zz' || arr[i].ty === 'op') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type; // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n\n      if (!((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n\n        if (type === 'st' || type === 'gs') {\n          renderer.ctxStrokeStyle(type === 'st' ? currentStyle.co : currentStyle.grd); // ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\n\n          renderer.ctxLineWidth(currentStyle.wi); // ctx.lineWidth = currentStyle.wi;\n\n          renderer.ctxLineCap(currentStyle.lc); // ctx.lineCap = currentStyle.lc;\n\n          renderer.ctxLineJoin(currentStyle.lj); // ctx.lineJoin = currentStyle.lj;\n\n          renderer.ctxMiterLimit(currentStyle.ml || 0); // ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          renderer.ctxFillStyle(type === 'fl' ? currentStyle.co : currentStyle.grd); // ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\n        }\n\n        renderer.ctxOpacity(currentStyle.coOp);\n\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath();\n        }\n\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle[\"do\"];\n            }\n          }\n\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n\n          if (type === 'st' || type === 'gs') {\n            // ctx.stroke();\n            renderer.ctxStroke();\n\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n\n        if (type !== 'st' && type !== 'gs') {\n          // ctx.fill(currentStyle.r);\n          this.globalData.renderer.ctxFill(currentStyle.r);\n        }\n\n        renderer.restore();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty === 'tm') {//\n      }\n    }\n\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: 'z'\n            });\n          }\n        }\n      }\n\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n\n        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\n      }\n\n      styleElem.grd = grd;\n    }\n\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem[\"do\"] = d.dashoffset[0];\n    }\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length; // this.tHelper.font = this.values.fValue;\n\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    this.validateText();\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    this.globalData.renderer.ctxLineCap('butt'); // ctx.lineCap = 'butt';\n\n    this.globalData.renderer.ctxLineJoin('miter'); // ctx.lineJoin = 'miter';\n\n    this.globalData.renderer.ctxMiterLimit(4); // ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n    var renderer = this.globalData.renderer;\n\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n\n        if (renderedLetter) {\n          renderer.save();\n          renderer.ctxTransform(renderedLetter.p);\n          renderer.ctxOpacity(renderedLetter.o);\n        }\n\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              renderer.ctxFillStyle(renderedLetter.fc);\n              lastFill = renderedLetter.fc; // ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            renderer.ctxFillStyle(this.values.fill); // ctx.fillStyle = this.values.fill;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          renderer.ctxFill(); // this.globalData.canvasContext.fill();\n          /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              renderer.ctxLineWidth(renderedLetter.sw); // ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            renderer.ctxLineWidth(this.values.sWidth); // ctx.lineWidth = this.values.sWidth;\n          }\n\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              renderer.ctxStrokeStyle(renderedLetter.sc); // ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            renderer.ctxStrokeStyle(this.values.stroke); // ctx.strokeStyle = this.values.stroke;\n          }\n\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n\n          this.globalData.canvasContext.closePath();\n          renderer.ctxStroke(); // this.globalData.canvasContext.stroke();\n          /// ctx.strokeText(letters[i].val,0,0);\n        }\n\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getAsset(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas');\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext('2d');\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n\n      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    // var ctx = this.canvasContext;\n    this.globalData.renderer.ctxFillStyle(this.data.sc); // ctx.fillStyle = this.data.sc;\n\n    this.globalData.renderer.ctxFillRect(0, 0, this.data.sw, this.data.sh); // ctx.fillRect(0, 0, this.data.sw, this.data.sh);\n    //\n  };\n\n  function CanvasRendererBase() {}\n\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n  };\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n  };\n\n  CanvasRendererBase.prototype.ctxFillStyle = function (value) {\n    this.canvasContext.fillStyle = value;\n  };\n\n  CanvasRendererBase.prototype.ctxStrokeStyle = function (value) {\n    this.canvasContext.strokeStyle = value;\n  };\n\n  CanvasRendererBase.prototype.ctxLineWidth = function (value) {\n    this.canvasContext.lineWidth = value;\n  };\n\n  CanvasRendererBase.prototype.ctxLineCap = function (value) {\n    this.canvasContext.lineCap = value;\n  };\n\n  CanvasRendererBase.prototype.ctxLineJoin = function (value) {\n    this.canvasContext.lineJoin = value;\n  };\n\n  CanvasRendererBase.prototype.ctxMiterLimit = function (value) {\n    this.canvasContext.miterLimit = value;\n  };\n\n  CanvasRendererBase.prototype.ctxFill = function (rule) {\n    this.canvasContext.fill(rule);\n  };\n\n  CanvasRendererBase.prototype.ctxFillRect = function (x, y, w, h) {\n    this.canvasContext.fillRect(x, y, w, h);\n  };\n\n  CanvasRendererBase.prototype.ctxStroke = function () {\n    this.canvasContext.stroke();\n  };\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.reset();\n  };\n\n  CanvasRendererBase.prototype.save = function () {\n    this.canvasContext.save();\n  };\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.globalData.blendMode = 'source-over';\n    }\n\n    this.contextData.restore(actionFlag);\n  };\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas');\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = '100%';\n      containerStyle.height = '100%';\n      var origin = '0px 0px 0px';\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle['-webkit-transform'] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.contextData.setContext(this.canvasContext);\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n\n  CanvasRendererBase.prototype.updateContainerSize = function (width, height) {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n\n    if (width) {\n      elementWidth = width;\n      elementHeight = height;\n      this.canvasContext.canvas.width = elementWidth;\n      this.canvasContext.canvas.height = elementHeight;\n    } else {\n      if (this.animationItem.wrapper && this.animationItem.container) {\n        elementWidth = this.animationItem.wrapper.offsetWidth;\n        elementHeight = this.animationItem.wrapper.offsetHeight;\n      } else {\n        elementWidth = this.canvasContext.canvas.width;\n        elementHeight = this.canvasContext.canvas.height;\n      }\n\n      this.canvasContext.canvas.width = elementWidth * this.renderConfig.dpr;\n      this.canvasContext.canvas.height = elementHeight * this.renderConfig.dpr;\n    }\n\n    var elementRel;\n    var animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    /* var i, len = this.elements.length;\r\n      for(i=0;i<len;i+=1){\r\n          if(this.elements[i] && this.elements[i].data.ty === 0){\r\n              this.elements[i].resize(this.globalData.transformCanvas);\r\n          }\r\n      } */\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i] && this.elements[i].destroy) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num; // console.log('--------');\n    // console.log('NEW: ',num);\n\n    var i;\n    var len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n    /* if(this.layers[pos].ty === 0){\r\n          element.resize(this.globalData.transformCanvas);\r\n      } */\n  };\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  function CanvasContext() {\n    this.opacity = -1;\n    this.transform = createTypedArray('float32', 16);\n    this.fillStyle = '';\n    this.strokeStyle = '';\n    this.lineWidth = '';\n    this.lineCap = '';\n    this.lineJoin = '';\n    this.miterLimit = '';\n    this.id = Math.random();\n  }\n\n  function CVContextData() {\n    this.stack = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    var i;\n    var len = 15;\n\n    for (i = 0; i < len; i += 1) {\n      var canvasContext = new CanvasContext();\n      this.stack[i] = canvasContext;\n    }\n\n    this._length = len;\n    this.nativeContext = null;\n    this.transformMat = new Matrix();\n    this.currentOpacity = 1; //\n\n    this.currentFillStyle = '';\n    this.appliedFillStyle = ''; //\n\n    this.currentStrokeStyle = '';\n    this.appliedStrokeStyle = ''; //\n\n    this.currentLineWidth = '';\n    this.appliedLineWidth = ''; //\n\n    this.currentLineCap = '';\n    this.appliedLineCap = ''; //\n\n    this.currentLineJoin = '';\n    this.appliedLineJoin = ''; //\n\n    this.appliedMiterLimit = '';\n    this.currentMiterLimit = '';\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var i = 0;\n\n    for (i = this._length; i < newLength; i += 1) {\n      this.stack[i] = new CanvasContext();\n    }\n\n    this._length = newLength;\n  };\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.stack[this.cArrPos].opacity = 1;\n  };\n\n  CVContextData.prototype.restore = function (forceRestore) {\n    this.cArrPos -= 1;\n    var currentContext = this.stack[this.cArrPos];\n    var transform = currentContext.transform;\n    var i;\n    var arr = this.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = transform[i];\n    }\n\n    if (forceRestore) {\n      this.nativeContext.restore();\n      var prevStack = this.stack[this.cArrPos + 1];\n      this.appliedFillStyle = prevStack.fillStyle;\n      this.appliedStrokeStyle = prevStack.strokeStyle;\n      this.appliedLineWidth = prevStack.lineWidth;\n      this.appliedLineCap = prevStack.lineCap;\n      this.appliedLineJoin = prevStack.lineJoin;\n      this.appliedMiterLimit = prevStack.miterLimit;\n    }\n\n    this.nativeContext.setTransform(transform[0], transform[1], transform[4], transform[5], transform[12], transform[13]);\n\n    if (forceRestore || currentContext.opacity !== -1 && this.currentOpacity !== currentContext.opacity) {\n      this.nativeContext.globalAlpha = currentContext.opacity;\n      this.currentOpacity = currentContext.opacity;\n    }\n\n    this.currentFillStyle = currentContext.fillStyle;\n    this.currentStrokeStyle = currentContext.strokeStyle;\n    this.currentLineWidth = currentContext.lineWidth;\n    this.currentLineCap = currentContext.lineCap;\n    this.currentLineJoin = currentContext.lineJoin;\n    this.currentMiterLimit = currentContext.miterLimit;\n  };\n\n  CVContextData.prototype.save = function (saveOnNativeFlag) {\n    if (saveOnNativeFlag) {\n      this.nativeContext.save();\n    }\n\n    var props = this.cTr.props;\n\n    if (this._length <= this.cArrPos) {\n      this.duplicate();\n    }\n\n    var currentStack = this.stack[this.cArrPos];\n    var i;\n\n    for (i = 0; i < 16; i += 1) {\n      currentStack.transform[i] = props[i];\n    }\n\n    this.cArrPos += 1;\n    var newStack = this.stack[this.cArrPos];\n    newStack.opacity = currentStack.opacity;\n    newStack.fillStyle = currentStack.fillStyle;\n    newStack.strokeStyle = currentStack.strokeStyle;\n    newStack.lineWidth = currentStack.lineWidth;\n    newStack.lineCap = currentStack.lineCap;\n    newStack.lineJoin = currentStack.lineJoin;\n    newStack.miterLimit = currentStack.miterLimit;\n  };\n\n  CVContextData.prototype.setOpacity = function (value) {\n    this.stack[this.cArrPos].opacity = value;\n  };\n\n  CVContextData.prototype.setContext = function (value) {\n    this.nativeContext = value;\n  };\n\n  CVContextData.prototype.fillStyle = function (value) {\n    if (this.stack[this.cArrPos].fillStyle !== value) {\n      this.currentFillStyle = value;\n      this.stack[this.cArrPos].fillStyle = value;\n    }\n  };\n\n  CVContextData.prototype.strokeStyle = function (value) {\n    if (this.stack[this.cArrPos].strokeStyle !== value) {\n      this.currentStrokeStyle = value;\n      this.stack[this.cArrPos].strokeStyle = value;\n    }\n  };\n\n  CVContextData.prototype.lineWidth = function (value) {\n    if (this.stack[this.cArrPos].lineWidth !== value) {\n      this.currentLineWidth = value;\n      this.stack[this.cArrPos].lineWidth = value;\n    }\n  };\n\n  CVContextData.prototype.lineCap = function (value) {\n    if (this.stack[this.cArrPos].lineCap !== value) {\n      this.currentLineCap = value;\n      this.stack[this.cArrPos].lineCap = value;\n    }\n  };\n\n  CVContextData.prototype.lineJoin = function (value) {\n    if (this.stack[this.cArrPos].lineJoin !== value) {\n      this.currentLineJoin = value;\n      this.stack[this.cArrPos].lineJoin = value;\n    }\n  };\n\n  CVContextData.prototype.miterLimit = function (value) {\n    if (this.stack[this.cArrPos].miterLimit !== value) {\n      this.currentMiterLimit = value;\n      this.stack[this.cArrPos].miterLimit = value;\n    }\n  };\n\n  CVContextData.prototype.transform = function (props) {\n    this.transformMat.cloneFromProps(props); // Taking the last transform value from the stored stack of transforms\n\n    var currentTransform = this.cTr; // Applying the last transform value after the new transform to respect the order of transformations\n\n    this.transformMat.multiply(currentTransform); // Storing the new transformed value in the stored transform\n\n    currentTransform.cloneFromProps(this.transformMat.props);\n    var trProps = currentTransform.props; // Applying the new transform to the canvas\n\n    this.nativeContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CVContextData.prototype.opacity = function (op) {\n    var currentOpacity = this.stack[this.cArrPos].opacity;\n    currentOpacity *= op < 0 ? 0 : op;\n\n    if (this.stack[this.cArrPos].opacity !== currentOpacity) {\n      if (this.currentOpacity !== op) {\n        this.nativeContext.globalAlpha = op;\n        this.currentOpacity = op;\n      }\n\n      this.stack[this.cArrPos].opacity = currentOpacity;\n    }\n  };\n\n  CVContextData.prototype.fill = function (rule) {\n    if (this.appliedFillStyle !== this.currentFillStyle) {\n      this.appliedFillStyle = this.currentFillStyle;\n      this.nativeContext.fillStyle = this.appliedFillStyle;\n    }\n\n    this.nativeContext.fill(rule);\n  };\n\n  CVContextData.prototype.fillRect = function (x, y, w, h) {\n    if (this.appliedFillStyle !== this.currentFillStyle) {\n      this.appliedFillStyle = this.currentFillStyle;\n      this.nativeContext.fillStyle = this.appliedFillStyle;\n    }\n\n    this.nativeContext.fillRect(x, y, w, h);\n  };\n\n  CVContextData.prototype.stroke = function () {\n    if (this.appliedStrokeStyle !== this.currentStrokeStyle) {\n      this.appliedStrokeStyle = this.currentStrokeStyle;\n      this.nativeContext.strokeStyle = this.appliedStrokeStyle;\n    }\n\n    if (this.appliedLineWidth !== this.currentLineWidth) {\n      this.appliedLineWidth = this.currentLineWidth;\n      this.nativeContext.lineWidth = this.appliedLineWidth;\n    }\n\n    if (this.appliedLineCap !== this.currentLineCap) {\n      this.appliedLineCap = this.currentLineCap;\n      this.nativeContext.lineCap = this.appliedLineCap;\n    }\n\n    if (this.appliedLineJoin !== this.currentLineJoin) {\n      this.appliedLineJoin = this.currentLineJoin;\n      this.nativeContext.lineJoin = this.appliedLineJoin;\n    }\n\n    if (this.appliedMiterLimit !== this.currentMiterLimit) {\n      this.appliedMiterLimit = this.currentMiterLimit;\n      this.nativeContext.miterLimit = this.appliedMiterLimit;\n    }\n\n    this.nativeContext.stroke();\n  };\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.layers = null;\n    this.elements = null;\n  };\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      contentVisibility: config && config.contentVisibility || 'visible',\n      className: config && config.className || '',\n      id: config && config.id || '',\n      runExpressions: !config || config.runExpressions === undefined || config.runExpressions\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n\n    if (this.renderConfig.clearCanvas) {\n      this.ctxTransform = this.contextData.transform.bind(this.contextData);\n      this.ctxOpacity = this.contextData.opacity.bind(this.contextData);\n      this.ctxFillStyle = this.contextData.fillStyle.bind(this.contextData);\n      this.ctxStrokeStyle = this.contextData.strokeStyle.bind(this.contextData);\n      this.ctxLineWidth = this.contextData.lineWidth.bind(this.contextData);\n      this.ctxLineCap = this.contextData.lineCap.bind(this.contextData);\n      this.ctxLineJoin = this.contextData.lineJoin.bind(this.contextData);\n      this.ctxMiterLimit = this.contextData.miterLimit.bind(this.contextData);\n      this.ctxFill = this.contextData.fill.bind(this.contextData);\n      this.ctxFillRect = this.contextData.fillRect.bind(this.contextData);\n      this.ctxStroke = this.contextData.stroke.bind(this.contextData);\n      this.save = this.contextData.save.bind(this.contextData);\n    }\n  }\n\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  function HBaseElement() {}\n\n  HBaseElement.prototype = {\n    checkBlendMode: function checkBlendMode() {},\n    initRendererElement: function initRendererElement() {\n      this.baseElement = createTag(this.data.tg || 'div');\n\n      if (this.data.hasMask) {\n        this.svgElement = createNS('svg');\n        this.layerElement = createNS('g');\n        this.maskedElement = this.layerElement;\n        this.svgElement.appendChild(this.layerElement);\n        this.baseElement.appendChild(this.svgElement);\n      } else {\n        this.layerElement = this.baseElement;\n      }\n\n      styleDiv(this.baseElement);\n    },\n    createContainerElements: function createContainerElements() {\n      this.renderableEffectsManager = new CVEffects(this);\n      this.transformedElement = this.baseElement;\n      this.maskedElement = this.layerElement;\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};\n\n      if (this.finalTransform._matMdf) {\n        var matrixValue = this.finalTransform.mat.toCSS();\n        transformedElementStyle.transform = matrixValue;\n        transformedElementStyle.webkitTransform = matrixValue;\n      }\n\n      if (this.finalTransform._opMdf) {\n        transformedElementStyle.opacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderFrame: function renderFrame() {\n      // If it is exported as hidden (data.hd === true) no need to render\n      // If it is not visible no need to render\n      if (this.data.hd || this.hidden) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderElement();\n      this.renderInnerContent();\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.layerElement = null;\n      this.transformedElement = null;\n\n      if (this.matteElement) {\n        this.matteElement = null;\n      }\n\n      if (this.maskManager) {\n        this.maskManager.destroy();\n        this.maskManager = null;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n    },\n    addEffects: function addEffects() {},\n    setMatte: function setMatte() {}\n  };\n  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\n  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\n  HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\n\n  HSolidElement.prototype.createContent = function () {\n    var rect;\n\n    if (this.data.hasMask) {\n      rect = createNS('rect');\n      rect.setAttribute('width', this.data.sw);\n      rect.setAttribute('height', this.data.sh);\n      rect.setAttribute('fill', this.data.sc);\n      this.svgElement.setAttribute('width', this.data.sw);\n      this.svgElement.setAttribute('height', this.data.sh);\n    } else {\n      rect = createTag('div');\n      rect.style.width = this.data.sw + 'px';\n      rect.style.height = this.data.sh + 'px';\n      rect.style.backgroundColor = this.data.sc;\n    }\n\n    this.layerElement.appendChild(rect);\n  };\n\n  function HShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; // List of styles that will be applied to shapes\n\n    this.stylesList = []; // List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; // List of items in shape tree\n\n    this.itemsData = []; // List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.shapesContainer = createNS('g');\n    this.initElement(data, globalData, comp); // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\n\n  HShapeElement.prototype.createContent = function () {\n    var cont;\n    this.baseElement.style.fontSize = 0;\n\n    if (this.data.hasMask) {\n      this.layerElement.appendChild(this.shapesContainer);\n      cont = this.svgElement;\n    } else {\n      cont = createNS('svg');\n      var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n      cont.setAttribute('width', size.w);\n      cont.setAttribute('height', size.h);\n      cont.appendChild(this.shapesContainer);\n      this.layerElement.appendChild(cont);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\n    this.filterUniqueShapes();\n    this.shapeCont = cont;\n  };\n\n  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {\n    var i;\n    var len = transformers.length;\n\n    for (i = 0; i < len; i += 1) {\n      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\n    }\n\n    return point;\n  };\n\n  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\n    var shape = item.sh.v;\n    var transformers = item.transformers;\n    var i;\n    var len = shape._length;\n    var vPoint;\n    var oPoint;\n    var nextIPoint;\n    var nextVPoint;\n\n    if (len <= 1) {\n      return;\n    }\n\n    for (i = 0; i < len - 1; i += 1) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n\n    if (shape.c) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n  };\n\n  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\n    var bounds = this.shapeBoundingBox;\n    boundingBox.x = bmMin(bounds.left, boundingBox.x);\n    boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);\n    boundingBox.y = bmMin(bounds.top, boundingBox.y);\n    boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);\n  };\n\n  HShapeElement.prototype.shapeBoundingBox = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n  HShapeElement.prototype.tempBoundingBox = {\n    x: 0,\n    xMax: 0,\n    y: 0,\n    yMax: 0,\n    width: 0,\n    height: 0\n  };\n\n  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\n    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\n\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\n      // eslint-disable-line no-plusplus\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      c = 3 * p1[i] - 3 * p0[i];\n      b |= 0; // eslint-disable-line no-bitwise\n\n      a |= 0; // eslint-disable-line no-bitwise\n\n      c |= 0; // eslint-disable-line no-bitwise\n\n      if (a === 0 && b === 0) {//\n      } else if (a === 0) {\n        t = -c / b;\n\n        if (t > 0 && t < 1) {\n          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\n        }\n      } else {\n        b2ac = b * b - 4 * c * a;\n\n        if (b2ac >= 0) {\n          t1 = (-b + bmSqrt(b2ac)) / (2 * a);\n          if (t1 > 0 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\n          t2 = (-b - bmSqrt(b2ac)) / (2 * a);\n          if (t2 > 0 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\n        }\n      }\n    }\n\n    this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);\n    this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);\n    this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);\n    this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);\n  };\n\n  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\n    return bmPow(1 - t, 3) * p0[i] + 3 * bmPow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bmPow(t, 2) * p2[i] + bmPow(t, 3) * p3[i];\n  };\n\n  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\n    var i;\n    var len = itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (itemsData[i] && itemsData[i].sh) {\n        this.calculateShapeBoundingBox(itemsData[i], boundingBox);\n      } else if (itemsData[i] && itemsData[i].it) {\n        this.calculateBoundingBox(itemsData[i].it, boundingBox);\n      } else if (itemsData[i] && itemsData[i].style && itemsData[i].w) {\n        this.expandStrokeBoundingBox(itemsData[i].w, boundingBox);\n      }\n    }\n  };\n\n  HShapeElement.prototype.expandStrokeBoundingBox = function (widthProperty, boundingBox) {\n    var width = 0;\n\n    if (widthProperty.keyframes) {\n      for (var i = 0; i < widthProperty.keyframes.length; i += 1) {\n        var kfw = widthProperty.keyframes[i].s;\n\n        if (kfw > width) {\n          width = kfw;\n        }\n      }\n\n      width *= widthProperty.mult;\n    } else {\n      width = widthProperty.v * widthProperty.mult;\n    }\n\n    boundingBox.x -= width;\n    boundingBox.xMax += width;\n    boundingBox.y -= width;\n    boundingBox.yMax += width;\n  };\n\n  HShapeElement.prototype.currentBoxContains = function (box) {\n    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\n  };\n\n  HShapeElement.prototype.renderInnerContent = function () {\n    this._renderShapeFrame();\n\n    if (!this.hidden && (this._isFirstFrame || this._mdf)) {\n      var tempBoundingBox = this.tempBoundingBox;\n      var max = 999999;\n      tempBoundingBox.x = max;\n      tempBoundingBox.xMax = -max;\n      tempBoundingBox.y = max;\n      tempBoundingBox.yMax = -max;\n      this.calculateBoundingBox(this.itemsData, tempBoundingBox);\n      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\n      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; // var tempBoundingBox = this.shapeCont.getBBox();\n\n      if (this.currentBoxContains(tempBoundingBox)) {\n        return;\n      }\n\n      var changed = false;\n\n      if (this.currentBBox.w !== tempBoundingBox.width) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.shapeCont.setAttribute('width', tempBoundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== tempBoundingBox.height) {\n        this.currentBBox.h = tempBoundingBox.height;\n        this.shapeCont.setAttribute('height', tempBoundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.currentBBox.h = tempBoundingBox.height;\n        this.currentBBox.x = tempBoundingBox.x;\n        this.currentBBox.y = tempBoundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        var shapeStyle = this.shapeCont.style;\n        var shapeTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        shapeStyle.transform = shapeTransform;\n        shapeStyle.webkitTransform = shapeTransform;\n      }\n    }\n  };\n\n  function HTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\n\n  HTextElement.prototype.createContent = function () {\n    this.isMasked = this.checkMasks();\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      this.svgElement.setAttribute('width', this.compW);\n      this.svgElement.setAttribute('height', this.compH);\n      var g = createNS('g');\n      this.maskedElement.appendChild(g);\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = this.layerElement;\n    }\n\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var innerElemStyle = this.innerElem.style;\n    var textColor = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n    innerElemStyle.fill = textColor;\n    innerElemStyle.color = textColor;\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.finalSize + 'px';\n      innerElemStyle.lineHeight = documentData.finalSize + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight;\n        var fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i;\n    var len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan;\n    var tParent;\n    var tCont;\n    var matrixHelper = this.mHelper;\n    var shapes;\n    var shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = createNS('path');\n          tSpan.setAttribute('stroke-linecap', lineCapEnum[1]);\n          tSpan.setAttribute('stroke-linejoin', lineJoinEnum[2]);\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = createTag('div');\n            tParent.style.lineHeight = 0;\n            tCont = createNS('svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else if (!this.isMasked) {\n        if (this.textSpans[cnt]) {\n          tParent = this.textSpans[cnt];\n          tSpan = this.textPaths[cnt];\n        } else {\n          tParent = createTag('span');\n          styleDiv(tParent);\n          tSpan = createTag('span');\n          styleDiv(tSpan);\n          tParent.appendChild(tSpan);\n        }\n      } else {\n        tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\n      } // tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes && shapeData.shapes.length) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            // document.body.appendChild is needed to get exact measure of shape\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            var tContStyle = tCont.style;\n            var tContTranslation = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            tContStyle.transform = tContTranslation;\n            tContStyle.webkitTransform = tContTranslation;\n            letters[i].yOffset = boundingBox.y - 1;\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n\n          tParent.appendChild(tCont);\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          var tStyle = tSpan.style;\n          var tSpanTranslation = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\n          tStyle.transform = tSpanTranslation;\n          tStyle.webkitTransform = tSpanTranslation;\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.renderInnerContent = function () {\n    this.validateText();\n    var svgStyle;\n\n    if (this.data.singleShape) {\n      if (!this._isFirstFrame && !this.lettersChangedFlag) {\n        return;\n      }\n\n      if (this.isMasked && this.finalTransform._matMdf) {\n        // Todo Benchmark if using this is better than getBBox\n        this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n        svgStyle = this.svgElement.style;\n        var translation = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        svgStyle.transform = translation;\n        svgStyle.webkitTransform = translation;\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i;\n    var len;\n    var count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var textSpan;\n    var textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n      } else {\n        textSpan = this.textSpans[i];\n        textPath = this.textPaths[i];\n        renderedLetter = renderedLetters[count];\n        count += 1;\n\n        if (renderedLetter._mdf.m) {\n          if (!this.isMasked) {\n            textSpan.style.webkitTransform = renderedLetter.m;\n            textSpan.style.transform = renderedLetter.m;\n          } else {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n        } /// /textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n        textSpan.style.opacity = renderedLetter.o;\n\n        if (renderedLetter.sw && renderedLetter._mdf.sw) {\n          textPath.setAttribute('stroke-width', renderedLetter.sw);\n        }\n\n        if (renderedLetter.sc && renderedLetter._mdf.sc) {\n          textPath.setAttribute('stroke', renderedLetter.sc);\n        }\n\n        if (renderedLetter.fc && renderedLetter._mdf.fc) {\n          textPath.setAttribute('fill', renderedLetter.fc);\n          textPath.style.color = renderedLetter.fc;\n        }\n      }\n    }\n\n    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n      var boundingBox = this.innerElem.getBBox();\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.svgElement.setAttribute('width', boundingBox.width);\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.svgElement.setAttribute('height', boundingBox.height);\n      }\n\n      var margin = 1;\n\n      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n        this.currentBBox.w = boundingBox.width + margin * 2;\n        this.currentBBox.h = boundingBox.height + margin * 2;\n        this.currentBBox.x = boundingBox.x - margin;\n        this.currentBBox.y = boundingBox.y - margin;\n        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        svgStyle = this.svgElement.style;\n        var svgTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n        svgStyle.transform = svgTransform;\n        svgStyle.webkitTransform = svgTransform;\n      }\n    }\n  };\n\n  function HCameraElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initHierarchy();\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i;\n      var len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\n    this.mat = new Matrix();\n    this._prevMat = new Matrix();\n    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\n\n    this.finalTransform = {\n      mProp: this\n    };\n  }\n\n  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i;\n    var len = this.comp.threeDElements.length;\n    var comp;\n    var perspectiveStyle;\n    var containerStyle;\n\n    for (i = 0; i < len; i += 1) {\n      // [perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n\n      if (comp.type === '3d') {\n        perspectiveStyle = comp.perspectiveElem.style;\n        containerStyle = comp.container.style;\n        var perspective = this.pe.v + 'px';\n        var origin = '0px 0px 0px';\n        var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n        perspectiveStyle.perspective = perspective;\n        perspectiveStyle.webkitPerspective = perspective;\n        containerStyle.transformOrigin = origin;\n        containerStyle.mozTransformOrigin = origin;\n        containerStyle.webkitTransformOrigin = origin;\n        perspectiveStyle.transform = matrix;\n        perspectiveStyle.webkitTransform = matrix;\n      }\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var _mdf = this._isFirstFrame;\n    var i;\n    var len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\n      }\n    }\n\n    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n      this.mat.reset();\n\n      if (this.hierarchy) {\n        len = this.hierarchy.length - 1;\n\n        for (i = len; i >= 0; i -= 1) {\n          var mTransf = this.hierarchy[i].finalTransform.mProp;\n          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\n          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\n          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\n          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\n          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\n        }\n      }\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector;\n\n        if (this.p) {\n          diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        } else {\n          diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\n        }\n\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); // var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(mRotationY).rotateX(-mRotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n      var hasMatrixChanged = !this._prevMat.equals(this.mat);\n\n      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\n        len = this.comp.threeDElements.length;\n        var comp;\n        var perspectiveStyle;\n        var containerStyle;\n\n        for (i = 0; i < len; i += 1) {\n          comp = this.comp.threeDElements[i];\n\n          if (comp.type === '3d') {\n            if (hasMatrixChanged) {\n              var matValue = this.mat.toCSS();\n              containerStyle = comp.container.style;\n              containerStyle.transform = matValue;\n              containerStyle.webkitTransform = matValue;\n            }\n\n            if (this.pe._mdf) {\n              perspectiveStyle = comp.perspectiveElem.style;\n              perspectiveStyle.perspective = this.pe.v + 'px';\n              perspectiveStyle.webkitPerspective = this.pe.v + 'px';\n            }\n          }\n        }\n\n        this.mat.clone(this._prevMat);\n      }\n    }\n\n    this._isFirstFrame = false;\n  };\n\n  HCameraElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  HCameraElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  function HImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\n\n  HImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      this.imageElem = createNS('image');\n      this.imageElem.setAttribute('width', this.assetData.w + 'px');\n      this.imageElem.setAttribute('height', this.assetData.h + 'px');\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      this.layerElement.appendChild(this.imageElem);\n      this.baseElement.setAttribute('width', this.assetData.w);\n      this.baseElement.setAttribute('height', this.assetData.h);\n    } else {\n      this.layerElement.appendChild(img);\n    }\n\n    img.crossOrigin = 'anonymous';\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.baseElement.setAttribute('id', this.data.ln);\n    }\n  };\n\n  function HybridRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      }\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([BaseRenderer], HybridRendererBase);\n  HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      if (this.threeDElements) {\n        this.addTo3dContainer(newDOMElement, pos);\n      } else {\n        var i = 0;\n        var nextDOMElement;\n        var nextLayer;\n        var tmpDOMElement;\n\n        while (i < pos) {\n          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n            nextLayer = this.elements[i];\n            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n            nextDOMElement = tmpDOMElement || nextDOMElement;\n          }\n\n          i += 1;\n        }\n\n        if (nextDOMElement) {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n          }\n        } else if (!layer.ddd || !this.supports3d) {\n          this.layerElement.appendChild(newDOMElement);\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRendererBase.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new SVGShapeElement(data, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextLottieElement(data, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRendererBase.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.globalData, this);\n  };\n\n  HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  HybridRendererBase.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  HybridRendererBase.prototype.createThreeDContainer = function (pos, type) {\n    var perspectiveElem = createTag('div');\n    var style;\n    var containerStyle;\n    styleDiv(perspectiveElem);\n    var container = createTag('div');\n    styleDiv(container);\n\n    if (type === '3d') {\n      style = perspectiveElem.style;\n      style.width = this.globalData.compSize.w + 'px';\n      style.height = this.globalData.compSize.h + 'px';\n      var center = '50% 50%';\n      style.webkitTransformOrigin = center;\n      style.mozTransformOrigin = center;\n      style.transformOrigin = center;\n      containerStyle = container.style;\n      var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n      containerStyle.transform = matrix;\n      containerStyle.webkitTransform = matrix;\n    }\n\n    perspectiveElem.appendChild(container); // this.resizerElem.appendChild(perspectiveElem);\n\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos,\n      type: type\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRendererBase.prototype.build3dContainers = function () {\n    var i;\n    var len = this.layers.length;\n    var lastThreeDContainerData;\n    var currentContainer = '';\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd && this.layers[i].ty !== 3) {\n        if (currentContainer !== '3d') {\n          currentContainer = '3d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '3d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        if (currentContainer !== '2d') {\n          currentContainer = '2d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '2d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      }\n    }\n\n    len = this.threeDElements.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\n    }\n  };\n\n  HybridRendererBase.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0;\n    var len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRendererBase.prototype.configAnimation = function (animData) {\n    var resizerElem = createTag('div');\n    var wrapper = this.animationItem.wrapper;\n    var style = resizerElem.style;\n    style.width = animData.w + 'px';\n    style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    style.transformStyle = 'flat';\n    style.mozTransformStyle = 'flat';\n    style.webkitTransformStyle = 'flat';\n\n    if (this.renderConfig.className) {\n      resizerElem.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    style.overflow = 'hidden';\n    var svg = createNS('svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = createNS('defs');\n    svg.appendChild(defs);\n    this.data = animData; // Mask animation\n\n    this.setupGlobalData(animData, svg);\n    this.globalData.defs = defs;\n    this.layers = animData.layers;\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = '';\n    }\n\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i] && this.elements[i].destroy) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRendererBase.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx;\n    var sy;\n    var tx;\n    var ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    var style = this.resizerElem.style;\n    style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n    style.transform = style.webkitTransform;\n  };\n\n  HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRendererBase.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRendererBase.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRendererBase.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i;\n      var len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        var style = this.threeDElements[i].perspectiveElem.style;\n        style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n        style.perspective = style.webkitPerspective;\n      }\n    }\n  };\n\n  HybridRendererBase.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    var floatingContainer = createTag('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function HCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = !data.hasMask;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement);\n  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\n\n  HCompElement.prototype.createContainerElements = function () {\n    this._createBaseContainerElements(); // divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\n\n\n    if (this.data.hasMask) {\n      this.svgElement.setAttribute('width', this.data.w);\n      this.svgElement.setAttribute('height', this.data.h);\n      this.transformedElement = this.baseElement;\n    } else {\n      this.transformedElement = this.layerElement;\n    }\n  };\n\n  HCompElement.prototype.addTo3dContainer = function (elem, pos) {\n    var j = 0;\n    var nextElement;\n\n    while (j < pos) {\n      if (this.elements[j] && this.elements[j].getBaseElement) {\n        nextElement = this.elements[j].getBaseElement();\n      }\n\n      j += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(elem, nextElement);\n    } else {\n      this.layerElement.appendChild(elem);\n    }\n  };\n\n  HCompElement.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || '400%',\n        height: config && config.filterSize && config.filterSize.height || '400%',\n        x: config && config.filterSize && config.filterSize.x || '-100%',\n        y: config && config.filterSize && config.filterSize.y || '-100%'\n      },\n      runExpressions: !config || config.runExpressions === undefined || config.runExpressions\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([HybridRendererBase], HybridRenderer);\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0;\n        var len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return null; // return {active:false};\n      }\n\n      Object.defineProperty(_thisLayerFunction, '_name', {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n\n  function _typeof$2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$2(obj); }\n\n  /* eslint-disable */\n\n  /*\r\n   Copyright 2014 David Bau.\r\n\r\n   Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n\r\n   The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n\r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n   */\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng[\"double\"] = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      };\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = _typeof$2(obj),\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  }\n\n  ;\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath);\n  }\n\n  var propTypes = {\n    SHAPE: 'shape'\n  };\n\n  function _typeof$1(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$1(obj); }\n\n  var ExpressionManager = function () {\n    'use strict';\n\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n    var XMLHttpRequest = null;\n    var fetch = null;\n    var frames = null;\n    var _lottieGlobal = {};\n    initialize$2(BMMath);\n\n    function resetFrame() {\n      _lottieGlobal = {};\n    }\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || v instanceof Number || tOfV === 'boolean' || tOfV === 'string';\n    }\n\n    function $bm_neg(a) {\n      var tOfA = _typeof$1(a);\n\n      if (tOfA === 'number' || a instanceof Number || tOfA === 'boolean') {\n        return -a;\n      }\n\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n\n      if (a.propType) {\n        return a.v;\n      }\n\n      return -a;\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get;\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get;\n\n    function sum(a, b) {\n      var tOfA = _typeof$1(a);\n\n      var tOfB = _typeof$1(b);\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b) || tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = _typeof$1(a);\n\n      var tOfB = _typeof$1(b);\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b, 10);\n        }\n\n        return a - b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = _typeof$1(a);\n\n      var tOfB = _typeof$1(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = _typeof$1(a);\n\n      var tOfB = _typeof$1(b);\n\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n\n      var i;\n      var len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b, 10);\n      }\n\n      return a % b;\n    }\n\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i;\n      var len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n\n      if (max === min) {\n        h = 0; // achromatic\n\n        s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n\n          default:\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r;\n      var g;\n      var b;\n\n      if (s === 0) {\n        r = l; // achromatic\n\n        b = l; // achromatic\n\n        g = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n\n      if (t <= tMin) {\n        return value1;\n      }\n\n      if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i;\n        var len = max.length;\n\n        if (!min) {\n          min = createTypedArray('float32', len);\n        }\n\n        var arr = createTypedArray('float32', len);\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      // Bail out if we don't want expressions\n      function noOp(_value) {\n        return _value;\n      }\n\n      if (!elem.globalData.renderConfig.runExpressions) {\n        return noOp;\n      }\n\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform;\n      var $bm_transform;\n      var content;\n      var effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, 'value', {\n        get: function get() {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn;\n      var loop_in;\n      var loopOut;\n      var loop_out;\n      var smooth;\n      var toWorld;\n      var fromWorld;\n      var fromComp;\n      var toComp;\n      var fromCompToSurface;\n      var position;\n      var rotation;\n      var anchorPoint;\n      var scale;\n      var thisLayer;\n      var thisComp;\n      var mask;\n      var valueAtTime;\n      var velocityAtTime;\n      var scoped_bm_rt; // val = val.replace(/(\\\\?\"|')((http)(s)?(:\\/))?\\/.*?(\\\\?\"|')/g, \"\\\"\\\"\"); // deter potential network calls\n\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0]; // eslint-disable-line no-eval\n\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n\n      var wiggle = function wiggle(freq, amp) {\n        var iWiggle;\n        var j;\n        var lenWiggle = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray('float32', lenWiggle);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        iWiggle = 0;\n        j = 0;\n\n        while (iWiggle < iterations) {\n          // var rnd = BMMath.random();\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); // addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          iWiggle += 1;\n        } // var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray('float32', lenWiggle);\n\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        }\n\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n\n        if (t > 1) {\n          t = 1;\n        } else if (t < 0) {\n          t = 0;\n        }\n\n        var mult = fn(t);\n\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey;\n          var lenKey = val1.length;\n          var arr = createTypedArray('float32', lenKey);\n\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\n          }\n\n          return arr;\n        }\n\n        return (val2 - val1) * mult + val1;\n      }\n\n      function nearestKey(time) {\n        var iKey;\n        var lenKey = data.k.length;\n        var index;\n        var keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time === data.k[iKey].t) {\n                index = iKey + 1;\n                keyTime = data.k[iKey].t;\n                break;\n              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\n                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\n                  index = iKey + 2;\n                  keyTime = data.k[iKey + 1].t;\n                } else {\n                  index = iKey + 1;\n                  keyTime = data.k[iKey].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = iKey + 1;\n              keyTime = data.k[iKey].t;\n            }\n          }\n        }\n\n        var obKey = {};\n        obKey.index = index;\n        obKey.time = keyTime / elem.comp.globalData.frameRate;\n        return obKey;\n      }\n\n      function key(ind) {\n        var obKey;\n        var iKey;\n        var lenKey;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e;\n        lenKey = arr.length;\n\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey];\n          obKey.value[iKey] = arr[iKey];\n        }\n\n        return obKey;\n      }\n\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return fr / fps;\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init);\n          }\n\n          return value.substring(init, end);\n        }\n\n        return '';\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init);\n          }\n\n          return value.substr(init, end);\n        }\n\n        return '';\n      }\n\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\n        value = valueAtTime(time);\n      }\n\n      var time;\n      var velocity;\n      var value;\n      var text;\n      var textIndex;\n      var textTotal;\n      var selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n      var globalData = elem.globalData;\n\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value;\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value;\n        }\n\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface('ADBE Transform Group');\n          $bm_transform = transform;\n\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n            /* position = transform.position;\r\n                      rotation = transform.rotation;\r\n                      scale = transform.scale; */\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer('ADBE Root Vectors Group');\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (_needsRandom) {\n          seedRandom(randSeed + time);\n        }\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId; // TODO: Check if it's possible to return on ShapeInterface the .v value\n        // Changed this to a ternary operation because Rollup failed compiling it correctly\n\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;\n        return scoped_bm_rt;\n      } // Bundlers will see these as dead code and unless we reference them\n\n\n      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];\n      return executeExpression;\n    }\n\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath, _lottieGlobal];\n    ob.resetFrame = resetFrame;\n    return ob;\n  }();\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n    ob.resetFrame = ExpressionManager.resetFrame;\n\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n\n      function pushExpression() {\n        stackCount += 1;\n      }\n\n      function popExpression() {\n        stackCount -= 1;\n\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n\n        registers.length = 0;\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n\n    return ob;\n  }();\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function get() {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n\n        return this._mask.op.v * 100;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n\n      var i;\n      var len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function get() {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n\n        var value = '';\n\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s;\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e;\n        } else {\n          value = property.keyframes[pos - 2].s;\n        }\n\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value); // eslint-disable-line no-new-wrappers\n\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n        valueProp.value = type === 'unidimensional' ? value[0] : value;\n        return valueProp;\n      };\n\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, 'unidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        val = property.v * mult;\n\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\n\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, 'unidimensional');\n        }\n\n        return expressionValue;\n      };\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var len = property.data && property.data.l || property.pv.length;\n      var expressionValue = createTypedArray('float32', len);\n      var arrValue = createTypedArray('float32', len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, 'multidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n\n        return expressionValue;\n      };\n    } // TODO: try to avoid using this getter\n\n\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      }\n\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property);\n      }\n\n      return MultidimensionalPropertyInterface(property);\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale;\n\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation;\n\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation;\n\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation;\n\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position;\n\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition;\n\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition;\n\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition;\n\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n\n      var _px;\n\n      var _py;\n\n      var _pz;\n\n      var _transformFactory;\n\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform.px);\n        _py = ExpressionPropertyInterface(transform.py);\n\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz);\n        }\n      }\n\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function get() {\n          if (transform.p) {\n            return _transformFactory();\n          }\n\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix();\n\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);\n\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n\n      return toWorldMat;\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.applyPoint(toWorldMat, arr);\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.invertPoint(toWorldMat, arr);\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n\n      return matrix.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n\n    return function (elem) {\n      var transformInterface;\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface;\n\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect;\n\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface;\n\n          default:\n            return null;\n        }\n      }\n\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function get() {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function get() {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function get() {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function get() {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return parentPropertyGroup(val - 1);\n      };\n    };\n  }();\n\n  var PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val;\n\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n\n        return propertyGroup(val - 1);\n      }\n\n      return _propertyGroup;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i;\n        var len = elem.effectsManager.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n\n        var effects = elem.data.ef || [];\n\n        var groupInterface = function groupInterface(name) {\n          i = 0;\n          len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n\n          return null;\n        };\n\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function get() {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n\n      return null;\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef;\n        var i = 0;\n        var len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            }\n\n            return effectElements[i]();\n          }\n\n          i += 1;\n        }\n\n        throw new Error();\n      }\n\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n\n      var effectElements = [];\n      var i;\n      var len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function get() {\n            return data.np;\n          }\n        },\n        _name: {\n          value: data.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return expressionProperty();\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup));\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n\n      function interfaceFunction(val) {\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n          return interfaceFunction.path;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        shape: {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n\n  var ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'tr') {// arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup));\n        }\n      }\n\n      return arr;\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        }\n\n        return null;\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content;\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function get() {\n          return shape.nm;\n        }\n      }); // interfaceFunction.content = interfaceFunction;\n\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint;\n        }\n\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function get() {\n            return 'a';\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\n      return interfaceFunction;\n    }\n\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n\n      return interfaceFunction;\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p)\n        });\n      }\n\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        }\n\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth;\n        }\n\n        return null;\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function get() {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));\n      return interfaceFunction;\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end;\n        }\n\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint;\n        }\n\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale;\n        }\n\n        if (shape.sk && shape.sk.ix === value || value === 'Skew') {\n          return interfaceFunction.skew;\n        }\n\n        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));\n      }\n\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = 'tr';\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius;\n        }\n\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius;\n        }\n\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies;\n        }\n\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset;\n        }\n\n        return null;\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value;\n\n          if (value === 0) {\n            return propertyGroup;\n          }\n\n          return interfaces[value - 1];\n        }\n\n        var i = 0;\n        var len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        return null;\n      }\n\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = 'Contents';\n      return _interfaceFunction;\n    };\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _sourceText;\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText;\n\n          default:\n            return null;\n        }\n      }\n\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function get() {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (!_sourceText || stringValue !== _sourceText.value) {\n            _sourceText = new String(stringValue); // eslint-disable-line no-new-wrappers\n            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue || new String(stringValue); // eslint-disable-line no-new-wrappers\n\n            Object.defineProperty(_sourceText, 'style', {\n              get: function get() {\n                return {\n                  fillColor: elem.textProperty.currentData.fc\n                };\n              }\n            });\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var FootageInterface = function () {\n    var outlineInterfaceFactory = function outlineInterfaceFactory(elem) {\n      var currentPropertyName = '';\n      var currentProperty = elem.getFootageData();\n\n      function init() {\n        currentPropertyName = '';\n        currentProperty = elem.getFootageData();\n        return searchProperty;\n      }\n\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value;\n          currentProperty = currentProperty[value];\n\n          if (_typeof(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        var propertyNameIndex = value.indexOf(currentPropertyName);\n\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index];\n\n          if (_typeof(currentProperty) === 'object') {\n            return searchProperty;\n          }\n\n          return currentProperty;\n        }\n\n        return '';\n      }\n\n      return init;\n    };\n\n    var dataInterfaceFactory = function dataInterfaceFactory(elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface();\n        }\n\n        return null;\n      }\n\n      interfaceFunction._name = 'Outline';\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);\n      return interfaceFunction;\n    };\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface;\n        }\n\n        return null;\n      }\n\n      _interfaceFunction._name = 'Data';\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem);\n      return _interfaceFunction;\n    };\n  }();\n\n  var interfaces = {\n    layer: LayerExpressionInterface,\n    effects: EffectsExpressionInterface,\n    comp: CompExpressionInterface,\n    shape: ShapeExpressionInterface,\n    text: TextExpressionInterface,\n    footage: FootageInterface\n  };\n\n  function getInterface(type) {\n    return interfaces[type] || null;\n  }\n\n  var expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n\n      if (v1.length) {\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n\n      return speed;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.001; // frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length);\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty\n    };\n  }();\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var firstKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n\n          return ret;\n        }\n\n        return (endV - initV) * repeats + current;\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005; // eslint-disable-line\n          }\n\n          return ret;\n        }\n\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n      }\n\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n\n      var cycleDuration;\n      var lastKeyFrame;\n\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n\n      var i;\n      var len;\n      var ret;\n\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n\n          return ret;\n        }\n\n        return current - (endV - initV) * repeats;\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n          }\n\n          return ret;\n        }\n\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n      }\n\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n\n      if (samples <= 1) {\n        return this.pv;\n      }\n\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value;\n\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length);\n      } else {\n        value = 0;\n      }\n\n      var sampleValue;\n\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n\n        i += 1;\n      }\n\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n\n      return value;\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      } /// /\n\n\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time);\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);\n      }\n\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time);\n        var skewAxis = this.sa.getValueAtTime(time);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time);\n        matrix.rotate(-rotation * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time);\n        var rotationY = this.ry.getValueAtTime(time);\n        var rotationX = this.rx.getValueAtTime(time);\n        var orientation = this.or.getValueAtTime(time);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time);\n        var positionY = this.py.getValueAtTime(time);\n\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position = this.p.getValueAtTime(time);\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);\n      }\n\n      return matrix; /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container); // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n\n      return this._cachingAtTime.shapeValue;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    function ShapeExpressions() {}\n\n    ShapeExpressions.prototype = {\n      vertices: function vertices(prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n\n        return arr;\n      },\n      points: function points(time) {\n        return this.vertices('v', time);\n      },\n      inTangents: function inTangents(time) {\n        return this.vertices('i', time);\n      },\n      outTangents: function outTangents(time) {\n        return this.vertices('o', time);\n      },\n      isClosed: function isClosed() {\n        return this.v.c;\n      },\n      pointOnPath: function pointOnPath(perc, time) {\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n\n          i += 1;\n        }\n\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n\n        return pt;\n      },\n      vectorOnPath: function vectorOnPath(perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c;\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999;\n        }\n\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 0.001, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n\n        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function tangentOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent');\n      },\n      normalOnPath: function normalOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'normal');\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n  }\n\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n\n      return null;\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n\n      return currentValue;\n    };\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n\n  function initialize() {\n    addDecorator();\n  }\n\n  function SVGComposableEffect() {}\n\n  SVGComposableEffect.prototype = {\n    createMergeNode: function createMergeNode(resultId, ins) {\n      var feMerge = createNS('feMerge');\n      feMerge.setAttribute('result', resultId);\n      var feMergeNode;\n      var i;\n\n      for (i = 0; i < ins.length; i += 1) {\n        feMergeNode = createNS('feMergeNode');\n        feMergeNode.setAttribute('in', ins[i]);\n        feMerge.appendChild(feMergeNode);\n        feMerge.appendChild(feMergeNode);\n      }\n\n      return feMerge;\n    }\n  };\n\n  var linearFilterValue = '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0';\n\n  function SVGTintFilter(filter, filterManager, elem, id, source) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', linearFilterValue + ' 1 0');\n    this.linearFilter = feColorMatrix;\n    feColorMatrix.setAttribute('result', id + '_tint_1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id + '_tint_2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n    var feMerge = this.createMergeNode(id, [source, id + '_tint_1', id + '_tint_2']);\n    filter.appendChild(feMerge);\n  }\n\n  extendPrototype([SVGComposableEffect], SVGTintFilter);\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.linearFilter.setAttribute('values', linearFilterValue + ' ' + opacity + ' 0');\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 1 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', id);\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGStrokeEffect(fil, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path;\n    var groupPath;\n    var i;\n    var len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = createNS('g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = createNS('path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = createNS('mask');\n      var id = createElementID();\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = createNS('g');\n      g.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')');\n\n      while (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i;\n    var len = this.paths.length;\n    var mask;\n    var path;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.paths[i].m !== -1) {\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\n        path = this.paths[i].p;\n\n        if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\n          path.setAttribute('d', mask.lastPath);\n        }\n\n        if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\n          var dasharrayValue;\n\n          if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n            var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\n            var l = path.getTotalLength();\n            dasharrayValue = '0 0 0 ' + l * s + ' ';\n            var lineLength = l * (e - s);\n            var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n            var units = Math.floor(lineLength / segment);\n            var j;\n\n            for (j = 0; j < units; j += 1) {\n              dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';\n            }\n\n            dasharrayValue += '0 ' + l * 10 + ' 0 0';\n          } else {\n            dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\n          }\n\n          path.setAttribute('stroke-dasharray', dasharrayValue);\n        }\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p._mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p._mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = createNS('feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    feComponentTransfer.setAttribute('result', id);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = createNS('feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = createNS('feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = createNS('feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n    filter.appendChild(feComponentTransfer);\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB);\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager, elem, id) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = createNS('feComponentTransfer'); // Red\n\n    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    } // Green\n\n\n    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    } // Blue\n\n\n    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    } // Alpha\n\n\n    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    } // RGB\n\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n    }\n\n    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\n      feComponentTransfer = createNS('feComponentTransfer');\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      feComponentTransfer.setAttribute('result', id);\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = createNS(type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos] = colorValue;\n      pos += 1;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var val;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\n        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\n        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\n        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\n        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\n        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager, elem, id, source) {\n    var globalFilterSize = filterManager.container.globalData.renderConfig.filterSize;\n    var filterSize = filterManager.data.fs || globalFilterSize;\n    filter.setAttribute('x', filterSize.x || globalFilterSize.x);\n    filter.setAttribute('y', filterSize.y || globalFilterSize.y);\n    filter.setAttribute('width', filterSize.width || globalFilterSize.width);\n    filter.setAttribute('height', filterSize.height || globalFilterSize.height);\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', id + '_drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = createNS('feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', id + '_drop_shadow_1');\n    feOffset.setAttribute('result', id + '_drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = createNS('feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', id + '_drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = createNS('feComposite');\n    feComposite.setAttribute('in', id + '_drop_shadow_3');\n    feComposite.setAttribute('in2', id + '_drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', id + '_drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = this.createMergeNode(id, [id + '_drop_shadow_4', source]);\n    filter.appendChild(feMerge); //\n  }\n\n  extendPrototype([SVGComposableEffect], SVGDropShadowEffect);\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p._mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p._mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n    }\n  };\n\n  var _svgMatteSymbols = [];\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = createNS('g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.findSymbol = function (mask) {\n    var i = 0;\n    var len = _svgMatteSymbols.length;\n\n    while (i < len) {\n      if (_svgMatteSymbols[i] === mask) {\n        return _svgMatteSymbols[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\n    var parentNode = mask.layerElement.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    var children = parentNode.children;\n    var i = 0;\n    var len = children.length;\n\n    while (i < len) {\n      if (children[i] === mask.layerElement) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    var nextChild;\n\n    if (i <= len - 2) {\n      nextChild = children[i + 1];\n    }\n\n    var useElem = createNS('use');\n    useElem.setAttribute('href', '#' + symbolId);\n\n    if (nextChild) {\n      parentNode.insertBefore(useElem, nextChild);\n    } else {\n      parentNode.appendChild(useElem);\n    }\n  };\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    if (!this.findSymbol(mask)) {\n      var symbolId = createElementID();\n      var masker = createNS('mask');\n      masker.setAttribute('id', mask.layerId);\n      masker.setAttribute('mask-type', 'alpha');\n\n      _svgMatteSymbols.push(mask);\n\n      var defs = elem.globalData.defs;\n      defs.appendChild(masker);\n      var symbol = createNS('symbol');\n      symbol.setAttribute('id', symbolId);\n      this.replaceInParent(mask, symbolId);\n      symbol.appendChild(mask.layerElement);\n      defs.appendChild(symbol);\n      var useElem = createNS('use');\n      useElem.setAttribute('href', '#' + symbolId);\n      masker.appendChild(useElem);\n      mask.data.hd = false;\n      mask.show();\n    }\n\n    elem.setMatte(mask.layerId);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var elements = this.elem.comp.elements;\n    var i = 0;\n    var len = elements.length;\n\n    while (i < len) {\n      if (elements[i] && elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGGaussianBlurEffect(filter, filterManager, elem, id) {\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '300%');\n    filter.setAttribute('height', '300%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('result', id);\n    filter.appendChild(feGaussianBlur);\n    this.feGaussianBlur = feGaussianBlur;\n  }\n\n  SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      // Empirical value, matching AE's blur appearance.\n      var kBlurrinessToSigma = 0.3;\n      var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma; // Dimensions mapping:\n      //\n      //   1 -> horizontal & vertical\n      //   2 -> horizontal only\n      //   3 -> vertical only\n      //\n\n      var dimensions = this.filterManager.effectElements[1].p.v;\n      var sigmaX = dimensions == 3 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      var sigmaY = dimensions == 2 ? 0 : sigma; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY); // Repeat edges mapping:\n      //\n      //   0 -> off -> duplicate\n      //   1 -> on  -> wrap\n\n      var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq\n\n      this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\n    }\n  };\n\n  function TransformEffect() {}\n\n  TransformEffect.prototype.init = function (effectsManager) {\n    this.effectsManager = effectsManager;\n    this.type = effectTypes.TRANSFORM_EFFECT;\n    this.matrix = new Matrix();\n    this.opacity = -1;\n    this._mdf = false;\n    this._opMdf = false;\n  };\n\n  TransformEffect.prototype.renderFrame = function (forceFrame) {\n    this._opMdf = false;\n    this._mdf = false;\n\n    if (forceFrame || this.effectsManager._mdf) {\n      var effectElements = this.effectsManager.effectElements;\n      var anchor = effectElements[0].p.v;\n      var position = effectElements[1].p.v;\n      var isUniformScale = effectElements[2].p.v === 1;\n      var scaleHeight = effectElements[3].p.v;\n      var scaleWidth = isUniformScale ? scaleHeight : effectElements[4].p.v;\n      var skew = effectElements[5].p.v;\n      var skewAxis = effectElements[6].p.v;\n      var rotation = effectElements[7].p.v;\n      this.matrix.reset();\n      this.matrix.translate(-anchor[0], -anchor[1], anchor[2]);\n      this.matrix.scale(scaleWidth * 0.01, scaleHeight * 0.01, 1);\n      this.matrix.rotate(-rotation * degToRads);\n      this.matrix.skewFromAxis(-skew * degToRads, (skewAxis + 90) * degToRads);\n      this.matrix.translate(position[0], position[1], 0);\n      this._mdf = true;\n\n      if (this.opacity !== effectElements[8].p.v) {\n        this.opacity = effectElements[8].p.v;\n        this._opMdf = true;\n      }\n    }\n  };\n\n  function SVGTransformEffect(_, filterManager) {\n    this.init(filterManager);\n  }\n\n  extendPrototype([TransformEffect], SVGTransformEffect);\n\n  function CVTransformEffect(effectsManager) {\n    this.init(effectsManager);\n  }\n\n  extendPrototype([TransformEffect], CVTransformEffect);\n\n  registerRenderer('canvas', CanvasRenderer);\n  registerRenderer('html', HybridRenderer);\n  registerRenderer('svg', SVGRenderer); // Registering shape modifiers\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier);\n  ShapeModifiers.registerModifier('zz', ZigZagModifier);\n  ShapeModifiers.registerModifier('op', OffsetPathModifier); // Registering expression plugin\n\n  setExpressionsPlugin(Expressions);\n  setExpressionInterfaces(getInterface);\n  initialize$1();\n  initialize(); // Registering svg effects\n\n  registerEffect$1(20, SVGTintFilter, true);\n  registerEffect$1(21, SVGFillFilter, true);\n  registerEffect$1(22, SVGStrokeEffect, false);\n  registerEffect$1(23, SVGTritoneFilter, true);\n  registerEffect$1(24, SVGProLevelsFilter, true);\n  registerEffect$1(25, SVGDropShadowEffect, true);\n  registerEffect$1(28, SVGMatte3Effect, false);\n  registerEffect$1(29, SVGGaussianBlurEffect, true);\n  registerEffect$1(35, SVGTransformEffect, false);\n  registerEffect(35, CVTransformEffect);\n\n  return lottie;\n\n}));\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.finalize();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.6.2');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _necessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._$parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.7.4');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.3.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise compatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n// From the TC39 Decorators proposal\nexport interface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\nexport interface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport const legacyPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  proto: Object,\n  name: PropertyKey\n) => {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nexport const standardPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  element: ClassElement\n) => ({\n  kind: 'method',\n  placement: 'prototype',\n  key: element.key,\n  descriptor,\n});\n\n/**\n * Helper for decorating a property that is compatible with both TypeScript\n * and Babel decorators. The optional `finisher` can be used to perform work on\n * the class. The optional `descriptor` should return a PropertyDescriptor\n * to install for the given property.\n *\n * @param finisher {function} Optional finisher method; receives the element\n * constructor and property key as arguments and has no return value.\n * @param descriptor {function} Optional descriptor method; receives the\n * property key as an argument and returns a property descriptor to define for\n * the given property.\n * @returns {ClassElement|void}\n */\nexport const decorateProperty =\n  ({\n    finisher,\n    descriptor,\n  }: {\n    finisher?:\n      | ((ctor: typeof ReactiveElement, property: PropertyKey) => void)\n      | null;\n    descriptor?: (property: PropertyKey) => PropertyDescriptor;\n  }) =>\n  (\n    protoOrDescriptor: Interface<ReactiveElement> | ClassElement,\n    name?: PropertyKey\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any => {\n    // TypeScript / Babel legacy mode\n    if (name !== undefined) {\n      const ctor = (protoOrDescriptor as ReactiveElement)\n        .constructor as typeof ReactiveElement;\n      if (descriptor !== undefined) {\n        Object.defineProperty(protoOrDescriptor, name, descriptor(name));\n      }\n      finisher?.(ctor, name!);\n      // Babel standard mode\n    } else {\n      // Note, the @property decorator saves `key` as `originalKey`\n      // so try to use it here.\n      const key =\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (protoOrDescriptor as any).originalKey ??\n        (protoOrDescriptor as ClassElement).key;\n      const info: ClassElement =\n        descriptor != undefined\n          ? {\n              kind: 'method',\n              placement: 'prototype',\n              key,\n              descriptor: descriptor((protoOrDescriptor as ClassElement).key),\n            }\n          : {...(protoOrDescriptor as ClassElement), key};\n      if (finisher != undefined) {\n        info.finisher = function <ReactiveElement>(\n          ctor: Constructor<ReactiveElement>\n        ) {\n          finisher(ctor as unknown as typeof ReactiveElement, key);\n        };\n      }\n      return info;\n    }\n  };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector) ?? null;\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            (this as unknown as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector) ?? null;\n          }\n          return (this as unknown as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","{\n  \"name\": \"@dotlottie/player-component\",\n  \"version\": \"2.2.0\",\n  \"description\": \"dotLottie animation player web component.\",\n  \"repository\": \"https://github.com/dotlottie/player-component.git\",\n  \"homepage\": \"https://dotlottie.com/players\",\n  \"bugs\": \"https://github.com/dotlottie/player-component/issues\",\n  \"author\": \"Jawish Hameed <jawish@lottiefiles.com>\",\n  \"license\": \"MIT\",\n  \"main\": \"dist/dotlottie-player.js\",\n  \"module\": \"dist/dotlottie-player.mjs\",\n  \"types\": \"dist/dotlottie-player.d.ts\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"dotlottie\",\n    \"animation\",\n    \"web component\",\n    \"component\",\n    \"lit-element\",\n    \"player\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"cypress:open\": \"cypress open --component\",\n    \"dev\": \"tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"eslint --fix\",\n    \"test\": \"cypress run --component\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"lit\": \"^2.7.5\"\n  },\n  \"devDependencies\": {\n    \"@dotlottie/common\": \"workspace:^\",\n    \"@vitejs/plugin-legacy\": \"^4.1.0\",\n    \"axe-core\": \"^4.7.2\",\n    \"cypress\": \"^12.11.0\",\n    \"cypress-axe\": \"^1.4.0\",\n    \"cypress-ct-lit\": \"^0.3.2\",\n    \"lottie-web\": \"^5.12.2\",\n    \"terser\": \"^5.19.0\",\n    \"tsup\": \"^6.1.3\",\n    \"typescript\": \"^4.7.4\",\n    \"vite\": \"^4.3.9\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"browserslist\": [\n    \"> 3%\"\n  ]\n}\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport { css } from 'lit';\n\nexport default css`\n  @font-face {\n    font-family: 'Karla';\n    font-weight: regular;\n    src: url('./fonts/Karla-regular.woff') format('woff');\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  :host {\n    --lottie-player-toolbar-height: 35px;\n    --lottie-player-toolbar-background-color: transparent;\n    --lottie-player-toolbar-hover-background-color: #f3f6f8;\n    --lottie-player-toolbar-icon-color: #20272c;\n    --lottie-player-toolbar-icon-hover-color: #f3f6f8;\n    --lottie-player-toolbar-icon-active-color: #00ddb3;\n    --lottie-player-seeker-track-color: #00ddb3;\n    --lottie-player-seeker-accent-color: #00c1a2;\n    --lottie-player-seeker-thumb-color: #00c1a2;\n    --lottie-player-options-separator: #d9e0e6;\n\n    display: block;\n    width: 100%;\n    height: 100%;\n\n    font-family: 'Karla', sans-serif;\n    font-style: normal;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .active {\n    color: var(--lottie-player-toolbar-icon-active-color) !important;\n  }\n\n  .main {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n  }\n\n  .animation {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n  }\n  .animation.controls {\n    height: calc(100% - var(--lottie-player-toolbar-height));\n  }\n\n  .toolbar {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    background-color: var(--lottie-player-toolbar-background-color);\n    margin: 0 8px;\n    height: var(--lottie-player-toolbar-height);\n  }\n\n  .btn-spacing-left {\n    margin-right: 4px;\n    margin-left: 8px;\n  }\n\n  .btn-spacing-center {\n    margin-right: 4px;\n    margin-left: 4px;\n  }\n\n  .btn-spacing-right {\n    margin-right: 8px;\n    margin-left: 4px;\n  }\n\n  .toolbar button {\n    color: #20272c;\n    cursor: pointer;\n    fill: var(--lottie-player-toolbar-icon-color);\n    display: flex;\n    background: none;\n    border: 0px;\n    border-radius: 4px;\n    padding: 4px;\n    outline: none;\n    width: 24px;\n    height: 24px;\n    align-items: center;\n  }\n\n  .toolbar button:hover {\n    background-color: var(--lottie-player-toolbar-icon-hover-color);\n    border-style: solid;\n    border-radius: 2px;\n  }\n\n  .toolbar button.active {\n    fill: var(--lottie-player-toolbar-icon-active-color);\n  }\n\n  .toolbar button.active:hover {\n    fill: var(--lottie-player-toolbar-icon-hover-color);\n    border-radius: 4px;\n  }\n\n  .toolbar button:focus-visible {\n    outline: 2px solid var(--lottie-player-toolbar-icon-active-color);\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n\n  .toolbar button svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  .toolbar button.disabled svg {\n    display: none;\n  }\n\n  .popover {\n    position: absolute;\n    bottom: 40px;\n    left: calc(100% - 239px);\n    width: 224px;\n    min-height: 84px;\n    max-height: 300px;\n    background-color: #ffffff;\n    box-shadow: 0px 8px 48px 0px rgba(243, 246, 248, 0.15), 0px 8px 16px 0px rgba(61, 72, 83, 0.16),\n      0px 0px 1px 0px rgba(61, 72, 83, 0.36);\n    border-radius: 8px;\n    padding: 8px;\n    z-index: 100;\n    overflow-y: scroll;\n    scrollbar-width: none;\n  }\n  .popover:focus-visible {\n    outline: 2px solid var(--lottie-player-toolbar-icon-active-color);\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n\n  .popover::-webkit-scrollbar {\n    width: 0px;\n  }\n\n  .popover-button {\n    background: none;\n    border: none;\n    font-family: inherit;\n    width: 100%;\n    flex-direction: row;\n    cursor: pointer;\n    height: 32px;\n    color: #20272c;\n    justify-content: space-between;\n    display: flex;\n    padding: 4px 8px;\n    align-items: flex-start;\n    gap: 8px;\n    align-self: stretch;\n    border-radius: 4px;\n  }\n\n  .popover-button:focus-visible {\n    outline: 2px solid var(--lottie-player-toolbar-icon-active-color);\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n\n  .popover-button:hover {\n    background-color: var(--lottie-player-toolbar-hover-background-color);\n  }\n\n  .popover-button-text {\n    display: flex;\n    color: #20272c;\n    flex-direction: column;\n    align-self: stretch;\n    justify-content: center;\n    font-family: inherit;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 150%;\n    letter-spacing: -0.28px;\n  }\n\n  .reset-btn {\n    font-size: 12px;\n    cursor: pointer;\n    font-family: inherit;\n    background: none;\n    border: none;\n    font-weight: 400;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: left;\n    color: #63727e;\n    padding: 0;\n    width: 31px;\n    height: 18px;\n  }\n  .reset-btn:focus-visible {\n    outline: 2px solid var(--lottie-player-toolbar-icon-active-color);\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n  .reset-btn:hover {\n    color: #20272c;\n  }\n\n  .option-title-button {\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    height: 32px;\n    align-items: center;\n    gap: 4px;\n    align-self: stretch;\n    cursor: pointer;\n    color: var(--lottie-player-toolbar-icon-color);\n    border: none;\n    background: none;\n    padding: 4px;\n    font-family: inherit;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: 150%;\n    letter-spacing: -0.32px;\n  }\n  .option-title-button.themes {\n    width: auto;\n    padding: 0;\n  }\n  .option-title-button:hover {\n    background-color: var(--lottie-player-toolbar-icon-hover-color);\n  }\n\n  .option-title-themes-row {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    flex: 1 0 0;\n  }\n  .option-title-themes-row:hover {\n    background-color: var(--lottie-player-toolbar-icon-hover-color);\n  }\n\n  .option-title-button:focus-visible {\n    outline: 2px solid var(--lottie-player-toolbar-icon-active-color);\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n\n  .option-title-text {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 150%;\n    letter-spacing: -0.32px;\n  }\n\n  .option-title-separator {\n    margin: 8px -8px;\n    border-bottom: 1px solid var(--lottie-player-options-separator);\n  }\n\n  .option-title-chevron {\n    display: flex;\n    padding: 4px;\n    border-radius: 8px;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .option-row {\n    display: flex;\n    flex-direction: column;\n  }\n  .option-row > ul {\n    padding: 0;\n    margin: 0;\n  }\n\n  .option-button {\n    width: 100%;\n    background: none;\n    border: none;\n    font-family: inherit;\n    display: flex;\n    padding: 4px 8px;\n    color: #20272c;\n    overflow: hidden;\n    align-items: center;\n    gap: 8px;\n    align-self: stretch;\n    cursor: pointer;\n    height: 32px;\n    font-family: inherit;\n    font-size: 14px;\n    border-radius: 4px;\n  }\n  .option-button:hover {\n    background-color: var(--lottie-player-toolbar-hover-background-color);\n  }\n  .option-button:focus-visible {\n    outline: 2px solid var(--lottie-player-toolbar-icon-active-color);\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n\n  .option-tick {\n    display: flex;\n    width: 24px;\n    height: 24px;\n    align-items: flex-start;\n    gap: 8px;\n  }\n\n  .seeker {\n    height: 4px;\n    width: 95%;\n    outline: none;\n    -webkit-appearance: none;\n    -moz-apperance: none;\n    border-radius: 9999px;\n    cursor: pointer;\n    background-image: linear-gradient(\n      to right,\n      rgb(0, 221, 179) calc(var(--seeker) * 1%),\n      rgb(217, 224, 230) calc(var(--seeker) * 1%)\n    );\n  }\n  .seeker.to-left {\n    background-image: linear-gradient(\n      to right,\n      rgb(217, 224, 230) calc(var(--seeker) * 1%),\n      rgb(0, 221, 179) calc(var(--seeker) * 1%)\n    );\n  }\n  .seeker::-webkit-slider-runnable-track:focus-visible {\n    color: #f07167;\n    accent-color: #00ddb3;\n  }\n\n  .seeker::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 5px;\n    cursor: pointer;\n  }\n  .seeker::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n    margin-top: -5px;\n  }\n  .seeker:focus-visible::-webkit-slider-thumb {\n    background: var(--lottie-player-seeker-thumb-color);\n    outline: 2px solid var(--lottie-player-seeker-track-color);\n    border: 1.5px solid #ffffff;\n  }\n  .seeker::-webkit-slider-thumb:hover {\n    background: #019d91;\n  }\n  .seeker::-moz-range-thumb {\n    appearance: none;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: var(--lottie-player-seeker-thumb-color);\n    cursor: pointer;\n    margin-top: -5px;\n    border-color: transparent;\n  }\n  .seeker:focus-visible::-moz-range-thumb {\n    background: var(--lottie-player-seeker-thumb-color);\n    outline: 2px solid var(--lottie-player-seeker-track-color);\n    border: 1.5px solid #ffffff;\n  }\n\n  .error {\n    display: flex;\n    justify-content: center;\n    margin: auto;\n    height: 100%;\n    align-items: center;\n  }\n`;\n","/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type { RendererType, DotLottiePlayerState, PlaybackOptions, Manifest, ManifestTheme } from '@dotlottie/common';\nimport {\n  DotLottiePlayer as DotLottieCommonPlayer,\n  PlayerState,\n  PlayMode,\n  PlayerEvents,\n  logWarning,\n  createError,\n  DEFAULT_STATE,\n} from '@dotlottie/common';\nimport type { CSSResult, TemplateResult } from 'lit';\nimport { LitElement, html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport type { AnimationItem } from 'lottie-web';\n\nimport pkg from '../package.json';\n\nimport styles from './dotlottie-player.styles';\n\nexport interface Versions {\n  dotLottiePlayerVersion: string;\n  lottieWebVersion: string;\n}\n\nconst ELEMENT_NAME = 'dotlottie-player';\n\nexport { PlayMode, PlaybackOptions };\n\n/**\n * DotLottiePlayer web component class\n */\nexport class DotLottiePlayer extends LitElement {\n  @property({ type: String })\n  public defaultTheme = '';\n\n  /**\n   * Animation container.\n   */\n  @query('#animation')\n  protected container!: HTMLElement;\n\n  /**\n   * Play mode.\n   */\n  @property()\n  public playMode: PlayMode = PlayMode.Normal;\n\n  /**\n   * Autoplay animation on load.\n   */\n  @property({ type: Boolean })\n  public autoplay = false;\n\n  /**\n   * Background color.\n   */\n  @property({ type: String })\n  public background?: string = 'transparent';\n\n  /**\n   * Show controls.\n   */\n  @property({ type: Boolean })\n  public controls = false;\n\n  /**\n   * Direction of animation.\n   */\n  @property({ type: Number })\n  public direction = 1;\n\n  /**\n   * Whether to play on mouse hover\n   */\n  @property({ type: Boolean })\n  public hover = false;\n\n  /**\n   * Whether to loop animation.\n   */\n  @property({ type: String })\n  public loop?: string;\n\n  /**\n   * Renderer to use.\n   */\n  @property({ type: String })\n  public renderer = 'svg';\n\n  /**\n   * Animation speed.\n   */\n  @property({ type: Number })\n  public speed = 1;\n\n  /**\n   * Bodymovin JSON data or URL to JSON.\n   */\n  @property({ type: String })\n  public src?: string;\n\n  @property()\n  public intermission = 0;\n\n  /**\n   * Animation id as string or index to play on load.\n   */\n  @property({ type: String })\n  public activeAnimationId?: string | null = null;\n\n  @state()\n  private _seeker: number = 0;\n\n  private _dotLottieCommonPlayer: DotLottieCommonPlayer | undefined;\n\n  private _io?: IntersectionObserver;\n\n  private _loop?: boolean | number;\n\n  private _renderer?: RendererType = 'svg';\n\n  private _unsubscribeListeners?: () => void;\n\n  // Controls state\n  private _hasMultipleAnimations = false;\n\n  private _popoverIsOpen = false;\n\n  private _animationsTabIsOpen = false;\n\n  private _styleTabIsOpen = false;\n\n  private _themesForCurrentAnimation: ManifestTheme[] = [];\n\n  /**\n   * Get number of loops or boolean value of loop.\n   *\n   * @param loop - either a string representing a boolean or a number of loops to play\n   * @returns boolean - if loop was activated or not\n   */\n  private _parseLoop(loop: string): boolean | number {\n    const loopNb = parseInt(loop, 10);\n\n    if (Number.isInteger(loopNb) && loopNb > 0) {\n      this._loop = loopNb;\n\n      return loopNb;\n    } else if (typeof loop === 'string' && ['true', 'false'].includes(loop)) {\n      this._loop = loop === 'true';\n\n      return this._loop;\n    } else {\n      logWarning('loop must be a positive integer or a boolean');\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles click and drag actions on the progress track.\n   */\n  private _handleSeekChange(event: Event): void {\n    const target = event.currentTarget as HTMLInputElement;\n\n    try {\n      const value = parseInt(target.value, 10);\n\n      if (!this._dotLottieCommonPlayer) {\n        return;\n      }\n\n      const frame: number = (value / 100) * this._dotLottieCommonPlayer.totalFrames;\n\n      this.seek(frame);\n    } catch (error) {\n      throw createError('Error while seeking animation');\n    }\n  }\n\n  private _initListeners(): void {\n    const commonPlayer = this._dotLottieCommonPlayer;\n\n    if (commonPlayer === undefined) {\n      logWarning('player not initialized - cannot add event listeners', 'dotlottie-player-component');\n\n      return;\n    }\n\n    // Calculate and save the current progress of the animation\n    this._unsubscribeListeners = commonPlayer.state.subscribe(\n      (playerState: DotLottiePlayerState, prevState: DotLottiePlayerState) => {\n        this._seeker = playerState.seeker;\n\n        this.requestUpdate();\n\n        if (prevState.currentState !== playerState.currentState) {\n          this.dispatchEvent(new CustomEvent(playerState.currentState));\n        }\n\n        this.dispatchEvent(\n          new CustomEvent(PlayerEvents.Frame, {\n            detail: {\n              frame: playerState.frame,\n              seeker: playerState.seeker,\n            },\n          }),\n        );\n      },\n    );\n\n    // Handle animation play complete\n    commonPlayer.addEventListener('complete', () => {\n      this.dispatchEvent(new CustomEvent(PlayerEvents.Complete));\n    });\n\n    commonPlayer.addEventListener('loopComplete', () => {\n      this.dispatchEvent(new CustomEvent(PlayerEvents.LoopComplete));\n    });\n\n    // Handle lottie-web ready event\n    commonPlayer.addEventListener('DOMLoaded', () => {\n      const manifest = this.getManifest();\n\n      if (manifest && manifest.themes) {\n        this._themesForCurrentAnimation = manifest.themes.filter((theme) =>\n          theme.animations.includes(this.getCurrentAnimationId() || ''),\n        );\n      }\n\n      this.dispatchEvent(new CustomEvent(PlayerEvents.Ready));\n    });\n\n    // Handle animation data load complete\n    commonPlayer.addEventListener('data_ready', () => {\n      this.dispatchEvent(new CustomEvent(PlayerEvents.DataReady));\n    });\n\n    // Set error state when animation load fail event triggers\n    commonPlayer.addEventListener('data_failed', () => {\n      this.dispatchEvent(new CustomEvent(PlayerEvents.DataFail));\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (window) {\n      window.addEventListener('click', (event) => this._clickOutListener(event));\n    }\n  }\n\n  /**\n   * Configure and initialize lottie-web player instance.\n   */\n  public async load(\n    src: string | AnimationItem,\n    overrideRendererSettings?: Record<string, unknown>,\n    playbackOptions?: PlaybackOptions,\n  ): Promise<void> {\n    if (!this.shadowRoot) {\n      return;\n    }\n\n    /**\n     * User's can call the load method - only do new initialization inside firstConnected()\n     */\n    this._dotLottieCommonPlayer = new DotLottieCommonPlayer(src, this.container as HTMLDivElement, {\n      rendererSettings: overrideRendererSettings ?? {\n        scaleMode: 'noScale',\n        clearCanvas: true,\n        progressiveLoad: true,\n        hideOnTransparent: true,\n      },\n      hover: this.hasAttribute('hover') ? this.hover : undefined,\n      renderer: this.hasAttribute('renderer') ? this._renderer : undefined,\n      loop: this.hasAttribute('loop') ? this._loop : undefined,\n      direction: this.hasAttribute('direction') ? (this.direction === 1 ? 1 : -1) : undefined,\n      speed: this.hasAttribute('speed') ? this.speed : undefined,\n      intermission: this.hasAttribute('intermission') ? Number(this.intermission) : undefined,\n      playMode: this.hasAttribute('playMode') ? this.playMode : undefined,\n      autoplay: this.hasAttribute('autoplay') ? this.autoplay : undefined,\n      activeAnimationId: this.hasAttribute('activeAnimationId') ? this.activeAnimationId : undefined,\n      defaultTheme: this.hasAttribute('defaultTheme') ? this.defaultTheme : undefined,\n    });\n\n    await this._dotLottieCommonPlayer.load(playbackOptions);\n\n    this._hasMultipleAnimations = this.animationCount() > 1;\n\n    const manifest = this.getManifest();\n\n    if (manifest && manifest.themes) {\n      this._themesForCurrentAnimation = manifest.themes.filter((theme) =>\n        theme.animations.includes(this.getCurrentAnimationId() || ''),\n      );\n    }\n\n    /**\n     * Init done\n     */\n    this._initListeners();\n  }\n\n  /**\n   * @returns Current animation's id\n   */\n  public getCurrentAnimationId(): string | undefined {\n    return this._dotLottieCommonPlayer?.currentAnimationId;\n  }\n\n  /**\n   * @returns The current number of animations\n   */\n  public animationCount(): number {\n    if (!this._dotLottieCommonPlayer) return 0;\n\n    return this._dotLottieCommonPlayer.animations.size;\n  }\n\n  /**\n   * @returns The ids of all the animations\n   */\n  public animations(): string[] {\n    if (!this._dotLottieCommonPlayer) return [];\n\n    return Array.from(this._dotLottieCommonPlayer.animations.keys());\n  }\n\n  /**\n   * @returns The current playing animation\n   */\n  public currentAnimation(): string {\n    if (!this._dotLottieCommonPlayer || !this._dotLottieCommonPlayer.currentAnimationId) return '';\n\n    return this._dotLottieCommonPlayer.currentAnimationId;\n  }\n\n  /**\n   * @returns the current player states\n   */\n  public getState(): DotLottiePlayerState {\n    if (!this._dotLottieCommonPlayer) return DEFAULT_STATE;\n\n    return this._dotLottieCommonPlayer.getState();\n  }\n\n  /**\n   *\n   * @returns The current manifest.\n   */\n  public getManifest(): Manifest | undefined {\n    return this._dotLottieCommonPlayer?.getManifest();\n  }\n\n  /**\n   * @returns The current lottie-web instance.\n   */\n  public getLottie(): AnimationItem | undefined {\n    return this._dotLottieCommonPlayer?.getAnimationInstance();\n  }\n\n  /**\n   * @returns The current version of the dotLottie player and lottie-web.\n   */\n  public getVersions(): Versions {\n    return {\n      lottieWebVersion: DotLottieCommonPlayer.getLottieWebVersion(),\n      dotLottiePlayerVersion: `${pkg.version}`,\n    };\n  }\n\n  /**\n   * Play the previous animation. The order is taken from the manifest.\n   */\n  public previous(\n    getOptions?: (currPlaybackOptions: PlaybackOptions, manifestPlaybackOptions: PlaybackOptions) => PlaybackOptions,\n  ): void {\n    this._dotLottieCommonPlayer?.previous(getOptions);\n  }\n\n  /**\n   * Play the next animation. The order is taken from the manifest.\n   */\n  public next(\n    getOptions?: (currPlaybackOptions: PlaybackOptions, manifestPlaybackOptions: PlaybackOptions) => PlaybackOptions,\n  ): void {\n    this._dotLottieCommonPlayer?.next(getOptions);\n  }\n\n  /**\n   * Reset to the initial state defined in the manifest.\n   */\n  public reset(): void {\n    this._dotLottieCommonPlayer?.reset();\n  }\n\n  public play(\n    targetAnimation?: string | number,\n    getOptions?: (currPlaybackOptions: PlaybackOptions, manifestPlaybackOptions: PlaybackOptions) => PlaybackOptions,\n  ): void {\n    if (!this._dotLottieCommonPlayer) {\n      return;\n    }\n\n    this._dotLottieCommonPlayer.play(targetAnimation, getOptions);\n  }\n\n  /**\n   * Pause animation play.\n   */\n  public pause(): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.pause();\n  }\n\n  /**\n   * Stops animation play.\n   */\n  public stop(): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.stop();\n  }\n\n  /**\n   * Seek to a given frame.\n   */\n  public seek(value: number | string): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.seek(value);\n  }\n\n  /**\n   * Snapshot the current frame as SVG.\n   *\n   * If 'download' argument is boolean true, then a download is triggered in browser.\n   */\n  public snapshot(download = true): string {\n    if (!this.shadowRoot) return '';\n\n    // Get SVG element and serialize markup\n    const svgElement = this.shadowRoot.querySelector('.animation svg') as Node;\n    const data = new XMLSerializer().serializeToString(svgElement);\n\n    // Trigger file download\n    if (download) {\n      const element = document.createElement('a');\n\n      element.href = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(data)}`;\n      element.download = `download_${this._seeker}.svg`;\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n    }\n\n    return data;\n  }\n\n  /**\n   * Set theme\n   */\n  public setTheme(theme: string): void {\n    this._dotLottieCommonPlayer?.setDefaultTheme(theme);\n  }\n\n  /**\n   * @returns All the theme keys\n   */\n  public themes(): string[] {\n    if (!this._dotLottieCommonPlayer) return [];\n\n    return Array.from(this._dotLottieCommonPlayer.themes.keys());\n  }\n\n  /**\n   * @returns The current applied theme\n   */\n  public getDefaultTheme(): string {\n    if (!this._dotLottieCommonPlayer) return '';\n\n    return this._dotLottieCommonPlayer.defaultTheme;\n  }\n\n  /**\n   * Freeze animation play.\n   * This internal state pauses animation and is used to differentiate between\n   * user requested pauses and component instigated pauses.\n   */\n  private _freeze(): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.freeze();\n  }\n\n  /**\n   * Sets animation play speed.\n   *\n   * @param value - Playback speed.\n   */\n  public setSpeed(value = 1): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.setSpeed(value);\n  }\n\n  /**\n   * Animation play direction.\n   *\n   * @param value - Direction values.\n   */\n  public setDirection(value: 1 | -1): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.setDirection(value);\n  }\n\n  /**\n   * Sets the looping of the animation.\n   *\n   * @param value - Whether to enable looping. Boolean true enables looping.\n   */\n  public setLooping(value: boolean | number): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.setLoop(value);\n  }\n\n  public isLooping(): number | boolean {\n    if (!this._dotLottieCommonPlayer) return false;\n\n    return this._dotLottieCommonPlayer.loop;\n  }\n\n  /**\n   * Toggle playing state.\n   */\n  public togglePlay(): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.togglePlay();\n  }\n\n  /**\n   * Toggles animation looping.\n   */\n  public toggleLooping(): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.toggleLoop();\n  }\n\n  /**\n   * Sets the player mode\n   * @param mode - The mode to set ('normal', 'bounce')\n   */\n  public setPlayMode(mode: PlayMode): void {\n    if (!this._dotLottieCommonPlayer) return;\n\n    this._dotLottieCommonPlayer.setMode(mode);\n  }\n\n  /**\n   * Reverts PlaybackOptions to manifest values instead of player props.\n   */\n  public revertToManifestValues(playbackKeys?: Array<keyof PlaybackOptions | 'activeAnimationId'>): void {\n    this._dotLottieCommonPlayer?.revertToManifestValues(playbackKeys);\n  }\n\n  /**\n   * Returns the styles for the component. Overriding causes styles to not be applied.\n   */\n  public static get styles(): CSSResult {\n    return styles;\n  }\n\n  /**\n   * Initialize everything on component first render.\n   */\n  protected override async firstUpdated(): Promise<void> {\n    this.container = this.shadowRoot?.querySelector('#animation') as HTMLElement;\n\n    // Add intersection observer for detecting component being out-of-view.\n    if ('IntersectionObserver' in window) {\n      this._io = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\n        if (entries[0] !== undefined && entries[0].isIntersecting) {\n          if (this._dotLottieCommonPlayer?.currentState === PlayerState.Frozen) {\n            this.play();\n          }\n        } else if (this._dotLottieCommonPlayer?.currentState === PlayerState.Playing) {\n          this._freeze();\n        }\n      });\n\n      this._io.observe(this.container);\n    }\n\n    // Parse loop attribute if present as a number or string-boolean\n    // Also check if plain 'loop' prop is present\n    if (this.loop) {\n      this._parseLoop(this.loop);\n    } else if (this.hasAttribute('loop')) {\n      this._parseLoop('true');\n    }\n\n    // Parse renderer and set private variable\n    if (this.renderer === 'svg') this._renderer = 'svg';\n    else if (this.renderer === 'canvas') this._renderer = 'canvas';\n    else if (this.renderer === 'html') this._renderer = 'html';\n\n    // Setup lottie player\n    if (this.src) {\n      await this.load(this.src);\n    }\n  }\n\n  /**\n   * Cleanup on component destroy.\n   */\n  public override disconnectedCallback(): void {\n    // Remove intersection observer for detecting component being out-of-view.\n    if (this._io) {\n      this._io.disconnect();\n      this._io = undefined;\n    }\n\n    // Destroy lottie\n    this._dotLottieCommonPlayer?.destroy();\n\n    this._unsubscribeListeners?.();\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (window) {\n      window.removeEventListener('click', (event) => this._clickOutListener(event));\n    }\n  }\n\n  private _clickOutListener(event: MouseEvent): void {\n    const inside = event.composedPath().some((element) => {\n      if (element instanceof HTMLElement) {\n        return element.classList.contains('popover') || element.id === 'lottie-animation-options';\n      }\n\n      return false;\n    });\n\n    if (!inside && this._popoverIsOpen) {\n      this._popoverIsOpen = false;\n      this.requestUpdate();\n    }\n  }\n\n  protected renderControls(): TemplateResult | undefined {\n    const isPlaying: boolean = this._dotLottieCommonPlayer?.currentState === PlayerState.Playing;\n    const isPaused: boolean = this._dotLottieCommonPlayer?.currentState === PlayerState.Paused;\n\n    return html`\n      <div id=\"lottie-controls\" aria-label=\"lottie-animation-controls\" class=\"toolbar\">\n        ${this._hasMultipleAnimations\n          ? html`\n              <button @click=${(): void => this.previous()} aria-label=\"Previous animation\" class=\"btn-spacing-left\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M1.69214 13.5C1.69214 13.7761 1.916 14 2.19214 14C2.46828 14 2.69214 13.7761 2.69214 13.5L2.69214 2.5C2.69214 2.22386 2.46828 2 2.19214 2C1.916 2 1.69214 2.22386 1.69214 2.5V13.5ZM12.5192 13.7828C13.1859 14.174 14.0254 13.6933 14.0254 12.9204L14.0254 3.0799C14.0254 2.30692 13.1859 1.8262 12.5192 2.21747L4.13612 7.13769C3.47769 7.52414 3.47769 8.4761 4.13612 8.86255L12.5192 13.7828Z\"\n                    fill=\"#20272C\"\n                  />\n                </svg>\n              </button>\n            `\n          : html``}\n        <button\n          id=\"lottie-play-button\"\n          @click=${(): void => {\n            this.togglePlay();\n          }}\n          class=${isPlaying || isPaused\n            ? `active ${this._hasMultipleAnimations ? 'btn-spacing-center' : 'btn-spacing-right'}`\n            : `${this._hasMultipleAnimations ? 'btn-spacing-center' : 'btn-spacing-right'}`}\n          aria-label=\"play / pause animation\"\n        >\n          ${isPlaying\n            ? html`\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M3.99996 2C3.26358 2 2.66663 2.59695 2.66663 3.33333V12.6667C2.66663 13.403 3.26358 14 3.99996 14H5.33329C6.06967 14 6.66663 13.403 6.66663 12.6667V3.33333C6.66663 2.59695 6.06967 2 5.33329 2H3.99996Z\"\n                    fill=\"#20272C\"\n                  />\n                  <path\n                    d=\"M10.6666 2C9.93025 2 9.33329 2.59695 9.33329 3.33333V12.6667C9.33329 13.403 9.93025 14 10.6666 14H12C12.7363 14 13.3333 13.403 13.3333 12.6667V3.33333C13.3333 2.59695 12.7363 2 12 2H10.6666Z\"\n                    fill=\"#20272C\"\n                  />\n                </svg>\n              `\n            : html`\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M3.33337 3.46787C3.33337 2.52312 4.35948 1.93558 5.17426 2.41379L12.8961 6.94592C13.7009 7.41824 13.7009 8.58176 12.8961 9.05408L5.17426 13.5862C4.35948 14.0644 3.33337 13.4769 3.33337 12.5321V3.46787Z\"\n                    fill=\"#20272C\"\n                  />\n                </svg>\n              `}\n        </button>\n        ${this._hasMultipleAnimations\n          ? html`\n              <button @click=${(): void => this.next()} aria-label=\"Next animation\" class=\"btn-spacing-right\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M14.3336 2.5C14.3336 2.22386 14.1097 2 13.8336 2C13.5574 2 13.3336 2.22386 13.3336 2.5V13.5C13.3336 13.7761 13.5574 14 13.8336 14C14.1097 14 14.3336 13.7761 14.3336 13.5V2.5ZM3.50618 2.21722C2.83954 1.82595 2 2.30667 2 3.07965V12.9201C2 13.6931 2.83954 14.1738 3.50618 13.7825L11.8893 8.86231C12.5477 8.47586 12.5477 7.52389 11.8893 7.13745L3.50618 2.21722Z\"\n                    fill=\"#20272C\"\n                  />\n                </svg>\n              </button>\n            `\n          : html``}\n        <input\n          id=\"lottie-seeker-input\"\n          class=\"seeker ${this._dotLottieCommonPlayer?.direction === -1 ? 'to-left' : ''}\"\n          type=\"range\"\n          min=\"0\"\n          step=\"1\"\n          max=\"100\"\n          .value=${this._seeker}\n          @input=${(event: Event): void => this._handleSeekChange(event)}\n          @mousedown=${(): void => {\n            this._freeze();\n          }}\n          @mouseup=${(): void => {\n            this._dotLottieCommonPlayer?.unfreeze();\n          }}\n          aria-valuemin=\"1\"\n          aria-valuemax=\"100\"\n          role=\"slider\"\n          aria-valuenow=${this._seeker}\n          aria-label=\"lottie-seek-input\"\n          style=${`--seeker: ${this._seeker}`}\n        />\n        <button\n          id=\"lottie-loop-toggle\"\n          @click=${(): void => this.toggleLooping()}\n          class=${this._dotLottieCommonPlayer?.loop ? 'active btn-spacing-left' : 'btn-spacing-left'}\n          aria-label=\"loop-toggle\"\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M10.8654 2.31319C11.0607 2.11793 11.3772 2.11793 11.5725 2.31319L13.4581 4.19881C13.6534 4.39407 13.6534 4.71066 13.4581 4.90592L11.5725 6.79154C11.3772 6.9868 11.0607 6.9868 10.8654 6.79154C10.6701 6.59628 10.6701 6.27969 10.8654 6.08443L11.6162 5.33362H4V6.66695C4 7.03514 3.70152 7.33362 3.33333 7.33362C2.96514 7.33362 2.66666 7.03514 2.66666 6.66695L2.66666 4.66695C2.66666 4.29876 2.96514 4.00028 3.33333 4.00028H11.8454L10.8654 3.0203C10.6701 2.82504 10.6701 2.50846 10.8654 2.31319Z\"\n              fill=\"currentColor\"\n            />\n            <path\n              d=\"M12.4375 11.9999C12.8057 11.9999 13.1042 11.7014 13.1042 11.3332V9.33321C13.1042 8.96502 12.8057 8.66655 12.4375 8.66655C12.0693 8.66655 11.7708 8.96502 11.7708 9.33321V10.6665H4.15462L4.90543 9.91573C5.10069 9.72047 5.10069 9.40389 4.90543 9.20862C4.71017 9.01336 4.39359 9.01336 4.19832 9.20862L2.31271 11.0942C2.11744 11.2895 2.11744 11.6061 2.31271 11.8013L4.19832 13.687C4.39359 13.8822 4.71017 13.8822 4.90543 13.687C5.10069 13.4917 5.10069 13.1751 4.90543 12.9799L3.92545 11.9999H12.4375Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        </button>\n        ${this._hasMultipleAnimations\n          ? html`\n              <button\n                id=\"lottie-animation-options\"\n                @click=${(): void => {\n                  this._popoverIsOpen = !this._popoverIsOpen;\n                  this.requestUpdate();\n                }}\n                aria-label=\"options\"\n                class=\"btn-spacing-right\"\n                style=${`background-color: ${\n                  this._popoverIsOpen ? 'var(--lottie-player-toolbar-icon-hover-color)' : ''\n                }`}\n              >\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M8.33337 11.6666C7.78109 11.6666 7.33337 12.1143 7.33337 12.6666C7.33337 13.2189 7.78109 13.6666 8.33337 13.6666C8.88566 13.6666 9.33337 13.2189 9.33337 12.6666C9.33337 12.1143 8.88566 11.6666 8.33337 11.6666Z\"\n                    fill=\"#20272C\"\n                  />\n                  <path\n                    d=\"M7.33337 7.99992C7.33337 7.44763 7.78109 6.99992 8.33337 6.99992C8.88566 6.99992 9.33338 7.44763 9.33338 7.99992C9.33338 8.5522 8.88566 8.99992 8.33337 8.99992C7.78109 8.99992 7.33337 8.5522 7.33337 7.99992Z\"\n                    fill=\"#20272C\"\n                  />\n                  <path\n                    d=\"M7.33337 3.33325C7.33337 2.78097 7.78109 2.33325 8.33337 2.33325C8.88566 2.33325 9.33338 2.78097 9.33338 3.33325C9.33338 3.88554 8.88566 4.33325 8.33337 4.33325C7.78109 4.33325 7.33337 3.88554 7.33337 3.33325Z\"\n                    fill=\"#20272C\"\n                  />\n                </svg>\n              </button>\n            `\n          : html``}\n      </div>\n      ${this._popoverIsOpen\n        ? html`\n            <div\n              id=\"popover\"\n              class=\"popover\"\n              tabindex=\"0\"\n              aria-label=\"lottie animations themes popover\"\n              style=\"min-height: ${this.themes().length > 0 ? '84px' : 'auto'}\"\n            >\n              ${!this._animationsTabIsOpen && !this._styleTabIsOpen\n                ? html`\n                    <button\n                      class=\"popover-button\"\n                      tabindex=\"0\"\n                      aria-label=\"animations\"\n                      @click=${(): void => {\n                        this._animationsTabIsOpen = !this._animationsTabIsOpen;\n                        this.requestUpdate();\n                      }}\n                      @keydown=${(key: KeyboardEvent): void => {\n                        if (key.code === 'Space' || key.code === 'Enter') {\n                          this._animationsTabIsOpen = !this._animationsTabIsOpen;\n                          this.requestUpdate();\n                        }\n                      }}\n                    >\n                      <div class=\"popover-button-text\">Animations</div>\n                      <div>\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                            fill-rule=\"evenodd\"\n                            clip-rule=\"evenodd\"\n                            d=\"M10.4697 17.5303C10.1768 17.2374 10.1768 16.7626 10.4697 16.4697L14.9393 12L10.4697 7.53033C10.1768 7.23744 10.1768 6.76256 10.4697 6.46967C10.7626 6.17678 11.2374 6.17678 11.5303 6.46967L16.5303 11.4697C16.8232 11.7626 16.8232 12.2374 16.5303 12.5303L11.5303 17.5303C11.2374 17.8232 10.7626 17.8232 10.4697 17.5303Z\"\n                            fill=\"#4C5863\"\n                          />\n                        </svg>\n                      </div>\n                    </button>\n                  `\n                : html``}\n              ${this.themes().length > 0 && !this._styleTabIsOpen && !this._animationsTabIsOpen\n                ? html` <button\n                    class=\"popover-button\"\n                    aria-label=\"Themes\"\n                    @click=${(): void => {\n                      this._styleTabIsOpen = !this._styleTabIsOpen;\n                      this.requestUpdate();\n                    }}\n                    @keydown=${(key: KeyboardEvent): void => {\n                      if (key.code === 'Space' || key.code === 'Enter') {\n                        this._styleTabIsOpen = !this._styleTabIsOpen;\n                        this.requestUpdate();\n                      }\n                      // eslint-disable-next-line no-secrets/no-secrets\n                    }}\n                  >\n                    <div class=\"popover-button-text\">Themes</div>\n                    <div>\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                          d=\"M10.4697 17.5303C10.1768 17.2374 10.1768 16.7626 10.4697 16.4697L14.9393 12L10.4697 7.53033C10.1768 7.23744 10.1768 6.76256 10.4697 6.46967C10.7626 6.17678 11.2374 6.17678 11.5303 6.46967L16.5303 11.4697C16.8232 11.7626 16.8232 12.2374 16.5303 12.5303L11.5303 17.5303C11.2374 17.8232 10.7626 17.8232 10.4697 17.5303Z\"\n                          fill=\"#4C5863\"\n                        />\n                      </svg>\n                    </div>\n                  </button>`\n                : ''}\n              ${this._animationsTabIsOpen\n                ? html`<button\n                      class=\"option-title-button\"\n                      aria-label=\"Back to main popover menu\"\n                      @click=${(): void => {\n                        this._animationsTabIsOpen = !this._animationsTabIsOpen;\n                        this.requestUpdate();\n                      }}\n                    >\n                      <div class=\"option-title-chevron\">\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                            fill-rule=\"evenodd\"\n                            clip-rule=\"evenodd\"\n                            d=\"M13.5303 6.46967C13.8232 6.76256 13.8232 7.23744 13.5303 7.53033L9.06066 12L13.5303 16.4697C13.8232 16.7626 13.8232 17.2374 13.5303 17.5303C13.2374 17.8232 12.7626 17.8232 12.4697 17.5303L7.46967 12.5303C7.17678 12.2374 7.17678 11.7626 7.46967 11.4697L12.4697 6.46967C12.7626 6.17678 13.2374 6.17678 13.5303 6.46967Z\"\n                            fill=\"#20272C\"\n                          />\n                        </svg>\n                      </div>\n                      <div>Animations</div>\n                    </button>\n                    <div class=\"option-title-separator\"></div>\n                    <div class=\"option-row\">\n                      <ul>\n                        ${this.animations().map((animationName) => {\n                          return html`\n                            <li>\n                              <button\n                                class=\"option-button\"\n                                aria-label=${`${animationName}`}\n                                @click=${(): void => {\n                                  this._animationsTabIsOpen = !this._animationsTabIsOpen;\n                                  this._popoverIsOpen = !this._popoverIsOpen;\n                                  this.setTheme('');\n                                  this.play(animationName);\n                                  this.requestUpdate();\n                                }}\n                                @keydown=${(key: KeyboardEvent): void => {\n                                  if (key.code === 'Space' || key.code === 'Enter') {\n                                    this._animationsTabIsOpen = !this._animationsTabIsOpen;\n                                    this._popoverIsOpen = !this._popoverIsOpen;\n                                    this.setTheme('');\n                                    this.play(animationName);\n                                    this.requestUpdate();\n                                  }\n                                }}\n                              >\n                                <div class=\"option-tick\">\n                                  ${this.currentAnimation() === animationName\n                                    ? html`\n                                        <svg\n                                          width=\"24\"\n                                          height=\"24\"\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                          <path\n                                            fill-rule=\"evenodd\"\n                                            clip-rule=\"evenodd\"\n                                            d=\"M20.5281 5.9372C20.821 6.23009 20.821 6.70497 20.5281 6.99786L9.46297 18.063C9.32168 18.2043 9.12985 18.2833 8.93004 18.2826C8.73023 18.2819 8.53895 18.2015 8.39864 18.0593L3.46795 13.0596C3.1771 12.7647 3.1804 12.2898 3.47532 11.999C3.77024 11.7081 4.2451 11.7114 4.53595 12.0063L8.93634 16.4683L19.4675 5.9372C19.7604 5.64431 20.2352 5.64431 20.5281 5.9372Z\"\n                                            fill=\"#20272C\"\n                                          />\n                                        </svg>\n                                      `\n                                    : html``}\n                                </div>\n                                <div>${animationName}</div>\n                              </button>\n                            </li>\n                          `;\n                        })}\n                      </ul>\n                    </div> `\n                : html``}\n              ${this._styleTabIsOpen\n                ? html`<div class=\"option-title-themes-row\">\n                      <button\n                        class=\"option-title-button themes\"\n                        aria-label=\"Back to main popover menu\"\n                        @click=${(): void => {\n                          this._styleTabIsOpen = !this._styleTabIsOpen;\n                          this.requestUpdate();\n                        }}\n                      >\n                        <div class=\"option-title-chevron\">\n                          <svg\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                          >\n                            <path\n                              fill-rule=\"evenodd\"\n                              clip-rule=\"evenodd\"\n                              d=\"M13.5303 6.46967C13.8232 6.76256 13.8232 7.23744 13.5303 7.53033L9.06066 12L13.5303 16.4697C13.8232 16.7626 13.8232 17.2374 13.5303 17.5303C13.2374 17.8232 12.7626 17.8232 12.4697 17.5303L7.46967 12.5303C7.17678 12.2374 7.17678 11.7626 7.46967 11.4697L12.4697 6.46967C12.7626 6.17678 13.2374 6.17678 13.5303 6.46967Z\"\n                              fill=\"#20272C\"\n                            />\n                          </svg>\n                        </div>\n                        <div class=\"option-title-text\">Themes</div>\n                        ${this._dotLottieCommonPlayer?.defaultTheme === ''\n                          ? html``\n                          : html`\n                              <button\n                                class=\"reset-btn\"\n                                @click=${(): void => {\n                                  this.setTheme('');\n                                  this.requestUpdate();\n                                }}\n                              >\n                                Reset\n                              </button>\n                            `}\n                      </button>\n                    </div>\n                    <div class=\"option-title-separator\"></div>\n                    <div class=\"option-row\">\n                      <ul>\n                        ${this._themesForCurrentAnimation.map((themeName) => {\n                          return html`\n                            <li>\n                              <button\n                                class=\"option-button\"\n                                aria-label=\"${themeName.id}\"\n                                @click=${(): void => {\n                                  this.setTheme(themeName.id);\n                                }}\n                                @keydown=${(key: KeyboardEvent): void => {\n                                  if (key.code === 'Space' || key.code === 'Enter') {\n                                    this.setTheme(themeName.id);\n                                  }\n                                }}\n                              >\n                                <div class=\"option-tick\">\n                                  ${this.getDefaultTheme() === themeName.id\n                                    ? html`\n                                        <svg\n                                          width=\"24\"\n                                          height=\"24\"\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"none\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                          <path\n                                            fill-rule=\"evenodd\"\n                                            clip-rule=\"evenodd\"\n                                            d=\"M20.5281 5.9372C20.821 6.23009 20.821 6.70497 20.5281 6.99786L9.46297 18.063C9.32168 18.2043 9.12985 18.2833 8.93004 18.2826C8.73023 18.2819 8.53895 18.2015 8.39864 18.0593L3.46795 13.0596C3.1771 12.7647 3.1804 12.2898 3.47532 11.999C3.77024 11.7081 4.2451 11.7114 4.53595 12.0063L8.93634 16.4683L19.4675 5.9372C19.7604 5.64431 20.2352 5.64431 20.5281 5.9372Z\"\n                                            fill=\"#20272C\"\n                                          />\n                                        </svg>\n                                      `\n                                    : html``}\n                                </div>\n                                <div>${themeName.id}</div>\n                              </button>\n                            </li>\n                          `;\n                        })}\n                      </ul>\n                    </div>`\n                : html``}\n            </div>\n          `\n        : html``}\n    `;\n  }\n\n  public override render(): TemplateResult | void {\n    const className: string = this.controls ? 'main controls' : 'main';\n    const animationClass: string = this.controls ? 'animation controls' : 'animation';\n\n    return html`\n      <div id=\"animation-container\" class=${className} lang=\"en\" role=\"img\" aria-label=\"lottie-animation-container\">\n        <div id=\"animation\" class=${animationClass} style=\"background:${this.background};\">\n          ${this._dotLottieCommonPlayer?.currentState === PlayerState.Error\n            ? html` <div class=\"error\">⚠️</div> `\n            : undefined}\n        </div>\n        ${this.controls ? this.renderControls() : undefined}\n      </div>\n    `;\n  }\n}\n\nif (!customElements.get(ELEMENT_NAME)) {\n  customElements.define(ELEMENT_NAME, DotLottiePlayer);\n}\n"]}